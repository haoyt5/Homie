{"version":3,"sources":["components/store/actions/authActions.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/auth/SignIn.js","components/auth/SignUp.js","components/layout/Loader.js","components/layout/EmptyCard.js","components/tasks/TaskList.js","components/chart/BarChart.js","components/dashboard/Landing.js","components/store/actions/groupActions.js","components/dashboard/GroupPopup.js","components/config/fbConfig.js","components/store/actions/taskActions.js","components/alert/InfoWindow.js","components/dashboard/Dashboard.js","components/tasks/CreateTask.js","components/layout/PageLoader.js","components/tasks/TaskDetails.js","components/alert/AlertWindow.js","components/tasks/TaskMemo.js","components/tasks/TaskProcess.js","components/auth/SignUpGroup.js","components/auth/SignInGroup.js","components/auth/SignGroup.js","App.js","components/store/reducers/authReducer.js","components/store/reducers/taskReducer.js","components/store/reducers/groupReducer.js","components/store/reducers/rootReducer.js","index.js"],"names":["randomColor","require","googleLogin","dispatch","getState","_ref4","initName","initLName","getFirebase","getFirestore","firebase","firestore","provider","auth","GoogleAuthProvider","randomcolor","luminosity","signInWithPopup","then","result","console","log","_result$additionalUse","additionalUserInfo","profile","given_name","family_name","picture","email","isNewUser","user","collection","doc","uid","set","firstname","lastname","initials","photoURL","createAt","FieldValue","serverTimestamp","userColor","window","location","hash","type","catch","err","where","get","querySnapshot","forEach","defaultGroup","data","error","connect","signOut","_ref2","props","react_default","a","createElement","className","react_router_dom","to","onClick","SignedOutLinks","Navbar","_this$props","this","links","layout_SignedInLinks","layout_SignedOutLinks","Component","state","SignIn","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","password","handleChange","e","setState","defineProperty","target","id","value","handleSubmit","preventDefault","signIn","handleGoogleLogin","inherits","createClass","key","react_router","authError","onSubmit","htmlFor","onChange","creds","credentials","_ref","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","_ref3","createUserWithEmailAndPassword","resp","currentUser","updateProfile","displayName","Loader","EmptyCard","TaskList","completeTasks","pendingTasks","assignedTasks","unassignedTasks","index_es","icon","faPlusSquare","fetchComplete","map","task","faQuestion","title","toDate","toDateString","author","content","verifybyImage","faCamera","faStopwatch","expiryDate","layout_EmptyCard","layout_Loader","assign","assignedToURL","src","alt","style","backgroundColor","assignedToColor","assignedTo","BarChart","drawChart","margin","graphWidth","graphHeight","rects","d3","append","attr","selectAll","max","d","points","x","domain","range","y","padding","enter","bandwidth","i","text","Landing","fetchGroupDetails","userUid","groupData","GroupPopup","handleSwitch","groupUid","switchGroup","togglePopup","_this2","groupsData","faGripLines","group","groupName","faDoorClosed","faPlus","groupsUid","newGroupUid","update","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","storage","fetchTask","taskUid","taskData","InfoWindow","handleConfirm","leaveGroup","faRunning","toggleLeaveGroup","confirmTaskAlert","_ref7","_firestore$collection3","_getState$firebase$pr","newDefaultGroup","newGroupsUid","filter","item","members","arrayRemove","delete","Dashboard","groupPopup","leavePopup","memberBar","settingBar","fetchGroupList","fetchTaskList","prevState","toggleSettingBar","toggleMemberbar","toggleLeaveGruop","membersInfo","completeTasksData","pendingTasksData","assignedTasksData","unassignedTasksData","tasksData","pointsData","membersPointsRecord","keys","push","dashboard_GroupPopup","bind","alert_InfoWindow","defaultGroupData","faAngleDown","faCog","faUser","faUserAlt","faDoorOpen","faUnlink","chart_BarChart","width","height","tasks_TaskList","dashboard_Landing","membersPointsData","pointsRecord","tasks","ordered","groups","complete","documentSnapshot","toConsumableArray","orderBy","CreatTask","category","Date","getTime","handleBack","href","toggleChange","handleDateChange","date","createTask","handleAlert","taskErr","faExclamationTriangle","material_ui_pickers_esm","utils","DateFnsUtils","name","checked","authorUid","add","objectSpread","authorPhotoURL","authorColor","assignedAt","approve","verifiedBy","verifiedAt","lastUpdateAt","status","PageLoader","TaskDetails","handleAccept","acceptTask","match","params","taskdetails","_this$props$taskdetai","toTimeString","replace","layout_PageLoader","ownProps","_ref5","userName","assignedToUid","arrayUnion","AlertWindow","errorMessage","errMessage","TaskMemo","files","imagePreviewUrl","imagefile","URL","createObjectURL","file","handleReportWithImage","reportTaskWithImage","handleReport","reportTaskWOImage","fileInput","React","createRef","alert_AlertWindow","action","ref","_ref6","mainImage","child","put","UploadTaskSnapshot","getDownloadURL","imageurl","finishAt","pendingImgURL","_firestore$collection2","alert","TaskProcess","handleApprove","approveTask","_ref8","newPoints","approvedAt","approvedBy","approvedByURL","approvedByColor","_firestore$collection5","SignUpGroup","groupId","groupPassword","signUpGroup","groupError","newGroup","groupValidate","SignInGroup","signInGroup","groupSignInValidate","docs","_doc$data","indexOf","_firestore$collection","SignGroup","activeClassName","path","component","App","layout_Navbar","exact","auth_SignUp","CreateTask","initState","authReducer","undefined","message","taskReducer","switchError","groupReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseStateName","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"0RAAMA,EAAcC,EAAQ,KAgEfC,EAAc,WACvB,OAAO,SAACC,EAAUC,EAAXC,GAAmD,IAKlDC,EACAC,EANqBC,EAA6BH,EAA7BG,YAAaC,EAAgBJ,EAAhBI,aAChCC,EAAWF,IACXG,EAAYF,IACZG,EAAW,IAAIF,EAASG,KAAKC,mBAC/BC,EAAcf,EAAY,CAACgB,WAAY,WAG3CN,EAASG,OAAOI,gBAAgBL,GAC/BM,KAAK,SAACC,GACHC,QAAQC,IAAIF,GADC,IAAAG,EAEqCH,EAAOI,mBAAmBC,QAAnEC,EAFIH,EAEJG,WAAWC,EAFPJ,EAEOI,YAAaC,EAFpBL,EAEoBK,QAAQC,EAF5BN,EAE4BM,MACzC,GAAIT,EAAOI,mBAAmBM,UAAW,CACrCvB,EAAWmB,GAAa,IACxBlB,EAAYmB,GAAc,IAFW,IAG7BI,EAASX,EAATW,KAERnB,EAAUoB,WAAW,SAASC,IAAIF,EAAKG,KAAKC,IAAI,CAC5CC,UAAWV,GAAc,GACzBW,SAAUV,GAAe,GACzBW,SAAW/B,EAAS,GAAKC,EAAU,GACnC+B,SAAUX,EACVC,MAAOA,EACPW,SAAU5B,EAAU6B,WAAWC,kBAC/BC,UAAU3B,IAEbG,KAAK,kBAAOyB,OAAOC,SAASC,KAAO,uBACnC3B,KAAK,kBAAMf,EAAS,CAAE2C,KAAM,oBAC5BC,MAAM,SAACC,GACJ5B,QAAQC,IAAI2B,GACZ7C,EAAS,CAAE2C,KAAM,eAAgBE,UAGrCrC,EAAUoB,WAAW,SAASkB,MAAM,QAAQ,KAAKrB,GAAOsB,MACvDhC,KAAM,SAAAiC,GACHA,EAAcC,QAAS,SAAApB,GACnB,IAAMqB,EAAerB,EAAIsB,OAAOD,cAAgB,KAC5CA,GACAjC,QAAQC,IAAIgC,GACZlD,EAAS,CAAE2C,KAAM,kBACjBH,OAAOC,SAASC,KAAO,OAEvBzB,QAAQC,IAAIgC,GACZlD,EAAS,CAAE2C,KAAM,kBACjBH,OAAOC,SAASC,KAAO,0BAInC1C,EAAS,CAAE2C,KAAM,oBAEpBC,MAAM,SAASQ,GAChBnC,QAAQC,IAAI,QAAQkC,GACpBpD,EAAS,CAAE2C,KAAM,cAAeS,cC5F7BC,cAAQ,KANI,SAACrD,GACxB,MAAO,CACHsD,QAAQ,kBAAMtD,EDFX,SAACA,EAAUC,EAAXsD,IACclD,EADyBkD,EAAjBlD,eAEhBK,OAAO4C,UAAUvC,KAAK,WAC3Bf,EAAS,CAAC2C,KAAM,sBACjB5B,KAAK,WACJyB,OAAOC,SAASC,KAAO,YCCpBW,CAhBO,SAACG,GAAU,IACrBnC,EAAYmC,EAAZnC,QACR,OACIoC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,QAAQF,UAAU,eAA9B,eACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,cAAcG,QAAUP,EAAMF,SAAxD,WACAG,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,iBAAiBvC,EAAQa,aCFhD8B,EATQ,WACnB,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,UAAUF,UAAU,eAAhC,WACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,UAASF,UAAU,gBAA/B,YCFNK,mLAEM,IAAAC,EACuBC,KAAKX,MAAxB9C,EADJwD,EACIxD,KAAOW,EADX6C,EACW7C,QACT+C,EAAQ1D,EAAKoB,IAAO2B,EAAAC,EAAAC,cAACU,EAAD,CAAehD,QAAUA,IAAeoC,EAAAC,EAAAC,cAACW,EAAD,MAClE,OACAb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,aAAvB,SACEQ,WATGG,aAuBNlB,cANS,SAAEmB,GACtB,MAAO,CACH9D,KAAM8D,EAAMjE,SAASG,KACrBW,QAAQmD,EAAMjE,SAASc,UAGhBgC,CAAyBY,GCvB3BQ,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAAM,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAAV,MAAAQ,EAAAE,OAAAS,EAAA,EAAAT,CAAAJ,IAAAc,KAAAC,MAAAb,EAAA,CAAAR,MAAAsB,OAAAP,MACIV,MAAQ,CACJ/C,MAAO,GACPiE,SAAU,IAHlBd,EAKIe,aAAe,SAACC,GACZhB,EAAKiB,SAALhB,OAAAiB,EAAA,EAAAjB,CAAA,GACIe,EAAEG,OAAOC,GAAKJ,EAAEG,OAAOE,SAPnCrB,EAWIsB,aAAe,SAACN,GACZA,EAAEO,iBACFvB,EAAKpB,MAAM4C,OAAOxB,EAAKJ,QAb/BI,EAeIyB,kBAAoB,SAACT,GACnBhB,EAAKpB,MAAMzD,eAhBjB6E,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAAJ,EAAAC,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAJ,EAAA,EAAA+B,IAAA,oBAAAP,MAAA,WAkBuB,IAAA/B,EACSC,KAAKX,MAAvB9C,EADSwD,EACTxD,KAAMW,EADG6C,EACH7C,QACd,OAAIX,EAAKoB,MAAQT,EAAQ6B,aAAqBO,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAI,sBACxDpD,EAAKoB,KAAOT,EAAQ6B,aAAqBO,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAI,WAA3D,IArBN,CAAA0C,IAAA,qBAAAP,MAAA,eAAAO,IAAA,SAAAP,MAAA,WA0BW,IACCS,EAAcvC,KAAKX,MAAnBkD,UAGR,OACEjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQI,QAASI,KAAKkC,kBACdzC,UAAU,iBAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,0BAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,sBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAf,MACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,wBAGJH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACZ+C,SAAUxC,KAAK+B,cACfzC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,SAAtC,SACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,QACJqD,GAAG,QACHa,SAAU1C,KAAKwB,gBAE3BlC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAcgD,QAAQ,YAAvC,YACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,WACJqD,GAAG,WACHa,SAAU1C,KAAKwB,gBAE3BlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACX8C,EAAYjD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAc8C,GAAiB,MAE5DjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAlB,mBAnEpBa,EAAA,CAA4BF,aA4FblB,cAbS,SAACmB,GACvB,MAAO,CACLkC,UAAWlC,EAAM9D,KAAKgG,UACtBhG,KAAM8D,EAAMjE,SAASG,KACrBW,QAASmD,EAAMjE,SAASc,UAGD,SAACrB,GAC1B,MAAO,CACLoG,OAAQ,SAACU,GAAD,OAAW9G,GJ5FA+G,EI4FgBD,EJ3F5B,SAAC9G,EAAUC,EAAX+G,IACc3G,EADyB2G,EAAjB3G,eAEhBK,OAAOuG,2BACZF,EAAYtF,MACZsF,EAAYrB,UACd3E,KAAK,WACHf,EAAS,CAAE2C,KAAM,oBAClB5B,KAAK,WACJyB,OAAOC,SAASC,KAAO,OACxBE,MAAM,SAACC,GACN7C,EAAS,CAAE2C,KAAM,cAAeE,aAXtB,IAACkE,GI6FnBhH,YAAa,kBAAMC,EAASD,QAGjBsD,CAA+CoB,GC5FjDyC,EAAb,SAAAxC,GAAA,SAAAwC,IAAA,IAAAvC,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAA+C,GAAA,QAAAnC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAAV,MAAAQ,EAAAE,OAAAS,EAAA,EAAAT,CAAAqC,IAAA3B,KAAAC,MAAAb,EAAA,CAAAR,MAAAsB,OAAAP,MACIV,MAAQ,CACJ/C,MAAO,GACPiE,SAAU,GACVyB,UAAW,GACXC,SAAU,IALlBxC,EAOIe,aAAe,SAACC,GACZhB,EAAKiB,SAALhB,OAAAiB,EAAA,EAAAjB,CAAA,GACIe,EAAEG,OAAOC,GAAKJ,EAAEG,OAAOE,SATnCrB,EAYIsB,aAAe,SAACN,GACZA,EAAEO,iBACFvB,EAAKpB,MAAM6D,OAAOzC,EAAKJ,QAd/BI,EAgBIyB,kBAAoB,SAACT,GACnBhB,EAAKpB,MAAMzD,eAjBjB6E,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAAqC,EAAAxC,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAqC,EAAA,EAAAV,IAAA,SAAAP,MAAA,WAmBW,IAAA/B,EACqBC,KAAKX,MAAzB9C,EADDwD,EACCxD,KAAMgG,EADPxC,EACOwC,UACd,OAAIhG,EAAKoB,IAAY2B,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAI,MAEjCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,oBACEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQI,QAASI,KAAKkC,kBACdzC,UAAU,iBAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,yBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,sBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAf,MACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,wBAGJH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACZ+C,SAAUxC,KAAK+B,cACfzC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,SAAtC,SACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,QACJqD,GAAG,QACHa,SAAU1C,KAAKwB,gBAE3BlC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,YAAtC,YACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,WACJqD,GAAG,WACHa,SAAU1C,KAAKwB,gBAE3BlC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,aAAtC,cACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,OACJqD,GAAG,YACHa,SAAU1C,KAAKwB,gBAE3BlC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,YAAtC,aACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,OACJqD,GAAG,WACHa,SAAU1C,KAAKwB,gBAE3BlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACT8C,EAAYjD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAe8C,GAAmB,MAEjEjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAlB,oBAxEpBsD,EAAA,CAA4B3C,aA+FblB,cAbS,SAACmB,GAEvB,MAAO,CACL9D,KAAM8D,EAAMjE,SAASG,KACrBgG,UAAWlC,EAAM9D,KAAKgG,YAGC,SAAC1G,GAC1B,MAAM,CACJqH,OAAQ,SAACC,GAAD,OAAatH,ELpEH,SAACsH,GACnB,OAAO,SAACtH,EAAUC,EAAXsH,GAAqD,IAA/BlH,EAA+BkH,EAA/BlH,YAAaC,EAAkBiH,EAAlBjH,aAChCC,EAAWF,IACXG,EAAYF,IACdM,EAAcf,EAAY,CAACgB,WAAY,WAC3CN,EAASG,OAAO8G,+BACZF,EAAQ7F,MACR6F,EAAQ5B,UACV3E,KAAK,SAAC0G,GACJ,OAAOjH,EAAUoB,WAAW,SAASC,IAAI4F,EAAK9F,KAAKG,KAAKC,IAAI,CACxDC,UAAWsF,EAAQH,UACnBlF,SAAUqF,EAAQF,SAClBlF,SAAUoF,EAAQH,UAAU,GAAKG,EAAQF,SAAS,GAClD3F,MAAO6F,EAAQ7F,MACfW,SAAU5B,EAAU6B,WAAWC,kBAC/BH,SAAU,KACVI,UAAU3B,MAEfG,KAAK,WACJR,EAASG,OAAOgH,YAAYC,cAAc,CACtCC,YAAaN,EAAQH,UACrB1F,MAAM6F,EAAQ7F,MACdW,SAAU5B,EAAU6B,WAAWC,sBAGtCvB,KAAK,WACFf,EAAS,CAAE2C,KAAM,qBAClB5B,KAAK,WACJyB,OAAOC,SAASC,KAAO,uBAE1BE,MAAO,SAAAC,GACJ7C,EAAS,CAAE2C,KAAM,eAAgBE,WKqCXwE,CAAOC,KACrCvH,YAAY,kBAAMC,EAASD,QAGhBsD,CAA4C6D,mBClF5CW,EAhBf,SAAAnD,GAAA,SAAAmD,IAAA,OAAAhD,OAAAC,EAAA,EAAAD,CAAAV,KAAA0D,GAAAhD,OAAAQ,EAAA,EAAAR,CAAAV,KAAAU,OAAAS,EAAA,EAAAT,CAAAgD,GAAArC,MAAArB,KAAAa,YAAA,OAAAH,OAAAyB,EAAA,EAAAzB,CAAAgD,EAAAnD,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAgD,EAAA,EAAArB,IAAA,SAAAP,MAAA,WAEI,OACIxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,mBARpBkE,EAAA,CAA4BtD,aCUbuD,EAVf,SAAApD,GAAA,SAAAoD,IAAA,OAAAjD,OAAAC,EAAA,EAAAD,CAAAV,KAAA2D,GAAAjD,OAAAQ,EAAA,EAAAR,CAAAV,KAAAU,OAAAS,EAAA,EAAAT,CAAAiD,GAAAtC,MAAArB,KAAAa,YAAA,OAAAH,OAAAyB,EAAA,EAAAzB,CAAAiD,EAAApD,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAiD,EAAA,EAAAtB,IAAA,SAAAP,MAAA,WAEI,OACAxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAJvBkE,EAAA,CAA+BvD,aCgOhBwD,mLA1NH,IAAA7D,EACqEC,KAAKX,MAAtEwE,EADJ9D,EACI8D,cAAeC,EADnB/D,EACmB+D,aAAcC,EADjChE,EACiCgE,cAAeC,EADhDjE,EACgDiE,gBACpD,OACI1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,cACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,QAAQF,UAAU,4BAC3BH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAkBC,KAAOC,OAC7B7E,EAAAC,EAAAC,cAAA,+BAGFQ,KAAKX,MAAM+E,cAAkBpE,KAAKX,MAAM2E,gBAAgB,GAAS1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAC3EuE,GAAmBA,EAAgBK,IAAK,SAAAC,GACvC,OACIhF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,aAAaE,GAAI,SAAW2E,EAAKzC,GAAKQ,IAAMiC,EAAKzC,GAAKyC,KAAOA,GACzEhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAiBC,KAAOK,WAKvCjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAe6E,EAAKtF,KAAKwF,OACvClF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACP6E,EAAKtF,KAAKf,SAASwG,SAASC,gBAClCpF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAe6E,EAAKtF,KAAK2F,OAAtC,OAIsB,IAA7BL,EAAKtF,KAAK4F,QAAQ9D,OAAcxB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAiB6E,EAAKtF,KAAK4F,SAAgBtF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAAb,QACzFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACd6E,EAAKtF,KAAK6F,cACPvF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cACTH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAkBC,KAAOY,OAE7BxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,iBAEL,KACCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cACTH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAkBC,KAAMa,OAE5BzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAa6E,EAAKtF,KAAKgG,WAAWP,SAASC,yBAQpFpF,EAAAC,EAAAC,cAACyF,EAAD,MAAiB3F,EAAAC,EAAAC,cAAC0F,EAAD,MAE3B5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,aACzBO,KAAKX,MAAM+E,cAAiBpE,KAAKX,MAAM0E,cAAc,GACnDzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZsE,GAAiBA,EAAcM,IAAK,SAAAC,GAC/B,OACAhF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,cAAgB2E,EAAKzC,GAAKQ,IAAMiC,EAAKzC,GAAKyC,KAAMA,GACtDhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAC0B,OAAnC6E,EAAKtF,KAAKmG,OAAOC,cAAyB9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB4F,IAAMf,EAAKtF,KAAKmG,OAAOC,cAAgBE,IAAI,KAAQhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB8F,MAAO,CAACC,gBAAgBlB,EAAKtF,KAAKmG,OAAOM,kBAAkBnG,EAAAC,EAAAC,cAAA,SAAI8E,EAAKtF,KAAKmG,OAAOO,WAAW,QAIxQpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAe6E,EAAKtF,KAAKwF,OACvClF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACP6E,EAAKtF,KAAKf,SAASwG,SAASC,gBAClCpF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAe6E,EAAKtF,KAAK2F,OAAtC,OAGsB,IAA7BL,EAAKtF,KAAK4F,QAAQ9D,OAAcxB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAiB6E,EAAKtF,KAAK4F,SAAgBtF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAAb,QACzFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACV6E,EAAKtF,KAAK6F,cACHvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAkBC,KAAOY,OAE7BxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,iBAEL,KACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAkBC,KAAOa,OAE7BzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAa6E,EAAKtF,KAAKgG,WAAWP,SAASC,yBAYxFpF,EAAAC,EAAAC,cAACyF,EAAD,MAAgB3F,EAAAC,EAAAC,cAAC0F,EAAD,MAElB5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,qBAC1BO,KAAKX,MAAM+E,cAAkBpE,KAAKX,MAAMyE,aAAa,GAC9CxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZqE,GAAgBA,EAAaO,IAAK,SAAAC,GAC7B,OACAhF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,iBAAmB2E,EAAKzC,GAAKQ,IAAMiC,EAAKzC,GAAKyC,KAAMA,GACzDhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACqB,OAAnC6E,EAAKtF,KAAKmG,OAAOC,cAAyB9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB4F,IAAMf,EAAKtF,KAAKmG,OAAOC,cAAgBE,IAAI,KAAQhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB8F,MAAO,CAACC,gBAAgBlB,EAAKtF,KAAKmG,OAAOM,kBAAkBnG,EAAAC,EAAAC,cAAA,SAAI8E,EAAKtF,KAAKmG,OAAOO,WAAW,QAInQpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAe6E,EAAKtF,KAAKwF,OACvClF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACP6E,EAAKtF,KAAKf,SAASwG,SAASC,gBAClCpF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAe6E,EAAKtF,KAAK2F,OAAtC,OAIsB,IAA7BL,EAAKtF,KAAK4F,QAAQ9D,OAAcxB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAiB6E,EAAKtF,KAAK4F,SAAgBtF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAAb,QACzFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACd6E,EAAKtF,KAAK6F,cACPvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAkBC,KAAOY,OAE7BxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,iBAEL,KACCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAkBC,KAAOa,OAE7BzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAa6E,EAAKtF,KAAKgG,WAAWP,SAASC,yBAStFpF,EAAAC,EAAAC,cAACyF,EAAD,MAAiB3F,EAAAC,EAAAC,cAAC0F,EAAD,MAE7B5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,aAEFO,KAAKX,MAAM+E,cAAkBpE,KAAKX,MAAMwE,cAAc,GACpDvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACRoE,GAAiBA,EAAcQ,IAAK,SAAAC,GAC/B,OACIhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAa4C,IAAMiC,EAAKzC,IACnCvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACsB,OAAnC6E,EAAKtF,KAAKmG,OAAOC,cAAyB9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB4F,IAAKf,EAAKtF,KAAKmG,OAAOC,cAAeE,IAAI,KAAQhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB8F,MAAQ,CAACC,gBAAgBlB,EAAKtF,KAAKmG,OAAOM,kBAAmBnG,EAAAC,EAAAC,cAAA,SAAI8E,EAAKtF,KAAKmG,OAAOO,WAAW,QAIhQpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAe6E,EAAKtF,KAAKwF,OACvClF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACP6E,EAAKtF,KAAKf,SAASwG,SAASC,gBAClCpF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAe6E,EAAKtF,KAAK2F,OAAtC,OAIuB,IAA7BL,EAAKtF,KAAK4F,QAAQ9D,OAAcxB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAiB6E,EAAKtF,KAAK4F,SAAgBtF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAAb,QAC1FH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACb6E,EAAKtF,KAAK6F,cACRvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAkBC,KAAOY,OAE7BxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,iBAEL,KACCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAkBC,KAAOa,OAE7BzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAa6E,EAAKtF,KAAKgG,WAAWP,SAASC,wBASzFpF,EAAAC,EAAAC,cAACyF,EAAD,MAAiB3F,EAAAC,EAAAC,cAAC0F,EAAD,cArNnB9E,sBC2ERuF,EA/Ef,SAAApF,GAAA,SAAAoF,IAAA,OAAAjF,OAAAC,EAAA,EAAAD,CAAAV,KAAA2F,GAAAjF,OAAAQ,EAAA,EAAAR,CAAAV,KAAAU,OAAAS,EAAA,EAAAT,CAAAiF,GAAAtE,MAAArB,KAAAa,YAAA,OAAAH,OAAAyB,EAAA,EAAAzB,CAAAiF,EAAApF,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAiF,EAAA,EAAAtD,IAAA,qBAAAP,MAAA,WAGmC,IAA3B9B,KAAKX,MAAML,KAAK8B,QAClBd,KAAK4F,cAJX,CAAAvD,IAAA,YAAAP,MAAA,WAQI,IAKM+D,EAAc,EAAdA,EAAgC,EAChCC,EAAa,IAAMD,EADsB,EAEzCE,EAAc,IAAMF,EAFI,EASxBG,EAdMC,IAAU,UAAUC,OAAO,OACtCC,KAAK,QAAS,QACdA,KAAK,SAAU,QAOED,OAAO,KACRC,KAAK,QAAQL,EAAU,KACvBK,KAAK,SAASJ,EAAW,KACzBR,MAAM,YAHT,aAAAjE,OAGmCuE,EAHnC,OAAAvE,OAGoDuE,EAHpD,QAKOO,UAAU,QAC9BpH,KAAKgB,KAAKX,MAAML,MAEbqH,EAAMJ,IAAOjG,KAAKX,MAAML,KAAM,SAAAsH,GAAC,OAAIA,EAAEC,SACpCF,EAAM,IAAKA,EAAM,GACtB,IAAMG,EAAIP,MACGQ,OAAO,CAAC,EAAEJ,IACVK,MAAM,CAAC,EAAEZ,IAChBa,EAAIV,MACGQ,OAAOzG,KAAKX,MAAML,KAAKqF,IAAI,SAAArF,GAAI,OAAIA,EAAKnB,aACxC6I,MAAM,CAACX,EAAY,IACnBa,QAAQ,IAGrBZ,EAAMa,QACLX,OAAO,QACPC,KAAK,SAAUQ,EAAEG,YAAF,KACfX,KAAK,QAAS,SAACG,EAAGS,GAAJ,OAAUP,EAAEF,EAAEC,QAAJ,MACxBJ,KAAK,IAAK,SAACG,EAAGS,GACX,OACGJ,EAAEL,EAAEzI,WAAJ,MAGNsI,KAAK,IAAK,SAACG,EAAGS,GAAJ,OAAU,IACpBZ,KAAK,OAAQ,SAACG,EAAGS,GAAO,OAAOT,EAAElI,YACjC+H,KAAK,SAAS,GAEfH,EAAMa,QACLX,OAAO,QACPX,MAAM,YAAa,UACnBA,MAAM,cAAe,QACrBY,KAAK,OAAQ,WACbA,KAAK,SAAUQ,EAAEG,YAAF,KACfX,KAAK,QAAS,SAACG,EAAGS,GAAJ,OAAUP,EAAEF,EAAEC,QAAJ,MACxBJ,KAAK,IAAK,SAACG,EAAGS,GACX,OACGJ,EAAEL,EAAEzI,WAAY,EAAhB,MAGNsI,KAAK,IAAK,GACVa,KAAK,SAASV,GACf,SAAAhF,OAAUgF,EAAEzI,UAAZ,OAAAyD,OAA2BgF,EAAEC,OAA7B,aAEChB,MAAM,kBAAmB,WAjE9B,CAAAlD,IAAA,SAAAP,MAAA,WAqEI,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OAAKqC,GAAG,gBAxEf8D,EAAA,CAA8BvF,aCuBf6G,EAvBf,SAAA1G,GAAA,SAAA0G,IAAA,OAAAvG,OAAAC,EAAA,EAAAD,CAAAV,KAAAiH,GAAAvG,OAAAQ,EAAA,EAAAR,CAAAV,KAAAU,OAAAS,EAAA,EAAAT,CAAAuG,GAAA5F,MAAArB,KAAAa,YAAA,OAAAH,OAAAyB,EAAA,EAAAzB,CAAAuG,EAAA1G,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAuG,EAAA,EAAA5E,IAAA,SAAAP,MAAA,WAEI,OACIxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAA4BH,EAAAC,EAAAC,cAAA,wCAGnDF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,cAAiDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,SAAoCH,EAAAC,EAAAC,cAAA,WAArF,+BACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,IAAb,iEAb5BwH,EAAA,CAA6B7G,qBCgBhB8G,EAAoB,SAACC,GAC9B,OAAO,SAACtL,EAAUC,EAAXsD,GAAwC,IAEvCgI,EADE/K,GAAYF,EADyBiD,EAAlBjD,gBAGtBgL,EAEC9K,EAAUoB,WAAW,SAASC,IAAIyJ,GAASvI,MAC1ChC,KAAK,SAAAc,GAEF,OADsBA,EAAIsB,OAAOD,cAAgB,OAGpDnC,KAAM,SAAAmC,GACAA,EACC1C,EAAUoB,WAAW,UAAUC,IAAIqB,GAAcH,MAChDhC,KAAM,SAAAc,GACH0J,EAAY1J,EAAIsB,SACjBpC,KAAK,WACJf,EAAS,CAAC2C,KAAM,YAAa4I,gBAGjCvL,EAAS,CAAC2C,KAAM,uBAIxB1B,QAAQC,IAAI,SACZlB,EAAS,CAAC2C,KAAM,uBClCf6I,EAAb,SAAA9G,GAAA,SAAA8G,IAAA,IAAA7G,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAAqH,GAAA,QAAAzG,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAAV,MAAAQ,EAAAE,OAAAS,EAAA,EAAAT,CAAA2G,IAAAjG,KAAAC,MAAAb,EAAA,CAAAR,MAAAsB,OAAAP,MAEIuG,aAAe,SAACC,GACZ9G,EAAKpB,MAAMmI,YAAYD,GACvB9G,EAAKpB,MAAMoI,cACXhH,EAAKpB,MAAM6H,qBALnBzG,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAA2G,EAAA9G,GAAAG,OAAA0B,EAAA,EAAA1B,CAAA2G,EAAA,EAAAhF,IAAA,qBAAAP,MAAA,eAAAO,IAAA,qBAAAP,MAAA,eAAAO,IAAA,SAAAP,MAAA,WAaa,IAAA4F,EAAA1H,KACG2H,EAAe3H,KAAKX,MAApBsI,WACR,OACArI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBG,QAASI,KAAKX,MAAMoI,aAAanI,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAiBC,KAAM0D,QAE7FtI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbkI,GAAcA,EAAWtD,IAAI,SAAAwD,GAAS,IACxBN,EAAuBM,EAAvBN,SAAUO,EAAaD,EAAbC,UAClB,OACIxI,EAAAC,EAAAC,cAAA,OAAKI,QAAS,kBAAI8H,EAAKJ,aAAaC,IAAW9H,UAAU,cAAc4C,IAAKkF,GACxEjI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAiBC,KAAM6D,OAE3BzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAgBqI,OAM/CxI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,qBACRL,EAAAC,EAAAC,cAAA,OAAMC,UAAU,eACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAiBC,KAAM8D,OAE3B1I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,4BA1ChC4H,EAAA,CAAgCjH,aAkEjBlB,cAZU,SAACmB,GACtB,MAAO,CACH4H,UAAW5H,EAAMjE,SAASc,QAAQ+K,UAClClJ,aAAcsB,EAAMjE,SAASc,QAAQ6B,eAGlB,SAAClD,GACxB,MAAO,CACH2L,YAAa,SAACU,GAAD,OAAiBrM,EDrBX,SAAEqM,GACzB,OAAO,SAACrM,EAAUC,EAAXsH,GAAwC,IAAlBjH,EAAkBiH,EAAlBjH,aACnBgL,EAAUrL,IAAWM,SAASG,KAAKoB,IACvBxB,IACRsB,WAAW,SAASC,IAAIyJ,GAASgB,OAAO,CAC9CpJ,aAAamJ,IAEhBtL,KACGf,EAAS,CAAE2C,KAAM,yBACnBC,MAAM,SAASQ,GACbpD,EAAS,CAAE2C,KAAM,oBAAoBS,aCWFuI,CAAYU,KACnDhB,kBAAmB,SAACK,GAAD,OAAc1L,EAASqL,EAAkBK,OAGrDrI,CAA6CmI,0CC9D5DjL,IAASgM,cAPI,CACTC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,2BAGnB,IAAMC,EAAUtM,IAASsM,UCwBZC,EAAY,SAACC,GACtB,OAAO,SAAC/M,EAAUC,EAAXsH,GAAuDA,EAAhClH,YAAgC,IAEtD2M,EADExM,GAAYF,EADwCiH,EAAnBjH,gBAGpCyM,EACCvM,EAAUoB,WAAW,SAASC,IAAIkL,GAAShK,MAC1ChC,KAAK,SAAAc,GACFmL,EAAW,CAAChH,GAAGnE,EAAImE,GAAG7C,KAAKtB,EAAIsB,UAElCpC,KAAK,WACFf,EAAS,CAAC2C,KAAM,WAAYqK,eAC7BpK,MAAM,SAAAC,GACL5B,QAAQC,IAAI2B,GACZ7C,EAAS,CAAC2C,KAAM,iBAGpB3C,EAAS,CAAC2C,KAAM,iBChDfsK,EAAb,SAAAvI,GAAA,SAAAuI,IAAA,IAAAtI,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAA8I,GAAA,QAAAlI,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAAV,MAAAQ,EAAAE,OAAAS,EAAA,EAAAT,CAAAoI,IAAA1H,KAAAC,MAAAb,EAAA,CAAAR,MAAAsB,OAAAP,MACEgI,cAAgB,WACbtI,EAAKpB,MAAM2J,cAFhBvI,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAAoI,EAAAvI,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAoI,EAAA,EAAAzG,IAAA,SAAAP,MAAA,WAKI,OACMxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BAA6BH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAiBC,KAAO+E,OACnE3J,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,+FACAF,EAAAC,EAAAC,cAAA,YAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oCACVG,QAAUI,KAAKX,MAAM6J,kBAD7B,WAEA5J,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACVG,QAAUI,KAAK+I,eADvB,mBAlBpBD,EAAA,CAAgC1I,aAiCjBlB,cAAQ,KANI,SAACrD,GAC1B,MAAM,CACJsN,iBAAkB,kBAAItN,EDFhB,SAACA,EAAUC,EAAXsD,GAAqDA,EAA9BlD,YAA8BkD,EAAjBjD,aACtCN,EAAS,CAAE2C,KAAM,wBCErBwK,WAAY,kBAAMnN,Ef0MX,SAACA,EAAUC,EAAXsN,GAAqDA,EAA/BlN,YAA+B,IAAAmN,EAClDhN,GAAYF,EADsCiN,EAAlBjN,gBAEhCgL,EAAUrL,IAAWM,SAASG,KAAKoB,IAFe2L,EAGpBxN,IAAWM,SAASc,QAAhD6B,EAHgDuK,EAGhDvK,aAAckJ,EAHkCqB,EAGlCrB,UAClBsB,EAAkB,KAChBC,EAAevB,EAAUwB,OAAO,SAAAC,GAAI,OAAIA,IAAS3K,IAMnDA,GAGJ1C,EAAUoB,WAAW,UAAUC,IAAIqB,GAAcoJ,QAAjDkB,EAAA,CACIM,QAAQtN,EAAU6B,WAAW0L,YAAYzC,IAD7CzG,OAAAiB,EAAA,EAAAjB,CAAA2I,EAAA,eAAA/H,OAEoB6F,GAAW9K,EAAU6B,WAAW2L,UAFpDnJ,OAAAiB,EAAA,EAAAjB,CAAA2I,EAAA,gBAAA/H,OAGqB6F,GAAW9K,EAAU6B,WAAW2L,UAHrDR,IAIGzM,KAAK,WACwB,IAAxB4M,EAAa1I,QACbyI,EAAkB,KAClBlN,EAAUoB,WAAW,SAASC,IAAIyJ,GAASgB,OAAO,CAC9CF,UAAUuB,EACVzK,aAAcwK,IACf3M,KAAK,WACJyB,OAAOC,SAASC,KAAO,uBACxBE,MAAM,SAAAC,GAAG,OAAE5B,QAAQC,IAAI2B,OAE1B5B,QAAQC,IAAIyM,GACZnN,EAAUoB,WAAW,SAASC,IAAIyJ,GAASgB,OAAO,CAC9CF,UAAUuB,EACVzK,aAAcyK,EAAa,KAC5B5M,KAAK,WACJyB,OAAOC,SAAW,MACnBG,MAAM,SAAAC,GAAG,OAAE5B,QAAQC,IAAI2B,QAG/BD,MAAM,SAAAC,GAAG,OAAE5B,QAAQC,IAAI2B,Ue5OnBQ,CAAkC4J,GCxB3CgB,6MAEFzJ,MAAQ,CACJ0J,YAAY,EACZC,YAAW,EACXC,WAAW,EACXC,YAAW,KAEfzC,YAAc,WACLhH,EAAKJ,MAAM0J,YACRtJ,EAAKpB,MAAMnC,QAAQ6B,eACnB0B,EAAKpB,MAAM8K,eAAe1J,EAAKpB,MAAM4I,WACrCxH,EAAKpB,MAAM+K,gBACX3J,EAAKpB,MAAM6H,qBAIfzG,EAAKJ,MAAM0J,YACPtJ,EAAKpB,MAAMnC,QAAQ6B,eACvB0B,EAAKpB,MAAM+K,cAAc3J,EAAKpB,MAAM9C,KAAKoB,KACzC8C,EAAKpB,MAAM6H,kBAAkBzG,EAAKpB,MAAM9C,KAAKoB,MAGjD8C,EAAKiB,SAAU,SAAA2I,GAAS,MAAK,CACzBN,YAAaM,EAAUN,iBAG/BO,iBAAmB,WACf7J,EAAKiB,SAAU,SAAA2I,GAAS,MAAK,CACzBH,YAAaG,EAAUH,cAExBzJ,EAAKJ,MAAM4J,WACVxJ,EAAKiB,SAAU,SAAA2I,GAAS,MAAK,CACzBJ,WAAYI,EAAUJ,gBAIlCM,gBAAkB,WACd9J,EAAKiB,SAAU,SAAA2I,GAAS,MAAK,CACzBJ,WAAYI,EAAUJ,aAEvBxJ,EAAKJ,MAAM6J,YACVzJ,EAAKiB,SAAU,SAAA2I,GAAS,MAAK,CACzBH,YAAaG,EAAUH,iBAKnCM,iBAAmB,SAAC/I,GAChBhB,EAAKiB,SAAS,SAAA2I,GAAS,MAAK,CACxBL,YAAaK,EAAUL,kGAIxBhK,KAAKX,MAAM9C,KAAKoB,MACfqC,KAAKX,MAAM+K,cAAcpK,KAAKX,MAAM9C,KAAKoB,KACzCqC,KAAKX,MAAM6H,kBAAkBlH,KAAKX,MAAM9C,KAAKoB,qDAIjDb,QAAQC,IAAI,2BACZiD,KAAKX,MAAM6H,oBACXlH,KAAKX,MAAM+K,iDAEP,IAAArK,EACiHC,KAAKX,MAAlHoL,EADJ1K,EACI0K,YAAaC,EADjB3K,EACiB2K,kBAAmBC,EADpC5K,EACoC4K,iBAAiBC,EADrD7K,EACqD6K,kBAAmBC,EADxE9K,EACwE8K,oBAAqBC,EAD7F/K,EAC6F+K,UAAWvO,EADxGwD,EACwGxD,KACxGwO,EAAY,GACTC,EAAuBhL,KAAKX,MAA5B2L,oBAIP,OAHAhL,KAAKX,MAAM2L,qBAAuBtK,OAAOuK,KAAKD,GAAqBlM,QAAQ,SAAA2C,GACvEsJ,EAAWG,KAAKF,EAAoBvJ,MAEpClF,EAAKoB,IAED2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbO,KAAKK,MAAM0J,WAAazK,EAAAC,EAAAC,cAAC2L,EAAD,CAAY1D,YAAczH,KAAKyH,YAAY2D,KAAKpL,MAAQ2H,WAAa3H,KAAKX,MAAMsI,aAAiB,KACzH3H,KAAKK,MAAM2J,WAAa1K,EAAAC,EAAAC,cAAC6L,EAAD,CAAYnC,iBAAmBlJ,KAAKwK,iBAAiBY,KAAKpL,QAAY,KAC5FV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBG,QAASI,KAAKyH,aACxCzH,KAAKX,MAAMiM,iBAAmBtL,KAAKX,MAAMiM,iBAAiBxD,UAAY,KAD5E,IACmFxI,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAiBC,KAAMqH,QAG9GjM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKI,QAAUI,KAAKsK,iBAChB7K,UAAU,qBACXH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAiBC,KAAMsH,OAE3BlM,EAAAC,EAAAC,cAAA,OAAKI,QAAUI,KAAKuK,gBACf9K,UAAU,qBACXH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAiBC,KAAMuH,MAF3B,IAEuCzL,KAAKX,MAAMiM,iBAAoBtL,KAAKX,MAAMiM,iBAAiB3B,QAAQ7I,OAAU,IAItHd,KAAKK,MAAM4J,UACT3K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACTgL,EACE/J,OAAOuK,KAAKR,GAAapG,IAAI,SAAA5C,GACrB,OACInC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB4C,IAAKZ,GAChCnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACiB,SAA1BgL,EAAYhJ,GAAGzD,SAAoBsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,IAAoCH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAiBC,KAAOwH,MAA5D,KAAmFpM,EAAAC,EAAAC,cAAA,OAAK6F,IAAMoF,EAAYhJ,GAAGzD,SAAWsH,IAAI,OAGzKhG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAegL,EAAYhJ,GAAG5D,cAI/D,MAGR,KACDmC,KAAKK,MAAM6J,WACT5K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,qBACTL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAiBC,KAAMyH,MAD3B,qBAIArM,EAAAC,EAAAC,cAAA,OAAKI,QAASI,KAAKwK,iBACd/K,UAAU,kBACXH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAiBC,KAAM0H,MAF3B,sBAKJ,OAGZtM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdO,KAAKK,MAAM0J,YAAc/J,KAAKK,MAAM2J,WAAa,KAAM1K,EAAAC,EAAAC,cAACqM,EAAD,CAAU7M,KAAMgB,KAAKX,MAAM0L,WAAYe,MAAO9L,KAAKK,MAAMyL,MAAOC,OAAQ/L,KAAKK,MAAM0L,UAG3IzM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdO,KAAKK,MAAM0J,YAAc/J,KAAKK,MAAM2J,WAAa,KAAQ1K,EAAAC,EAAAC,cAACwM,EAAD,CAAU5H,cAAiBpE,KAAKX,MAAM+E,cAAgBE,KAAOwG,EAAY9G,gBAAkB6G,EAAsB9G,cAAgB6G,EAAoB9G,aAAe6G,EAAmB9G,cAAgB6G,MAMpQpL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZH,EAAAC,EAAAC,cAACyM,EAAD,cA5II7L,aAwLRlB,cArCQ,SAACmB,GACrB,IAAI0K,EAAY,GACVmB,EAAoB7L,EAAMwH,MAAMyD,iBAAmBjL,EAAMwH,MAAMyD,iBAAiBa,aAAe,KACrGD,GAAqBxL,OAAOuK,KAAKiB,GAAmBpN,QAAQ,SAAA2C,GACxDsJ,EAAWG,KAAKgB,EAAkBzK,MAGtC,IAAM6J,EAAmBjL,EAAMwH,MAAMyD,iBAAmBjL,EAAMwH,MAAMyD,iBAAkB,KAChF/O,EAAO8D,EAAMjE,SAASG,KAAO8D,EAAMjE,SAASG,KAAO,KACnDkO,EAAcpK,EAAMwH,MAAMyD,iBAAmBjL,EAAMwH,MAAMyD,iBAAiBb,YAAc,KACxFO,EAAsB3K,EAAMwH,MAAMyD,iBAAmBjL,EAAMwH,MAAMyD,iBAAiBa,aAAe,KACvG,MAAO,CACHC,MAAO/L,EAAMhE,UAAUgQ,QAAQD,MAC/B7P,KAAMA,EACN0L,UAAW5H,EAAMjE,SAASc,QAAQ+K,UAClCN,WAAYtH,EAAMwH,MAAMyE,OACxBpP,QAAQmD,EAAMjE,SAASc,QACvBoO,iBAAiBA,EACjBb,YAAYA,EACZO,oBAAoBA,EACpBF,UAAUzK,EAAMiE,KAAKwG,UACrBD,oBAAqBxK,EAAMiE,KAAKuG,oBAChCD,kBAAmBvK,EAAMiE,KAAKsG,kBAC9BD,iBAAkBtK,EAAMiE,KAAKqG,iBAC7BD,kBAAmBrK,EAAMiE,KAAKoG,kBAC9BK,WAAWA,EACX3G,cAAc/D,EAAMiE,KAAKiI,WAGN,SAAC1Q,GACxB,MAAO,CACHsO,eAAgB,SAAClC,GAAD,OAAepM,ELjMT,SAACoM,GAC3B,OAAO,SAACpM,EAAUC,EAAX+G,GAAqDA,EAA/B3G,YAA+B,IAAlBC,EAAkB0G,EAAlB1G,aAClCwL,EAAW,GAETtL,EAAYF,IAClB8L,EAAU5D,IAAK,SAACkD,GACZ,OACIlL,EAAUoB,WAAW,UAAUC,IAAI6J,GAAU3I,MAAMhC,KAC/C,SAAA4P,GACI7E,EAAU,GAAArG,OAAAZ,OAAA+L,EAAA,EAAA/L,CAAMiH,GAAN,CAAiB6E,EAAiBxN,WAC7CpC,KAAK,WACJf,EAAS,CAAE2C,KAAM,YAAYmJ,oBKsLLwC,CAAelC,KACvDmC,cAAe,SAACjD,GAAD,OAAatL,EFvIP,SAACsL,GAC1B,OAAO,SAACtL,EAAUC,EAAXC,GAAuDA,EAAhCG,YAAgC,IACpDG,GAAYF,EADwCJ,EAAnBI,gBAEnC2O,EAAY,GACZD,EAAsB,GACtBD,EAAoB,GACpBD,EAAmB,GACnBD,EAAoB,GACpBvD,EACA9K,EAAUoB,WAAW,SAASC,IAAIyJ,GAASvI,MAC1ChC,KAAM,SAAAc,GAEJ,OADuBA,EAAIsB,OAAOD,cAAgB,OAElDnC,KAAM,SAAAmC,GACDA,GACA1C,EAAUoB,WAAW,SAASkB,MAAM,WAAY,KAAMI,GAAc2N,QAAQ,eAAe,QAAQ9N,MAClGhC,KAAM,SAAAiC,GAAmBA,EAAcC,QAAS,SAAApB,GAC7CoN,EAAS,GAAAxJ,OAAAZ,OAAA+L,EAAA,EAAA/L,CAAOoK,GAAP,CAAkB,CAACjJ,GAAGnE,EAAImE,GAAG7C,KAAKtB,EAAIsB,cAGlDpC,KAAK,WACFP,EAAUoB,WAAW,SAASkB,MAAM,WAAY,KAAMI,GAAcJ,MAAM,SAAS,KAAK,cAAc+N,QAAQ,eAAe,QAAQ9N,MACpIhC,KAAM,SAAAiC,GAAmBA,EAAcC,QAAS,SAAApB,GAC7CmN,EAAmB,GAAAvJ,OAAAZ,OAAA+L,EAAA,EAAA/L,CAAOmK,GAAP,CAA4B,CAAChJ,GAAGnE,EAAImE,GAAG7C,KAAKtB,EAAIsB,cAEpEpC,KAAK,WACJP,EAAUoB,WAAW,SAASkB,MAAM,WAAY,KAAMI,GAAcJ,MAAM,SAAS,KAAK,YAAY+N,QAAQ,eAAe,QAAQ9N,MAClIhC,KAAM,SAAAiC,GAAmBA,EAAcC,QAAS,SAAApB,GAC7CkN,EAAiB,GAAAtJ,OAAAZ,OAAA+L,EAAA,EAAA/L,CAAOkK,GAAP,CAA0B,CAAC/I,GAAGnE,EAAImE,GAAG7C,KAAKtB,EAAIsB,cAEhEpC,KAAK,WACJP,EAAUoB,WAAW,SAASkB,MAAM,WAAY,KAAMI,GAAcJ,MAAM,SAAS,KAAK,WAAW+N,QAAQ,eAAe,QAAQ9N,MACjIhC,KAAM,SAAAiC,GAAmBA,EAAcC,QAAS,SAAApB,GAC7CiN,EAAgB,GAAArJ,OAAAZ,OAAA+L,EAAA,EAAA/L,CAAOiK,GAAP,CAAyB,CAAC9I,GAAGnE,EAAImE,GAAG7C,KAAKtB,EAAIsB,cAG9DpC,KAAK,WACJP,EAAUoB,WAAW,SAASkB,MAAM,WAAY,KAAMI,GAAcJ,MAAM,SAAS,KAAK,YAAY+N,QAAQ,eAAe,QAAQ9N,MAClIhC,KAAK,SAAAiC,GAAmBA,EAAcC,QAAS,SAAApB,GAC5CgN,EAAiB,GAAApJ,OAAAZ,OAAA+L,EAAA,EAAA/L,CAAOgK,GAAP,CAA0B,CAAC7I,GAAGnE,EAAImE,GAAG7C,KAAKtB,EAAIsB,cAEhEpC,KAAK,WACJf,EAAS,CAAC2C,KAAM,YAChBsM,YACAD,sBACAD,oBACAD,mBACAD,kCAQzBjM,MAAM,SAAAC,GACL5B,QAAQC,IAAI2B,GACZ7C,EAAS,CAAC2C,KAAM,kBAGpB3C,EAAS,CAAC2C,KAAM,iBE2EiB4L,CAAcjD,KACnDD,kBAAmB,SAACK,GAAD,OAAc1L,EAASqL,EAAkBK,OAIpDrI,CAA8C4K,qBC5LjD6C,EAAb,SAAApM,GAAA,SAAAoM,IAAA,IAAAnM,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAA2M,GAAA,QAAA/L,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAAV,MAAAQ,EAAAE,OAAAS,EAAA,EAAAT,CAAAiM,IAAAvL,KAAAC,MAAAb,EAAA,CAAAR,MAAAsB,OAAAP,MACIV,MAAQ,CACJmE,MAAO,GACPI,QAAS,GACTgI,SAAS,QACT5H,WAAY,IAAI6H,MAAK,IAAIA,MAAOC,UAAY,QAC5CjI,eAAc,GANtBpE,EAQIsM,WAAa,SAACtL,GACZA,EAAEO,iBACF3D,OAAOC,SAAS0O,KAAK,MAV3BvM,EAYIe,aAAe,SAACC,GACZhB,EAAKiB,SAALhB,OAAAiB,EAAA,EAAAjB,CAAA,GACIe,EAAEG,OAAOC,GAAKJ,EAAEG,OAAOE,SAdnCrB,EAiBIwM,aAAe,WACbxM,EAAKiB,SAAS,CACZmD,eAAgBpE,EAAKJ,MAAMwE,iBAnBnCpE,EAsBIyM,iBAAmB,SAAAC,GACjB1M,EAAKiB,SAAS,CAAEsD,WAAYmI,KAvBlC1M,EAyBIsB,aAAe,SAACN,GACZA,EAAEO,iBACFvB,EAAKpB,MAAM+N,WAAW3M,EAAKJ,QA3BnCI,EA6BI4M,YAAc,SAAC5L,GACbhB,EAAKpB,MAAM8J,oBA9BjB1I,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAAiM,EAAApM,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAiM,EAAA,EAAAtK,IAAA,SAAAP,MAAA,WAgCW,IACCkD,EAAehF,KAAKK,MAApB2E,WACR,OACE1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACZO,KAAKX,MAAMiO,QACVhO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAaH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAiBC,KAAOqJ,OACnDjO,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBACRG,QAAUI,KAAKqN,aADzB,UAML,KAEH/N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,eACEH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACZ+C,SAAUxC,KAAK+B,cACfzC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,SAAtC,SACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,OACJqD,GAAG,QACHa,SAAU1C,KAAKwB,gBAE3BlC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,cAAtC,eACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACgO,EAAA,EAAD,CAAyB3L,GAAG,aAAc4L,MAAOC,KAC7CpO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACgO,EAAA,EAAD,CAAgB3L,GAAG,YAAYpC,UAAU,6BAA6BqC,MAAOkD,EAAYtC,SAAU1C,KAAKkN,sBAIhH5N,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,cAAtC,YACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,UAAQsC,MAAO9B,KAAKK,MAAMyB,MAAO6L,KAAK,GAAG9L,GAAG,WAAWa,SAAU1C,KAAKwB,cACpElC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,SAAd,SACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,SAAd,SACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,YAAd,YACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,WAAd,WACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,SAAd,SACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,SAAd,WAGNxC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,iBAAtC,0BACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,WACJqD,GAAG,gBACH+L,QAAU5N,KAAKK,MAAMwE,cACrBnC,SAAU1C,KAAKiN,eACvB3N,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAEpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,gBAGAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,WAAtC,eACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,YAAUhB,KAAK,OACPqD,GAAG,UACHa,SAAU1C,KAAKwB,gBAE3BlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQI,QAASI,KAAK+M,WACdtN,UAAU,sCADlB,QAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wBAAlB,gBAvGlBkN,EAAA,CAA+BvM,aA2HhBlB,cAXS,SAACmB,GACvB,MAAO,CACLiN,QAASjN,EAAMiE,KAAK5F,MAGG,SAAC7C,GAC1B,MAAM,CACJuR,WAAY,SAAC9I,GAAD,OAAUzI,EHjIA,SAACyI,GACvB,OAAO,SAACzI,EAAUC,EAAX+G,GAAuDA,EAAhC3G,YAAgC,IACpDG,GAAYF,EADwC0G,EAAnB1G,gBAEjCe,EAAUpB,IAAWM,SAASc,QAC9B2Q,EAAY/R,IAAWM,SAASG,KAAKoB,IACjB,IAAtB2G,EAAKE,MAAM1D,OACXzE,EAAUoB,WAAW,SAASqQ,IAA9BpN,OAAAqN,EAAA,EAAArN,CAAA,GACO4D,EADP,CAEIK,OAAQzH,EAAQW,UAChBgQ,UAAWA,EACXG,eAAe9Q,EAAQc,UAAY,KACnCiQ,YAAY/Q,EAAQkB,WAAa,KACjCmJ,SAAUrK,EAAQ6B,aAClBd,SAAU,IAAI4O,KACd1H,OAAO,CAACO,WAAW,KAAKwI,WAAW,MACnCC,QAAQ,CAACC,WAAW,KAAKC,WAAW,MACpCC,aAAajS,EAAU6B,WAAWC,kBAClCoQ,OAAO,gBACR3R,KAAK,WACJf,EAAS,CAAE2C,KAAM,cAAe8F,WACjC1H,KAAK,WACJyB,OAAOC,SAASC,KAAO,OAE1BE,MAAM,SAACC,GACJ7C,EAAS,CAAE2C,KAAM,oBAAqBE,UAG1C7C,EAAS,CAAE2C,KAAM,gBGsGM4O,CAAW9I,KAC1C6E,iBAAkB,kBAAItN,EHlGhB,SAACA,EAAUC,EAAXsD,GAAqDA,EAA9BlD,YAA8BkD,EAAjBjD,aACtCN,EAAS,CAAE2C,KAAM,0BGoGVU,CAA4CyN,GCtH5C6B,EAdf,SAAAjO,GAAA,SAAAiO,IAAA,OAAA9N,OAAAC,EAAA,EAAAD,CAAAV,KAAAwO,GAAA9N,OAAAQ,EAAA,EAAAR,CAAAV,KAAAU,OAAAS,EAAA,EAAAT,CAAA8N,GAAAnN,MAAArB,KAAAa,YAAA,OAAAH,OAAAyB,EAAA,EAAAzB,CAAA8N,EAAAjO,GAAAG,OAAA0B,EAAA,EAAA1B,CAAA8N,EAAA,EAAAnM,IAAA,SAAAP,MAAA,WAEI,OACQxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,kBAPpBgP,EAAA,CAAgCpO,aCEnBqO,EAAb,SAAAlO,GAAA,SAAAkO,IAAA,IAAAjO,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAAyO,GAAA,QAAA7N,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAAV,MAAAQ,EAAAE,OAAAS,EAAA,EAAAT,CAAA+N,IAAArN,KAAAC,MAAAb,EAAA,CAAAR,MAAAsB,OAAAP,MACIgM,WAAa,SAACtL,GACVA,EAAEO,iBACF3D,OAAOC,SAAS0O,KAAK,MAH7BvM,EAKIiO,aAAe,SAACjN,GACZhB,EAAKpB,MAAMsP,WAAWlO,EAAKpB,MAAMuP,MAAMC,OAAOhN,KANtDpB,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAA+N,EAAAlO,GAAAG,OAAA0B,EAAA,EAAA1B,CAAA+N,EAAA,EAAApM,IAAA,oBAAAP,MAAA,WASQ9B,KAAKX,MAAMsJ,UAAU3I,KAAKX,MAAMuP,MAAMC,OAAOhN,MATrD,CAAAQ,IAAA,uBAAAP,MAAA,WAYQ9B,KAAKX,MAAMsJ,cAZnB,CAAAtG,IAAA,SAAAP,MAAA,WAeI,IAAMD,EAAK7B,KAAKX,MAAMuP,MAAMC,OAAOhN,GACnC,GAAI7B,KAAKX,MAAMyP,YAAY9P,KAAK,KAAA+P,EACmB/O,KAAKX,MAAMyP,YAAY9P,KAA9DgG,EADoB+J,EACpB/J,WAAYL,EADQoK,EACRpK,OAAQC,EADAmK,EACAnK,QAASJ,EADTuK,EACSvK,MACrC,OACIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsB4C,IAAKR,GACtCvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,mBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACPH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAS+E,GACvBlF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,iBAA0CuF,EAAWP,SAASuK,eAAeC,QAAQ,kCAAkC,IAAM,IAAKjK,EAAWP,SAASC,gBACtJpF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,eAAuCkF,GACvCrF,EAAAC,EAAAC,cAAA,SAAIoF,KAGhBtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,UAAQI,QAASI,KAAK+M,WACdtN,UAAU,sCADlB,QAEAH,EAAAC,EAAAC,cAAA,UAAQI,QAASI,KAAK0O,aACdjP,UAAU,wBADlB,YAOR,OAAOH,EAAAC,EAAAC,cAAC0P,EAAD,UAvCfT,EAAA,CAAiCrO,aAyDlBlB,cAdS,SAACmB,EAAO8O,GAE5B,MAAO,CACHL,YAFgBzO,EAAMiE,KAAKuE,SAAWxI,EAAMiE,KAAKuE,SAAW,OAKzC,SAAChN,GAExB,MAAO,CACH8M,UAAW,SAACC,GAAD,OAAa/M,EAAS8M,EAAUC,KAC3C+F,WAAW,SAAC/F,GAAD,OAAa/M,ELmEN,SAAC+M,GACvB,OAAO,SAAC/M,EAAUC,EAAXsT,GAAuDA,EAAhClT,YAAgC,IACpDG,GAAYF,EADwCiT,EAAnBjT,gBAEjCgL,EAAUrL,IAAWM,SAASG,KAAKoB,IACnCT,EAAWpB,IAAWM,SAASc,QAC/BmS,EAAWvT,IAAWM,SAASc,QAAQW,UACvC0J,EAAWzL,IAAWM,SAASc,QAAQ6B,aAG7C1C,EAAUoB,WAAW,SAASC,IAAIkL,GAAST,OAAO,CAC9ChD,OAAO,CAAC+I,WAAW7R,EAAU6B,WAAWC,kBAChCuH,WAAW2J,EACXC,cAAcnI,EACd/B,cAAclI,EAAQc,UAAY,KAClCyH,gBAAgBvI,EAAQkB,WAAa,MAC7CkQ,aAAajS,EAAU6B,WAAWC,kBAClCoQ,OAAQ,aACT3R,KAAK,WACJP,EAAUoB,WAAW,SAASC,IAAIyJ,GAASgB,OAA3CzH,OAAAiB,EAAA,EAAAjB,CAAA,mBAAAY,OACqBiG,GAAYlL,EAAU6B,WAAWqR,WAAW3G,KAC9DhM,KAAK,WACJf,EAAS,CAAC2C,KAAM,kBAEnB5B,KAAK,WACFyB,OAAOC,SAASC,KAAO,SAE5BE,MAAM,SAACC,GAAO5B,QAAQC,IAAI2B,MK7FIiQ,CAAW/F,OAIrC1J,CAA4CuP,GCxD9Ce,GAAb,SAAAjP,GAAA,SAAAiP,IAAA,IAAAhP,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAAwP,GAAA,QAAA5O,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAAV,MAAAQ,EAAAE,OAAAS,EAAA,EAAAT,CAAA8O,IAAApO,KAAAC,MAAAb,EAAA,CAAAR,MAAAsB,OAAAP,MACEsM,YAAc,SAAC5L,GACbhB,EAAKpB,MAAM8J,oBAFf1I,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAA8O,EAAAjP,GAAAG,OAAA0B,EAAA,EAAA1B,CAAA8O,EAAA,EAAAnN,IAAA,SAAAP,MAAA,WAKI,OACMxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAaH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAiBC,KAAOqJ,OACnDjO,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,UAAKQ,KAAKX,MAAMoQ,cAChBnQ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBACVG,QAAUI,KAAKqN,aADvB,cAdpBmC,EAAA,CAAiCpP,aAiClBlB,eAVS,SAACmB,GACvB,MAAM,CACJoP,aAAcpP,EAAMiE,KAAKoL,aAGF,SAAC7T,GAC1B,MAAM,CACJsN,iBAAkB,kBAAItN,ENFhB,SAACA,EAAUC,EAAXsD,GAAqDA,EAA9BlD,YAA8BkD,EAAjBjD,aACtCN,EAAS,CAAE2C,KAAM,0BMIVU,CAA6CsQ,ICjC/CG,GAAb,SAAApP,GACI,SAAAoP,EAAYtQ,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAA2P,IACflP,EAAAC,OAAAQ,EAAA,EAAAR,CAAAV,KAAAU,OAAAS,EAAA,EAAAT,CAAAiP,GAAAvO,KAAApB,KAAMX,KAGVgB,MAAQ,CACJuP,MAAM,GACNC,gBAAgB,GAChBC,UAAU,MAPKrP,EASnBsM,WAAa,SAACtL,GACVA,EAAEO,iBACF3D,OAAOC,SAAS0O,KAAK,MAXNvM,EAanBe,aAAe,SAACC,GACZhB,EAAKiB,SAAS,CACVkO,MAAQnO,EAAEG,OAAOgO,MACjBC,gBAAiBE,IAAIC,gBAAgBvO,EAAEG,OAAOgO,MAAM,IACpDK,KAAKxO,EAAEG,OAAOgO,MAAM,MAjBTnP,EAoBnByP,sBAAwB,SAACzO,GACrBA,EAAEO,iBACF,IAAM4G,EAAUnI,EAAKpB,MAAMuP,MAAMC,OAAOhN,GAChCsD,EAAW1E,EAAKpB,MAAMyP,YAAY9P,KAAlCmG,OACR1E,EAAKpB,MAAM8Q,oBAAoBvH,EAAQzD,EAAO1E,EAAKJ,MAAM4P,OAxB1CxP,EA0BnB2P,aAAe,SAAC3O,GACZA,EAAEO,iBACF,IAAM4G,EAAUnI,EAAKpB,MAAMuP,MAAMC,OAAOhN,GAChCsD,EAAW1E,EAAKpB,MAAMyP,YAAY9P,KAAlCmG,OACR1E,EAAKpB,MAAMgR,kBAAkBzH,EAAQzD,IA5BrC1E,EAAK6P,UAAYC,IAAMC,YAFR/P,EADvB,OAAAC,OAAAyB,EAAA,EAAAzB,CAAAiP,EAAApP,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAiP,EAAA,EAAAtN,IAAA,oBAAAP,MAAA,WAkCQ9B,KAAKX,MAAMsJ,UAAU3I,KAAKX,MAAMuP,MAAMC,OAAOhN,MAlCrD,CAAAQ,IAAA,uBAAAP,MAAA,WAqCQ9B,KAAKX,MAAMsJ,cArCnB,CAAAtG,IAAA,SAAAP,MAAA,WAwCI,IAAMD,EAAK7B,KAAKX,MAAMuP,MAAMC,OAAOhN,GACnC,GAAI7B,KAAKX,MAAMyP,YAAY9P,KAAK,KAAA+P,EACwC/O,KAAKX,MAAMyP,YAAY9P,KAAnF6F,EADoBkK,EACpBlK,cAAcG,EADM+J,EACN/J,WAAYG,EADN4J,EACM5J,OAAOR,EADboK,EACapK,OAAQC,EADrBmK,EACqBnK,QAASJ,EAD9BuK,EAC8BvK,MAC1D,OACIlF,EAAAC,EAAAC,cAAA,WACCQ,KAAKX,MAAMiO,QAAUhO,EAAAC,EAAAC,cAACiR,GAAD,CAAaxR,MAAQe,KAAKX,MAAMuP,MAAMC,OAAOhN,KAAS,KACxEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsB4C,IAAKR,GACtCvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,mBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACPH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAS+E,GACvBlF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,iBAA0CuF,EAAWP,SAASuK,eAAeC,QAAQ,kCAAkC,IAAM,IAAKjK,EAAWP,SAASC,gBACtJpF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,eAAuCkF,GACvCrF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,iBAAyC0F,EAAOO,YAChDpG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,eACAH,EAAAC,EAAAC,cAAA,SAAIoF,GACH5E,KAAKK,MAAMwP,gBAAgB,IACxBvQ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,oBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,GAAG4F,IAAKrF,KAAKK,MAAMwP,gBAAiBvK,IAAI,UAQ1ET,EACGvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,QAAMkR,OAAO,GACTlO,SAAUxC,KAAKkQ,uBACf5Q,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,aAAf,cACAnD,EAAAC,EAAAC,cAAA,SAAOqC,GAAG,YACNrD,KAAK,OACLkE,SAAU1C,KAAKwB,aACfmP,IAAK3Q,KAAKsQ,aAElBhR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,UAAQI,QAASI,KAAK+M,WACdtN,UAAU,sCADlB,QAEAH,EAAAC,EAAAC,cAAA,UAASC,UAAU,wBAAnB,aAKRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAMkR,OAAO,GACTlO,SAAUxC,KAAKoQ,cACf9Q,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,UAAQI,QAASI,KAAK+M,WACdtN,UAAU,sCADlB,QAEAH,EAAAC,EAAAC,cAAA,UAASC,UAAU,wBAAnB,gBAYxB,OAAOH,EAAAC,EAAAC,cAAC0P,EAAD,UA3GfS,EAAA,CAA8BvP,aA8HdlB,eAfQ,SAACmB,EAAO8O,GAE5B,MAAO,CACHL,YAFgBzO,EAAMiE,KAAKuE,SAAWxI,EAAMiE,KAAKuE,SAAW,KAG5DyE,QAASjN,EAAMiE,KAAK5F,MAGD,SAAC7C,GACxB,MAAO,CACH8M,UAAW,SAACC,GAAD,OAAa/M,EAAS8M,EAAUC,KAC3CuH,oBAAqB,SAACvH,EAAQzD,EAAO2K,GAAhB,OAA4BjU,EP4BtB,SAAC+M,EAASzD,EAAQ8K,GACjD,OAAO,SAACpU,EAAUC,EAAX8U,GAAuDA,EAAhC1U,YAAgC,IACpDG,GAAYF,EADwCyU,EAAnBzU,gBAEjCoL,EAAWzL,IAAWM,SAASc,QAAQ6B,aACvCoI,EAAUrL,IAAWM,SAASG,KAAKoB,IACjC2R,EAAkBnK,EAAlBmK,cAKR,GAAInI,IAAYmI,EAEZ,GAAGW,EAAM,CACL,IACMY,EADanI,EAAQiI,IAAR,eAAArP,OAA2BsH,IACjBkI,MAAMb,EAAKtC,MACxCkD,EAAUE,IAAId,GACbrT,KAAK,SAACoU,GAEHH,EAAUI,iBACTrU,KAAM,SAAEsU,GACL7U,EAAUoB,WAAW,SAASC,IAAIkL,GAAST,OAAO,CAC9CmG,aAAajS,EAAU6B,WAAWC,kBAClCgT,SAAS9U,EAAU6B,WAAWC,kBAC9BoQ,OAAQ,UACR6C,cAAeF,IAEhBtU,KAAK,WAAM,IAAAyU,EACVhV,EAAUoB,WAAW,SAASC,IAAIyJ,GAASgB,QAA3CkJ,EAAA,GAAA3Q,OAAAiB,EAAA,EAAAjB,CAAA2Q,EAAA,gBAAA/P,OACqBiG,GAAYlL,EAAU6B,WAAW0L,YAAYhB,IADlElI,OAAAiB,EAAA,EAAAjB,CAAA2Q,EAAA,WAAA/P,OAEgBiG,GAAYlL,EAAU6B,WAAWqR,WAAW3G,IAF5DyI,IAGGzU,KAAK,WACJf,EAAS,CAAC2C,KAAM,kBACjB5B,KAAK,WACJyB,OAAOC,SAASC,KAAO,OACxBE,MAAM,SAAAC,GACL5B,QAAQC,IAAI2B,OAEjBD,MAAM,SAAAC,GACL5B,QAAQC,IAAI2B,OAEjBD,MAAM,SAAAC,GACL5B,QAAQC,IAAI2B,GACZ4S,MAAM,uCAEX7S,MAAM,SAAAC,GACL5B,QAAQC,IAAI2B,GACZ4S,MAAM,0CAIVxU,QAAQC,IAAI,wCACZlB,EAAS,CAAC2C,KAAM,0BAGpB3C,EAAS,CAAC2C,KAAM,uBOlFsC2R,CAAoBvH,EAAQzD,EAAO2K,KAC7FO,kBAAmB,SAACzH,EAAQzD,GAAT,OAAkBtJ,EPsFZ,SAAC+M,EAASzD,GACvC,OAAO,SAACtJ,EAAUC,EAAXsN,GAAuDA,EAAhClN,YAAgC,IACpDG,GAAYF,EADwCiN,EAAnBjN,gBAEjCoL,EAAWzL,IAAWM,SAASc,QAAQ6B,aACvCoI,EAAUrL,IAAWM,SAASG,KAAKoB,IACjC2R,EAAkBnK,EAAlBmK,cAIJnI,IAAYmI,EACZjT,EAAUoB,WAAW,SAASC,IAAIkL,GAAST,OAAO,CAC9CmG,aAAajS,EAAU6B,WAAWC,kBAClCgT,SAAS9U,EAAU6B,WAAWC,kBAC9BoQ,OAAQ,YACT3R,KAAK,WAAM,IAAAyM,EACVhN,EAAUoB,WAAW,SAASC,IAAIyJ,GAASgB,QAA3CkB,EAAA,GAAA3I,OAAAiB,EAAA,EAAAjB,CAAA2I,EAAA,gBAAA/H,OACqBiG,GAAYlL,EAAU6B,WAAW0L,YAAYhB,IADlElI,OAAAiB,EAAA,EAAAjB,CAAA2I,EAAA,WAAA/H,OAEgBiG,GAAYlL,EAAU6B,WAAWqR,WAAW3G,IAF5DS,IAGGzM,KAAK,WACJf,EAAS,CAAC2C,KAAM,kBACjB5B,KAAK,WACJyB,OAAOC,SAASC,KAAO,OACxBE,MAAM,SAACC,GACN5B,QAAQC,IAAI2B,OAEjBD,MAAM,SAACC,GACN5B,QAAQC,IAAI2B,KAGhB7C,EAAS,CAAC2C,KAAM,uBOnH0B6R,CAAkBzH,EAAQzD,OAIhEjG,CAA4CyQ,IC/H/C4B,GAAb,SAAAhR,GAAA,SAAAgR,IAAA,IAAA/Q,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAAuR,GAAA,QAAA3Q,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAAV,MAAAQ,EAAAE,OAAAS,EAAA,EAAAT,CAAA6Q,IAAAnQ,KAAAC,MAAAb,EAAA,CAAAR,MAAAsB,OAAAP,MACIgM,WAAa,SAACtL,GACVA,EAAEO,iBACF3D,OAAOC,SAAS0O,KAAK,MAH7BvM,EAKI+Q,cAAgB,SAAC/P,GAAM,IACX0D,EAAW1E,EAAKpB,MAAMyP,YAAY9P,KAAlCmG,OACR1E,EAAKpB,MAAMoS,YAAYhR,EAAKpB,MAAMuP,MAAMC,OAAOhN,GAAGsD,IAP1D1E,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAA6Q,EAAAhR,GAAAG,OAAA0B,EAAA,EAAA1B,CAAA6Q,EAAA,EAAAlP,IAAA,oBAAAP,MAAA,WAUQ9B,KAAKX,MAAMsJ,UAAU3I,KAAKX,MAAMuP,MAAMC,OAAOhN,MAVrD,CAAAQ,IAAA,uBAAAP,MAAA,WAaQ9B,KAAKX,MAAMsJ,cAbnB,CAAAtG,IAAA,SAAAP,MAAA,WAgBI,IAAMD,EAAK7B,KAAKX,MAAMuP,MAAMC,OAAOhN,GACnC,GAAI7B,KAAKX,MAAMyP,YAAY9P,KAAK,KAAA+P,EACyC/O,KAAKX,MAAMyP,YAAY9P,KAApF4F,EADoBmK,EACpBnK,QAASI,EADW+J,EACX/J,WAAWoM,EADArC,EACAqC,cAAejM,EADf4J,EACe5J,OAAQR,EADvBoK,EACuBpK,OAAQH,EAD/BuK,EAC+BvK,MAC3D,OACIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsB4C,IAAKR,GACtCvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,oBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACPH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAS+E,GACvBlF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,iBAA0CuF,EAAWP,SAASuK,eAAeC,QAAQ,kCAAkC,IAAM,IAAKjK,EAAWP,SAASC,gBACtJpF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,iBAAyC0F,EAAOO,YAChDpG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,eAAuCkF,GACvCrF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,eACIH,EAAAC,EAAAC,cAAA,SAAIoF,GACPwM,EACG9R,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,oBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,GAAG4F,IAAK+L,EAAe9L,IAAI,SAKpD,OAKdhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,UAAQI,QAASI,KAAK+M,WACdtN,UAAU,sCADlB,QAEAH,EAAAC,EAAAC,cAAA,UAAQI,QAASI,KAAKwR,cACd/R,UAAU,wBADlB,aAQR,OAAOH,EAAAC,EAAAC,cAAC0P,EAAD,UAzDfqC,EAAA,CAAiCnR,aA2EjBlB,eAdQ,SAACmB,EAAO8O,GAE5B,MAAO,CACHL,YAFgBzO,EAAMiE,KAAKuE,SAAWxI,EAAMiE,KAAKuE,SAAW,OAKzC,SAAChN,GAExB,MAAO,CACH8M,UAAW,SAACC,GAAD,OAAa/M,EAAS8M,EAAUC,KAC3C6I,YAAY,SAAC7I,EAAQzD,GAAT,OAAkBtJ,ER4KX,SAAC+M,EAASzD,GACjC,OAAO,SAACtJ,EAAUC,EAAX4V,GAAuDA,EAAhCxV,YAAgC,IAOtDyV,EANEtV,GAAYF,EADwCuV,EAAnBvV,gBAEjCoL,EAAWzL,IAAWM,SAASc,QAAQ6B,aACvCsQ,EAAWvT,IAAWM,SAASc,QAAQW,UACvCX,EAAUpB,IAAWM,SAASc,QAC9BiK,EAAUrL,IAAWM,SAASG,KAAKoB,IACjC2R,EAAkBnK,EAAlBmK,cAKJnI,IAAYmI,EACZjT,EAAUoB,WAAW,UAAUC,IAAI6J,GAAU3I,MAAMhC,KAAK,SAAAc,GAAM,IAClDyO,EAAiBzO,EAAIsB,OAArBmN,aAER,OADAwF,EAAYxF,EAAamD,GAAe/I,OAAS,IAElD3J,KAAK,WACJP,EAAUoB,WAAW,UAAUC,IAAI6J,GAAUY,OAA7CzH,OAAAiB,EAAA,EAAAjB,CAAA,mBAAAY,OACqBgO,EADrB,WAC6CqC,IAC1C/U,KAAK,WACJP,EAAUoB,WAAW,SAASC,IAAIkL,GAAST,OAAO,CAC9CmG,aAAajS,EAAU6B,WAAWC,kBAClCoQ,OAAQ,WACRJ,QAAQ,CAACyD,WAAWvV,EAAU6B,WAAWC,kBAChC0T,WAAWxC,EACXyC,cAAc5U,EAAQc,UAAY,KAClC+T,gBAAgB7U,EAAQkB,WAAa,QAC/CxB,KAAK,WAAI,IAAAoV,EACR3V,EAAUoB,WAAW,SAASC,IAAI4R,GAAenH,QAAjD6J,EAAA,GAAAtR,OAAAiB,EAAA,EAAAjB,CAAAsR,EAAA,WAAA1Q,OACgBiG,GAAYlL,EAAU6B,WAAW0L,YAAYhB,IAD7DlI,OAAAiB,EAAA,EAAAjB,CAAAsR,EAAA,UAAA1Q,OAEeiG,GAAYlL,EAAU6B,WAAWqR,WAAW3G,IAF3DoJ,IAGGpV,KAAK,WACJf,EAAS,CAAC2C,KAAM,kBACjB5B,KAAK,WACJyB,OAAOC,SAASC,KAAO,OACxBE,MAAM,SAAAC,GAAG,OAAE5B,QAAQC,IAAI2B,OAC3BD,MAAM,SAAAC,GAAG,OAAE5B,QAAQC,IAAI2B,OAC3BD,MAAM,SAAAC,GAAG,OAAE5B,QAAQC,IAAI2B,OAC3BD,MAAM,SAAAC,GAAG,OAAE5B,QAAQC,IAAI2B,KAG1B4S,MAAM,4BQtN6BG,CAAY7I,EAAQzD,OAInDjG,CAA4CqS,IC3E/CU,GAAb,SAAA1R,GAAA,SAAA0R,IAAA,IAAAzR,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAAiS,GAAA,QAAArR,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAAV,MAAAQ,EAAAE,OAAAS,EAAA,EAAAT,CAAAuR,IAAA7Q,KAAAC,MAAAb,EAAA,CAAAR,MAAAsB,OAAAP,MACIV,MAAQ,CACNyH,UAAW,GACXoK,QAAS,GACTC,cAAe,IAJrB1R,EAMIe,aAAe,SAACC,GACZhB,EAAKiB,SAALhB,OAAAiB,EAAA,EAAAjB,CAAA,GACIe,EAAEG,OAAOC,GAAKJ,EAAEG,OAAOE,SARnCrB,EAYIsB,aAAe,SAACN,GACZA,EAAEO,iBACFvB,EAAKpB,MAAM+S,YAAY3R,EAAKJ,QAdpCI,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAAuR,EAAA1R,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAuR,EAAA,EAAA5P,IAAA,SAAAP,MAAA,WAkBI,OACIxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACZ+C,SAAUxC,KAAK+B,cACfzC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,aAAtC,cACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,OACJqD,GAAG,YACHa,SAAU1C,KAAKwB,gBAG3BlC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,WAAtC,YACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,OACJqD,GAAG,UACHa,SAAU1C,KAAKwB,gBAG3BlC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,iBAAtC,kBACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,WACJqD,GAAG,gBACHa,SAAU1C,KAAKwB,gBAG3BlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACTO,KAAKX,MAAMgT,WAAa/S,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAeO,KAAKX,MAAMgT,YAAoB,MAEzF/S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAlB,wBAhDpBwS,EAAA,CAAiC7R,aAqElBlB,eAZS,SAACmB,GAErB,MAAO,CACL9D,KAAM8D,EAAMjE,SAASG,KACrB8V,WAAYhS,EAAM9D,KAAK8V,aAGF,SAACxW,GACxB,MAAM,CACJuW,YAAa,SAACE,GAAD,OAAczW,EvBqHN,SAACyW,GACxB,OAAO,SAACzW,EAAUC,EAAX8U,GAAqDA,EAA/B1U,YAA+B,IAClDG,GAAYF,EADsCyU,EAAlBzU,gBAEhCgL,EAAUrL,IAAWM,SAASG,KAAKoB,IACnCT,EAAUpB,IAAWM,SAASc,QAChCqV,GAAgB,EACZzK,EAAsCwK,EAAtCxK,UAAWoK,EAA2BI,EAA3BJ,QAASC,EAAkBG,EAAlBH,cACH,IAArBrK,EAAUhH,QAAmC,IAAnBoR,EAAQpR,QAAyC,IAAzBqR,EAAcrR,OAKhEzE,EAAUoB,WAAW,UAAUkB,MAAO,UAAW,KAAO2T,EAASJ,SAAUtT,MAC1EhC,KAAM,SAAAiC,GACHA,EAAcC,QAAQ,SAAApB,GACfA,EAAIsB,SACHuT,GAAgB,OAGzB3V,KAAM,WACA2V,GACD1W,EAAS,CAAE2C,KAAM,sBAChB+T,GAEDlW,EAAUoB,WAAW,UAAUqQ,IAA/BpN,OAAAqN,EAAA,EAAArN,CAAA,GACO4R,EADP,CAEI3I,QAAQtN,EAAU6B,WAAWqR,WAAWpI,MACzCvK,KAAK,SAAA0G,GAAQ,IAAA+N,EAER9J,EAAWjE,EAAKzB,GACpBxF,EAAUoB,WAAW,SAASC,IAAIyJ,GAASgB,OAAO,CAC9CF,UAAU5L,EAAU6B,WAAWqR,WAAWhI,GAC1CxI,aAAcwI,IAElBlL,EAAUoB,WAAW,UAAUC,IAAI6J,GAAUY,QAA7CkJ,EAAA,CACI9J,SAAUA,GADd7G,OAAAiB,EAAA,EAAAjB,CAAA2Q,EAAA,gBAAA/P,OAEqB6F,GAAW,CAACtJ,UAAUX,EAAQW,UAAUO,UAAUlB,EAAQkB,WAAW,KAAKmI,OAAO,EAAEY,QAAQA,IAFhHzG,OAAAiB,EAAA,EAAAjB,CAAA2Q,EAAA,eAAA/P,OAGoB6F,GAAW,CAACtJ,UAAUX,EAAQW,UAAUO,UAAUlB,EAAQkB,WAAW,KAAKJ,SAAS,GAAAsD,OAAGpE,EAAQc,WAAe,KAAMmJ,QAAQA,IAH/IkK,MAKDzU,KACCf,EAAS,CAAE2C,KAAM,yBACnB5B,KAAK,WACHyB,OAAOC,SAASC,KAAO,SAlCnC1C,EAAS,CAAE2C,KAAM,uBuB7Ha4T,CAAYE,OAGvCpT,CAA4C+S,ICpErDO,8MACFnS,MAAQ,CACN6R,QAAS,GACTC,cAAe,MAEjB3Q,aAAe,SAACC,GACZhB,EAAKiB,SAALhB,OAAAiB,EAAA,EAAAjB,CAAA,GACIe,EAAEG,OAAOC,GAAKJ,EAAEG,OAAOE,WAG/BC,aAAe,SAACN,GACZA,EAAEO,iBACFvB,EAAKpB,MAAMoT,YAAYhS,EAAKJ,gFAGhC,OACIf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACZ+C,SAAUxC,KAAK+B,cACfzC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,WAAtC,YACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,OACJqD,GAAG,UACHa,SAAU1C,KAAKwB,gBAE3BlC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAagD,QAAQ,iBAAtC,YACAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOhB,KAAK,WACJqD,GAAG,gBACHa,SAAU1C,KAAKwB,gBAE3BlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACTO,KAAKX,MAAMgT,WAAa/S,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAeO,KAAKX,MAAMgT,YAAoB,MAEzF/S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAlB,yBArCMW,aAuDXlB,eAVS,SAACmB,GACrB,MAAO,CACLgS,WAAYhS,EAAM9D,KAAK8V,aAGF,SAACxW,GAC1B,MAAO,CACL4W,YAAa,SAAC9P,GAAD,OAAW9G,GxBgEA+G,EwBhEqBD,ExBiEtC,SAAC9G,EAAUC,EAAXsT,GAAqDA,EAA/BlT,YAA+B,IAAlBC,EAAkBiT,EAAlBjT,aAC9B+V,EAA2BtP,EAA3BsP,QAASC,EAAkBvP,EAAlBuP,cACX9V,EAAYF,IACZgL,EAAUrL,IAAWM,SAASG,KAAKoB,IACnCT,EAAUpB,IAAWM,SAASc,QAChCwV,GAAsB,EACtBnL,EAAW,KACfzK,QAAQC,IAAI,SACY,IAAnBmV,EAAQpR,QAAyC,IAAzBqR,EAAcrR,OAKvCzE,EAAUoB,WAAW,UAAUkB,MAAO,UAAW,KAAMiE,EAAYsP,SAAStT,MAC3EhC,KAAM,SAAAiC,GAC+B,IAA9BA,EAAc8T,KAAK7R,QACnBjF,EAAS,CAAE2C,KAAM,yBACa,IAA9BK,EAAc8T,KAAK7R,QACnBjC,EAAcC,QAAQ,SAAApB,GAClB,GAAGA,EAAIsB,OAAO,CACVuI,EAAW7J,EAAImE,GADL,IAAA+Q,EAEwBlV,EAAIsB,OAA/B2K,EAFGiJ,EAEHjJ,QAASwI,EAFNS,EAEMT,cACXA,IAAkBvP,EAAYuP,eAC/BtW,EAAS,CAAE2C,KAAM,sBACf2T,IAAkBvP,EAAYuP,iBACA,IAA7BxI,EAAQkJ,QAAQ1L,GACfuL,GAAsB,EAEtB7W,EAAS,CAAE2C,KAAM,kCAMtC5B,KAAK,WACgC,IAAAkW,EAAhCJ,GAAuBvL,GAEvB9K,EAAUoB,WAAW,UAAUC,IAAI6J,GAAUY,QAA7C2K,EAAA,GAAApS,OAAAiB,EAAA,EAAAjB,CAAAoS,EAAA,gBAAAxR,OACqB6F,GAAW,CAACtJ,UAAUX,EAAQW,UAAUO,UAAUlB,EAAQkB,WAAa,KAAKmI,OAAO,EAAEY,QAAQA,IADlHzG,OAAAiB,EAAA,EAAAjB,CAAAoS,EAAA,UAEYzW,EAAU6B,WAAWqR,WAAWpI,IAF5CzG,OAAAiB,EAAA,EAAAjB,CAAAoS,EAAA,eAAAxR,OAGoB6F,GAAW,CAACtJ,UAAUX,EAAQW,UAAUO,UAAUlB,EAAQkB,WAAY,KAAKJ,SAAS,GAAAsD,OAAGpE,EAAQc,WAAe,KAAMmJ,QAAQA,IAHhJ2L,IAIGrU,MAAM,SAAAC,GAAG,OAAI5B,QAAQC,IAAI2B,OAEjC9B,KAAK,WAED8V,GAAuBvL,GACtB9K,EAAUoB,WAAW,SAASC,IAAIyJ,GAASgB,OAAO,CACtCF,UAAU5L,EAAU6B,WAAWqR,WAAWhI,GAC1CxI,aAAcwI,IACf9I,MAAM,SAAAC,GAAG,OAAI5B,QAAQC,IAAI2B,OAGzC9B,KAAK,WACD8V,GAAuBvL,GACtBtL,EAAS,CAAE2C,KAAM,0BAEtB5B,KAAK,WACD8V,GAAuBvL,IACtB9I,OAAOC,SAASC,KAAO,QAE5BE,MAAM,SAAAC,GAAG,OAAI5B,QAAQC,IAAI2B,KAnD5B7C,EAAS,CAAE2C,KAAM,yBAVF,IAACoE,KwB7Db1D,CAA4CsT,IChC5CO,GAxBG,WACd,OACIzT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,wBACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,gBAAgBuT,gBAAgB,uBAAuBrT,GAAG,qBAA7E,gBACAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,gBAAgBuT,gBAAgB,uBAAuBrT,GAAG,qBAA7E,iBAUZL,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAO2Q,KAAK,oBAAoBC,UAAWjB,KAC3C3S,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAO2Q,KAAK,oBAAoBC,UAAWV,OCkBvCW,oLApBR,OACA7T,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAC4T,EAAD,MACA9T,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,KACIhD,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAO+Q,OAAK,EAACJ,KAAK,IAAIC,UAAWpJ,IACjCxK,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAO2Q,KAAK,UAAUC,UAAW5S,IACjChB,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAO+Q,OAAK,EAACJ,KAAK,YAAYC,UAAWzE,IACzCnP,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAO+Q,OAAK,EAACJ,KAAK,iBAAiBC,UAAWvD,KAC9CrQ,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAO+Q,OAAK,EAACJ,KAAK,oBAAoBC,UAAW3B,KACjDjS,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAO2Q,KAAK,UAAUC,UAAY,kBAAM5T,EAAAC,EAAAC,cAAC8T,EAAD,SACxChU,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAO2Q,KAAK,QAAQC,UAAWK,IAC/BjU,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAO2Q,KAAK,aAAaC,UAAWH,eAhBtCxC,IAAMnQ,8BCjBlBoT,GAAY,CACdjR,UAAW,KACX8P,WAAY,MA8EDoB,GA5EK,WAAgC,IAA/BpT,EAA+BQ,UAAAC,OAAA,QAAA4S,IAAA7S,UAAA,GAAAA,UAAA,GAAvB2S,GAAW9C,EAAY7P,UAAAC,OAAA,EAAAD,UAAA,QAAA6S,EAChD,OAAOhD,EAAOlS,MACV,IAAK,cAED,OADA1B,QAAQC,IAAI,eACL2D,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIkC,UAAW,iBAEnB,IAAK,gBAED,OADAzF,QAAQC,IAAI,iBACL2D,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIkC,UAAW,OAEnB,IAAK,kBAED,OADAzF,QAAQC,IAAI,mBACLsD,EACX,IAAK,iBAED,OADAvD,QAAQC,IAAI,4BACL2D,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIkC,UAAW,OAEnB,IAAK,eAED,OADAzF,QAAQC,IAAI,gBACL2D,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIkC,UAAWmO,EAAOhS,IAAIiV,UAE9B,IAAK,sBAEL,OADA7W,QAAQC,IAAI,wBACL2D,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIgS,WAAY,OAEhB,IAAK,uBAED,OADAvV,QAAQC,IAAI,+BACL2D,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIgS,WAAY,gCAEpB,IAAK,oBAED,OADAvV,QAAQC,IAAI,2BACL2D,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIgS,WAAY,4BAEpB,IAAK,oBAED,OADAvV,QAAQC,IAAI,6BACL2D,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIgS,WAAY,iCAEpB,IAAK,0BAEL,OADAvV,QAAQC,IAAI,6BACL2D,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIgS,WAAY,4CAEhB,IAAK,sBAED,OADAvV,QAAQC,IAAI,wBACL2D,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIgS,WAAY,OAEpB,IAAK,oBAEL,OADAvV,QAAQC,IAAI,sBACL2D,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIgS,WAAY,uDAEhB,QACI,OAAOhS,IC5EbmT,GAAY,CACdpH,MAAM,GACNtB,UAAU,GACVjC,SAAS,GACTgC,oBAAoB,GACpBD,kBAAkB,GAClBD,iBAAiB,GACjBD,kBAAkB,GAClB6B,UAAS,EACT7N,KAAI,EACJgR,WAAW,MAsEAkE,GAnEK,WAA+B,IAA9BvT,EAA8BQ,UAAAC,OAAA,QAAA4S,IAAA7S,UAAA,GAAAA,UAAA,GAAtB2S,GAAW9C,EAAW7P,UAAAC,OAAA,EAAAD,UAAA,QAAA6S,EAC/C,OAAQhD,EAAOlS,MACX,IAAK,cAEJ,OADD1B,QAAQC,IAAI,cAAe2T,EAAOpM,MAC1BjE,EACR,IAAK,aACD,OAAAK,OAAAqN,EAAA,EAAArN,CAAA,GACOL,EADP,CAEI3B,KAAI,IAEZ,IAAK,mBACL,OAAAgC,OAAAqN,EAAA,EAAArN,CAAA,GACOL,EADP,CAEI3B,KAAI,EACJgR,WAAW,6CAEf,IAAK,oBACL,OAAAhP,OAAAqN,EAAA,EAAArN,CAAA,GACOL,EADP,CAEI3B,KAAI,EACJgR,WAAW,sCAEf,IAAK,mBACL,OAAAhP,OAAAqN,EAAA,EAAArN,CAAA,GACOL,EADP,CAEI3B,KAAI,EACJgR,WAAW,OAEf,IAAK,oBAED,OADA5S,QAAQC,IAAI,cAAe2T,EAAOhS,KAC3B2B,EACX,IAAK,YACD,OAAOK,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIyK,UAAU4F,EAAO5F,UACjBD,oBAAoB6F,EAAO7F,oBAC3BD,kBAAkB8F,EAAO9F,kBACzBD,iBAAiB+F,EAAO/F,iBACxBD,kBAAkBgG,EAAOhG,kBACzB6B,UAAS,IAEjB,IAAK,WACD,OAAO7L,OAAAqN,EAAA,EAAArN,CAAA,GACIL,EADX,CAEQwI,SAAS6H,EAAO7H,WAE5B,IAAK,aACD,OAAAnI,OAAAqN,EAAA,EAAArN,CAAA,GACOL,EADP,CAEIwI,SAAS,KAEjB,IAAK,cACD,OAAOnI,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIyK,UAAU,GACVD,oBAAoB,GACpBD,kBAAkB,GAClBD,iBAAiB,GACjBD,kBAAkB,GAClB6B,UAAS,IAEjB,QACI,OAAOlM,IC3EbmT,GAAY,CACdlH,OAAO,KACPuH,YAAY,KACZvI,iBAAiB,MA+BNwI,GA7BM,WAAgC,IAA/BzT,EAA+BQ,UAAAC,OAAA,QAAA4S,IAAA7S,UAAA,GAAAA,UAAA,GAAvB2S,GAAW9C,EAAY7P,UAAAC,OAAA,EAAAD,UAAA,QAAA6S,EACjD,OAAOhD,EAAOlS,MACV,IAAK,YACD,OAAOkC,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIiM,OAAOoE,EAAO/I,aAEtB,IAAK,sBACD,OAAOtH,EACX,IAAK,oBACD,OAAOK,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIwT,YAAYnD,EAAOzR,QAE3B,IAAK,YACL,OAAOyB,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIiL,iBAAiBoF,EAAOtJ,YAE5B,IAAK,kBACL,OAAO1G,OAAAqN,EAAA,EAAArN,CAAA,GACAL,EADP,CAEIiL,iBAAiB,OAErB,QACI,OAAOjL,wBCbJ0T,GARKC,2BAAgB,CACjCzX,KAAMkX,GACNnP,KAAMsP,GACN/L,MAAOiM,GACPzX,UAAW4X,oBACX7X,SAAU8X,+BCAPC,GAAQC,uBAAYL,GACtBM,+BACIC,2BAAgBC,KAAMC,kBAAkB,CAAErY,6BAAcD,8BACxDuY,0BAAeC,KACfC,8BAAmBD,IAAS,CAAEE,wBAAuB,EACvBC,YAAa,QACbC,mBAAmB,EACnBC,kBAAmB,eAKzDZ,GAAMa,oBAAoBpY,KAAK,WAC3BqY,IAASC,OAAO5V,EAAAC,EAAAC,cAAC2V,EAAA,EAAD,CAAUhB,MAAOA,IAAQ7U,EAAAC,EAAAC,cAAC4V,GAAD,OAAoBC,SAASC,eAAe","file":"static/js/main.5e6f985e.chunk.js","sourcesContent":["const randomColor = require('randomcolor');\nexport const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).then(() => {\n            window.location.hash = '#/'\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'})\n        }).then(()=>{\n            window.location.hash = '#/'\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();       \n        let randomcolor = randomColor({luminosity: 'bright'}); \n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstname: newUser.firstName,\n                lastname: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0],\n                email: newUser.email,\n                createAt: firestore.FieldValue.serverTimestamp(),\n                photoURL: null,\n                userColor:randomcolor\n            })\n        }).then(()=>{\n            firebase.auth().currentUser.updateProfile({\n                displayName: newUser.firstName,\n                email:newUser.email,\n                createAt: firestore.FieldValue.serverTimestamp()\n            })\n        })\n        .then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).then(()=>{\n            window.location.hash = '#/signgroup/signup'\n        })\n        .catch( err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}\n\nexport const googleLogin = () =>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        const provider = new firebase.auth.GoogleAuthProvider();\n        let randomcolor = randomColor({luminosity: 'bright'}); \n        let initName\n        let initLName \n        firebase.auth().signInWithPopup(provider)\n        .then((result)=> {\n            console.log(result)\n            const {  given_name,family_name, picture,email} = result.additionalUserInfo.profile\n            if( result.additionalUserInfo.isNewUser ){\n                initName = given_name|| ' '\n                initLName = family_name|| ' '\n                const { user } = result\n\n                firestore.collection('users').doc(user.uid).set({\n                    firstname: given_name || '',\n                    lastname: family_name || '',\n                    initials:  initName[0] + initLName[0],\n                    photoURL: picture,\n                    email: email,\n                    createAt: firestore.FieldValue.serverTimestamp(),\n                    userColor:randomcolor\n                })\n                .then(() =>  window.location.hash = '#/signgroup/signup' )\n                .then(() => dispatch({ type: 'LOGIN_SUCCESS' }))\n                .catch((err) => {\n                    console.log(err)\n                    dispatch({ type: 'LOGIN_ERROR'}, err)\n                })\n            } else {\n                firestore.collection('users').where('email','==',email).get()\n                .then( querySnapshot => {\n                    querySnapshot.forEach( doc => {\n                        const defaultGroup = doc.data().defaultGroup || null\n                        if (defaultGroup){\n                            console.log(defaultGroup)\n                            dispatch({ type: 'LOGIN_SUCCESS' })\n                            window.location.hash = '#/'\n                        } else {\n                            console.log(defaultGroup)\n                            dispatch({ type: 'LOGIN_SUCCESS' })\n                            window.location.hash = '#/signgroup/signup'\n                        }  \n                    })\n                })\n                dispatch({ type: 'LOGIN_SUCCESS' })\n            }\n          }).catch(function(error) {\n            console.log('error',error)\n            dispatch({ type: 'LOGIN_ERROR', error})\n          });\n    }\n}\n\nexport const signInGroup = (credentials) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const { groupId, groupPassword } = credentials\n        const firestore = getFirestore();\n        const userUid = getState().firebase.auth.uid;\n        const profile = getState().firebase.profile;\n        let groupSignInValidate = false;\n        let groupUid = null;\n        console.log('click')\n        if ( groupId.length === 0 || groupPassword.length === 0 ){\n            dispatch({ type: 'SIGNINGROUP_EMPTY'})\n            return\n        } else {\n        //(1)query in group collection to check the group id whether exist or not\n            firestore.collection('groups').where( 'groupId', '==', credentials.groupId).get()\n            .then( querySnapshot => {\n                if( querySnapshot.docs.length === 0 ){\n                    dispatch({ type: 'SIGNINGROUP_NOTEXIST'})\n                }if(querySnapshot.docs.length === 1){\n                    querySnapshot.forEach(doc => {  \n                        if(doc.data()){\n                            groupUid = doc.id;\n                            const{ members, groupPassword } = doc.data();\n                            if ( groupPassword !== credentials.groupPassword){\n                                dispatch({ type: 'SIGNINGROUP_ERROR'})\n                            }if ( groupPassword === credentials.groupPassword){\n                                if(members.indexOf(userUid)=== -1){\n                                    groupSignInValidate = true\n                                }else{\n                                    dispatch({ type: 'SIGNINGROUP_ERROR_EXIST'})\n                                }\n                            }\n                        } \n                    })\n                } \n            }).then(() => {\n                if( groupSignInValidate && userUid ){\n        //(2)update the userUid in the members array\n                    firestore.collection('groups').doc(groupUid).update({\n                        [`pointsRecord.${userUid}`]:{firstname:profile.firstname,userColor:profile.userColor || null,points:0,userUid:userUid},\n                        members:firestore.FieldValue.arrayUnion(userUid),\n                        [`membersInfo.${userUid}`]:{firstname:profile.firstname,userColor:profile.userColor|| null,photoURL:`${profile.photoURL}` ||  null ,userUid:userUid}\n                    }).catch(err => console.log(err))\n                }\n            }).then(()=>{\n                //(3)update the groupUid in the users groups array\n                if(groupSignInValidate && userUid ){\n                    firestore.collection('users').doc(userUid).update({\n                                groupsUid:firestore.FieldValue.arrayUnion(groupUid),\n                                defaultGroup: groupUid\n                            }).catch(err => console.log(err))\n                }\n\n            }).then(()=>{\n                if(groupSignInValidate && userUid ){\n                    dispatch({ type: 'SIGNINGROUP_SUCCESS'})\n                }\n            }).then(()=>{\n                if(groupSignInValidate && userUid){\n                    window.location.hash = '#/'\n                }\n            }).catch(err => console.log(err))\n        }\n    }\n}\n\nexport const signUpGroup = (newGroup) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const userUid = getState().firebase.auth.uid;\n        const profile = getState().firebase.profile;\n        let groupValidate = true;\n        const { groupName, groupId, groupPassword } = newGroup \n        if (groupName.length === 0 || groupId.length === 0 || groupPassword.length === 0){\n            dispatch({ type: 'SIGNINGROUP_EMPTY'})\n            return\n        } else {\n        //(1) Check the groupId whether exist or not\n            firestore.collection('groups').where( 'groupId', '==' , newGroup.groupId ).get()\n            .then( querySnapshot => {\n                querySnapshot.forEach(doc =>{\n                    if(doc.data()){\n                        groupValidate = false\n                    }\n                })\n            }).then( () =>{\n                if( !groupValidate){\n                    dispatch({ type: 'SIGNUPGROUP_ERROR'})\n                }if( groupValidate ){\n        //(2)If it is new groupId update the members array in the firestorecollection('groups') with the form information groupName, groupId, groupPassword, members userUid\n                    firestore.collection('groups').add({\n                        ...newGroup,\n                        members:firestore.FieldValue.arrayUnion(userUid)\n                    }).then(resp => {\n        //(3)update to the user database with the groupUid\n                        let groupUid = resp.id\n                        firestore.collection('users').doc(userUid).update({\n                            groupsUid:firestore.FieldValue.arrayUnion(groupUid),\n                            defaultGroup: groupUid\n                        })\n                        firestore.collection('groups').doc(groupUid).update({\n                            groupUid: groupUid,\n                            [`pointsRecord.${userUid}`]:{firstname:profile.firstname,userColor:profile.userColor||null,points:0,userUid:userUid},\n                            [`membersInfo.${userUid}`]:{firstname:profile.firstname,userColor:profile.userColor||null,photoURL:`${profile.photoURL}` ||  null ,userUid:userUid}\n                        })\n                    }).then(\n                        dispatch({ type: 'SIGNUPGROUP_SUCCESS'})\n                    ).then(()=>{\n                        window.location.hash = '#/'\n                    })\n                }\n            })\n        }\n    }\n}\n\nexport const leaveGroup = () => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const userUid = getState().firebase.auth.uid;\n        const { defaultGroup, groupsUid } = getState().firebase.profile;\n        let newDefaultGroup = null;\n        const newGroupsUid = groupsUid.filter(item => item !== defaultGroup );\n        // console.log('the group uid going to drop this',defaultGroup)\n        // console.log('this is the new array of the uid',newGroupsUid)\n        // newDefaultGroup = newGroupsUid.pop()\n        // console.log('maka a new default group',newDefaultGroup,newGroupsUid.pop())\n        // console.log('new uid of the default group ',newGroupsUid)\n        if(!defaultGroup) { return }\n\n        // remove the user related information of the doc of the group\n        firestore.collection('groups').doc(defaultGroup).update({\n            members:firestore.FieldValue.arrayRemove(userUid),\n            [`membersInfo.${userUid}`]:firestore.FieldValue.delete(),\n            [`pointsRecord.${userUid}`]:firestore.FieldValue.delete()\n        }).then(()=>{\n            if (newGroupsUid.length === 0){\n                newDefaultGroup = null\n                firestore.collection('users').doc(userUid).update({\n                    groupsUid:newGroupsUid,\n                    defaultGroup: newDefaultGroup \n                }).then(()=>{\n                    window.location.hash = '#/signgroup/signin'\n                }).catch(err=>console.log(err))\n            }else{\n                console.log(newGroupsUid)\n                firestore.collection('users').doc(userUid).update({\n                    groupsUid:newGroupsUid,\n                    defaultGroup: newGroupsUid[0]\n                }).then(()=>{\n                    window.location = '/'\n                }).catch(err=>console.log(err))\n            }\n\n        }).catch(err=>console.log(err))\n    }\n}","import React from 'react'\n\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../store/actions/authActions'\n\n\n\nconst SignedInLinks = (props) => {\n    const { profile } = props\n    return(\n        <div className=\"signinwrapper\">\n            <NavLink to=\"/post\" className=\"link-button\">Create task</NavLink>\n            <NavLink to=\"/\" className=\"link-button\" onClick={ props.signOut }>Log out</NavLink>   \n            <NavLink to=\"/\" className=\"avatar-circle\">{profile.initials}</NavLink>\n        </div>\n    )   \n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut:() => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return(\n        <div className=\"signinwrapper\">\n            <NavLink to=\"/signup\" className=\"link-button\">Sign up</NavLink>\n            <NavLink to=\"/signin\"className=\"link-button \">Log in</NavLink>\n        </div>\n    )\n    \n}\nexport default SignedOutLinks;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\nclass Navbar extends Component{\n\n    render(){\n        const { auth,  profile } = this.props;\n        const links = auth.uid ?  <SignedInLinks profile={ profile } /> : <SignedOutLinks />;\n        return(\n        <nav className=\"navwrapper\"> \n            <div className=\"container\">\n                <Link to='/' className=\"brandname\">HOMIE</Link>\n                { links }\n            </div>\n        </nav>\n        )\n    }\n}\n\n\nconst mapStateToProps = ( state ) => {\n    return {\n        auth: state.firebase.auth,\n        profile:state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from  'react-router-dom';\nimport { signIn, googleLogin } from '../store/actions/authActions';\n\nexport class SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n           [e.target.id]: e.target.value\n        })\n        \n    }\n    handleSubmit = (e) =>  {\n        e.preventDefault();\n        this.props.signIn(this.state); \n    }\n    handleGoogleLogin = (e) =>{\n      this.props.googleLogin()\n    }\n    componentDidMount(){\n      const { auth, profile } = this.props;\n      if (auth.uid && !profile.defaultGroup) return <Redirect to ='/signgroup/signup' />\n      if (auth.uid && profile.defaultGroup) return <Redirect to ='/' />\n    }\n    componentDidUpdate(){\n\n    }\n  render() {\n    const { authError } = this.props;\n    // if (auth.uid && !profile.defaultGroup) return <Redirect to ='/' />\n    // if (auth.uid && profile.defaultGroup) return <Redirect to ='/' />\n    return (\n      <div className=\"container\">\n        <h2 className=\"sub-instruciton-title\">Member Login</h2>\n        <div className=\"formoutter\">\n          <div className=\"formwrapper\">\n            <div className=\"button-row\">\n              <button onClick={this.handleGoogleLogin}\n                      className=\"google-button\" >\n                <div className=\"login-icon\">G</div>\n                <div className=\"login-text\">Continue with Google</div> \n              </button>\n            </div>\n            <div className=\"feature-row\">\n              <div className=\"hr-box \">\n                <div className=\"hr-placer\">———</div>\n                <div className=\"hr\">OR</div>\n                <div className=\"hr-placer\">———</div>\n              </div>\n            </div>\n            <form className=\"signinform\"\n                onSubmit={this.handleSubmit}>\n                <label className=\"label-font\" htmlFor=\"email\">Email</label>\n                <div className=\"input-row\">\n                    <input type=\"email\"\n                            id=\"email\"\n                            onChange={this.handleChange}/>\n                </div>\n                <label className=\"label-font\"  htmlFor=\"password\">Password</label>\n                <div className=\"input-row\">\n                    <input type=\"password\"\n                            id=\"password\"\n                            onChange={this.handleChange}/>\n                </div>\n                <div className=\"text-row error-holder\">\n                  { authError ? <p className=\"alert-font\">{authError}</p> : null }\n                </div>\n                <div className=\"feature-row\">\n                    <button className=\"medium-button\">Log in\n                    </button>\n                </div>\n            </form>\n          </div>\n        </div>\n   \n        \n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n    googleLogin: () => dispatch(googleLogin())\n  }\n}\nexport default connect( mapStateToProps , mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from  'react-router-dom';\nimport { signUp, googleLogin } from '../store/actions/authActions';\n\nexport class SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) =>{\n        this.setState({\n           [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n    handleGoogleLogin = (e) =>{\n      this.props.googleLogin()\n    }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to ='/' />\n    return (\n      <div className=\"container\">\n      <h2 className=\"sub-instruciton-title\">Start with Homie</h2>\n        <div className=\"formoutter\">\n          <div className=\"formwrapper\">\n            <div className=\"button-row\">\n              <button onClick={this.handleGoogleLogin}\n                      className=\"google-button\" >\n                <div className=\"login-icon\">G</div>\n                <div className=\"login-text\">Sign up with Google</div> \n              </button>\n            </div>\n            <div className=\"feature-row\">\n              <div className=\"hr-box \">\n                <div className=\"hr-placer\">———</div>\n                <div className=\"hr\">OR</div>\n                <div className=\"hr-placer\">———</div>\n              </div>\n            </div>\n            <form className=\"signinform\"\n                onSubmit={this.handleSubmit}>\n                <label className=\"label-font\" htmlFor=\"email\">Email</label>\n                <div className=\"input-row\">\n                    \n                    <input type=\"email\"\n                            id=\"email\"\n                            onChange={this.handleChange}/>\n                </div>\n                <label className=\"label-font\" htmlFor=\"password\">Password</label>\n                <div className=\"input-row\">\n                    <input type=\"password\"\n                            id=\"password\"\n                            onChange={this.handleChange}/>\n                </div>\n                <label className=\"label-font\" htmlFor=\"firstName\">First name</label>\n                <div className=\"input-row\">\n                    <input type=\"text\"\n                            id=\"firstName\"\n                            onChange={this.handleChange}/>\n                </div>\n                <label className=\"label-font\" htmlFor=\"lastName\">Last name</label>\n                <div className=\"input-row\">\n                    <input type=\"text\"\n                            id=\"lastName\"\n                            onChange={this.handleChange}/>\n                </div>\n                <div className=\"text-row error-holder\">\n                    { authError ? <p className=\"alert-font\">{ authError }</p>  : null} \n                </div>\n                <div className=\"feature-row\">\n                    <button className=\"medium-button\">Sign Up</button>\n                </div>\n            </form>\n            \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  // console.log(state)\n  return {\n    auth: state.firebase.auth, //for checking the login or not\n    authError: state.auth.authError\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    signUp: (newUser) => dispatch(signUp(newUser)),\n    googleLogin:() => dispatch(googleLogin())\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react'\n\nexport class Loader extends Component {\n  render() {\n    return (\n        <div className=\"container\">\n            <div className=\"empty-card\">\n                <div className=\"bouncing-loader\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default Loader\n","import React, { Component } from 'react'\n\nexport class EmptyCard extends Component {\n  render() {\n    return (\n    <div className=\"container\">\n        <div className=\"empty-card\"></div>\n    </div>\n    )\n  }\n}\n\nexport default EmptyCard\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom' \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare, faQuestion, faStopwatch,faCamera } from '@fortawesome/free-solid-svg-icons';\nimport Loader from '../layout/Loader'\nimport EmptyCard from '../layout/EmptyCard'\nclass TaskList extends Component {\n    \n    render(){\n        const { completeTasks, pendingTasks, assignedTasks, unassignedTasks }  = this.props\n        return (\n            <div className=\"tasklist-wapper\">\n                <div className=\"title-row\">\n                    <h3 className=\"row-title\">UNASSIGNED</h3>\n                    <Link to=\"/post\" className=\"row-icon icon-row-button\">\n                    <h3><FontAwesomeIcon  icon={ faPlusSquare }/></h3>\n                    <p>Add another task</p>\n                    </Link>\n                </div>\n                { this.props.fetchComplete ?  (this.props.unassignedTasks[0]  ?  ( <div className=\"container \">\n                    {  unassignedTasks && unassignedTasks.map( task => {\n                        return (\n                            <Link className=\"card-hover\" to={'/task/'+  task.id } key={ task.id } task={ task }>\n                                <div className=\"task-card card-hover\" >\n                                    <div className=\"card-row\">\n                                        <div className=\"col-pic\">\n                                            <div className=\"card-img-box u-dashed-border\">\n                                                <div className=\"card-img-box-inner\">\n                                                    <div className=\"card-img-holder\">\n                                                    <p><FontAwesomeIcon icon={ faQuestion }/></p>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-info\">\n                                            <div className=\"info-title-row\">\n                                                <h3 className=\"card-title\">{ task.data.title }</h3>\n                                                <div className=\"create-tag\">\n                                                    <p className=\"card-create-time\">\n                                                        { task.data.createAt.toDate().toDateString() }</p>\n                                                    <p className=\"author-tag\">{ task.data.author } </p>\n                                                </div>\n                                            \n                                            </div>                                       \n                                            {task.data.content.length !== 0 ?<p className=\"info-content\">{ task.data.content }</p> : <p className=\"info-content u-invisible\"> -- </p>} \n                                            <div className=\"info-end-row\">\n                                            {task.data.verifybyImage ? (\n                                                <p className=\"expiry-tag\">\n                                                    <div className=\"tag-icon\">\n                                                        <FontAwesomeIcon  icon={ faCamera }/>\n                                                    </div>\n                                                    <div className=\"tag-date\">proof needed</div>\n                                                </p>\n                                            ): null }\n                                                <p className=\"expiry-tag\">\n                                                    <div className=\"tag-icon\">\n                                                        <FontAwesomeIcon  icon={faStopwatch }/>\n                                                    </div>\n                                                    <div className=\"tag-date\">{ task.data.expiryDate.toDate().toDateString() }</div>\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>                                \n                            </div>\n                        </Link>)\n                    })\n                 }</div>):<EmptyCard />) : <Loader /> }\n\n                <div className=\"title-row\"><h3 className=\"row-title\">ASSIGNED</h3></div>\n                { this.props.fetchComplete ? (this.props.assignedTasks[0] ? (\n                    <div className=\"container \">\n                    {  assignedTasks && assignedTasks.map( task => {\n                            return (\n                            <Link to={'/task/memo/'+  task.id } key={ task.id } task={task}>\n                                <div className=\"task-card card-hover\">\n                                <div className=\"card-row\">\n                                    <div className=\"col-pic\">\n                                        <div className=\"card-img-box \">\n                                            <div className=\"card-img-box-inner\">\n                                                { task.data.assign.assignedToURL !== null ? <img className=\"card-img-holder\" src={ task.data.assign.assignedToURL } alt=\"\"/> :  <div className=\"card-img-holder\" style={{backgroundColor:task.data.assign.assignedToColor}}><p>{task.data.assign.assignedTo[0]}</p></div> }\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-info\">\n                                        <div className=\"info-title-row\">\n                                            <h3 className=\"card-title\">{ task.data.title }</h3>\n                                            <div className=\"create-tag\">\n                                                <p className=\"card-create-time\">\n                                                    { task.data.createAt.toDate().toDateString() }</p>\n                                                <p className=\"author-tag\">{ task.data.author } </p>\n                                            </div>\n                                        </div>                                       \n                                        {task.data.content.length !== 0 ?<p className=\"info-content\">{ task.data.content }</p> : <p className=\"info-content u-invisible\"> -- </p>} \n                                        <div className=\"info-end-row\">\n                                            {task.data.verifybyImage ? (\n                                                    <div className=\"expiry-tag\">\n                                                        <div className=\"tag-icon\">\n                                                            <FontAwesomeIcon  icon={ faCamera }/>\n                                                        </div>\n                                                        <div className=\"tag-date\">proof needed</div>\n                                                    </div>\n                                                ): null }\n                                            <div className=\"expiry-tag\">\n                                                <div className=\"tag-icon\">\n                                                    <FontAwesomeIcon  icon={ faStopwatch }/>\n                                                </div>\n                                                <div className=\"tag-date\">{ task.data.expiryDate.toDate().toDateString() }</div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>  \n\n                                </div>\n                            </Link>\n                            )\n                        }) }\n                    </div>\n                ):<EmptyCard />): <Loader />}\n\n                <div className=\"title-row\"><h3 className=\"row-title\">PENDING APPROVAL</h3></div>\n                {this.props.fetchComplete ? ( this.props.pendingTasks[0] ? (\n                        <div className=\"container \">\n                        {  pendingTasks && pendingTasks.map( task => {\n                                return (\n                                <Link to={'/task/process/'+  task.id } key={ task.id } task={task}>\n                                    <div className=\"task-card card-hover\" >\n                                        <div className=\"card-row\">\n                                            <div className=\"col-pic\">\n                                                <div className=\"card-img-box \">\n                                                    <div className=\"card-img-box-inner\">\n                                                    {task.data.assign.assignedToURL !== null ? <img className=\"card-img-holder\" src={ task.data.assign.assignedToURL } alt=\"\"/> :  <div className=\"card-img-holder\" style={{backgroundColor:task.data.assign.assignedToColor}}><p>{task.data.assign.assignedTo[0]}</p></div> }\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-info\">\n                                                <div className=\"info-title-row\">\n                                                    <h3 className=\"card-title\">{ task.data.title }</h3>\n                                                    <div className=\"create-tag\">\n                                                        <p className=\"card-create-time\">\n                                                            { task.data.createAt.toDate().toDateString() }</p>\n                                                        <p className=\"author-tag\">{ task.data.author } </p>\n                                                    </div>\n                                                \n                                                </div>                                       \n                                                {task.data.content.length !== 0 ?<p className=\"info-content\">{ task.data.content }</p> : <p className=\"info-content u-invisible\"> -- </p>} \n                                                <div className=\"info-end-row\">\n                                                {task.data.verifybyImage ? (\n                                                    <div className=\"expiry-tag\">\n                                                        <div className=\"tag-icon\">\n                                                            <FontAwesomeIcon  icon={ faCamera }/>\n                                                        </div>\n                                                        <div className=\"tag-date\">proof needed</div>\n                                                    </div>\n                                                ): null }\n                                                    <div className=\"expiry-tag\">\n                                                        <div className=\"tag-icon\">\n                                                            <FontAwesomeIcon  icon={ faStopwatch }/>\n                                                        </div>\n                                                        <div className=\"tag-date\">{ task.data.expiryDate.toDate().toDateString() }</div>\n                                                    </div>\n                                                </div>\n                                        </div>\n                                        </div>\n                                    </div>\n                                </Link>\n                                )\n                            }) }\n                    </div>):<EmptyCard /> ): <Loader />\n                }\n                <div className=\"title-row\">\n                    <h3 className=\"row-title\">COMPLETE</h3>\n                </div>\n                { this.props.fetchComplete ? ( this.props.completeTasks[0] ? (\n                    <div className=\"container \">\n                        {  completeTasks && completeTasks.map( task => {\n                                return (  \n                                    <div className=\"task-card \" key={ task.id } >\n                                        <div className=\"card-row\">\n                                            <div className=\"col-pic\">\n                                                <div className=\"card-img-box \">\n                                                    <div className=\"card-img-box-inner\">\n                                                    { task.data.assign.assignedToURL !== null ? <img className=\"card-img-holder\" src={task.data.assign.assignedToURL} alt=\"\"/> :  <div className=\"card-img-holder\" style={ {backgroundColor:task.data.assign.assignedToColor} }><p>{task.data.assign.assignedTo[0]}</p></div> }\n                                                    </div>\n                                                </div>\n                                            </div>\n                                                <div className=\"col-info\">\n                                                <div className=\"info-title-row\">\n                                                    <h3 className=\"card-title\">{ task.data.title }</h3>\n                                                    <div className=\"create-tag\">\n                                                        <p className=\"card-create-time\">\n                                                            { task.data.createAt.toDate().toDateString() }</p>\n                                                        <p className=\"author-tag\">{ task.data.author } </p>\n                                                    </div>\n                                                \n                                                </div>                                       \n                                                { task.data.content.length !== 0 ?<p className=\"info-content\">{ task.data.content }</p> : <p className=\"info-content u-invisible\"> -- </p>} \n                                                <div className=\"info-end-row\">\n                                                { task.data.verifybyImage ? (\n                                                    <div className=\"expiry-tag\">\n                                                        <div className=\"tag-icon\">\n                                                            <FontAwesomeIcon  icon={ faCamera }/>\n                                                        </div>\n                                                        <div className=\"tag-date\">proof needed</div>\n                                                    </div>\n                                                ): null }\n                                                    <div className=\"expiry-tag\">\n                                                        <div className=\"tag-icon\">\n                                                            <FontAwesomeIcon  icon={ faStopwatch }/>\n                                                        </div>\n                                                        <div className=\"tag-date\">{ task.data.expiryDate.toDate().toDateString() }</div>\n                                                    </div>\n\n                                                </div>\n                                                </div>\n                                        </div>\n                                    </div>\n                                )\n                            }) }\n                </div>): <EmptyCard /> ): <Loader /> }\n            </div>\n            \n        )\n    }\n}\n\nexport default TaskList;","import React, { Component } from 'react'\nimport * as d3 from 'd3'\nexport class BarChart extends Component {\n\n  componentDidUpdate(){\n    if (this.props.data.length !== 0){\n      this.drawChart();\n    }\n  }\n  drawChart() {      \n    const svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", \"100%\")\n    .attr(\"height\", \"100%\")\n\n    //create margins and dimensions\n    const margin = {top:5, bottom:5, left:3, right:3}\n    const graphWidth = 100 - margin.left - margin.right;\n    const graphHeight = 100 - margin.top - margin.bottom;\n   \n    const graph = svg.append('g')\n                    .attr('width',graphWidth+`%`)\n                    .attr('height',graphHeight+`%`)\n                    .style('transform', `translate(${margin.left}% ,${margin.top}% )`)\n    //join data to rectangle\n    const rects =  graph.selectAll(\"rect\")\n    .data(this.props.data)\n\n    let max = d3.max(this.props.data, d => d.points)\n    if ( max < 5 ){ max = 5 }\n    const x = d3.scaleLinear()\n                .domain([0,max])\n                .range([0,graphWidth]);\n    const y = d3.scaleBand()\n                .domain(this.props.data.map(data => data.firstname))\n                .range([graphHeight,0])\n                .padding(0.5)\n          \n    // append the enterselections to DOM and add attrs to reacts already in dom \n    rects.enter()\n    .append(\"rect\")\n    .attr(\"height\", y.bandwidth()+`%`)\n    .attr(\"width\", (d, i) => x(d.points)+`%`)\n    .attr(\"y\", (d, i) => {\n        return(\n           y(d.firstname)+`%`\n        ) \n    })\n    .attr(\"x\", (d, i) => 0)\n    .attr(\"fill\", (d, i) => {return(d.userColor)})\n    .attr(\"radius\",5)\n    \n    rects.enter()\n    .append(\"text\")\n    .style('font-size', '0.8rem')\n    .style('font-weight', 'bold')\n    .attr(\"fill\", \"#a5a5a5\")\n    .attr(\"height\", y.bandwidth()+`%`)\n    .attr(\"width\", (d, i) => x(d.points)+`%`)\n    .attr(\"y\", (d, i) => {\n        return(\n           y(d.firstname)- 2 +`%`\n        ) \n    })\n    .attr(\"x\", 0)\n    .text(function(d){\n    return `${d.firstname} : ${d.points} points` }\n       )\n    .style(\"backgroud-color\", \"white\");\n             \n  }\n  render() {\n    return (\n      <div className=\"barchart-box\">\n       <div className=\"barchart-inner\">\n       <div id=\"chart\"></div>\n        </div> \n      </div>\n    )\n  }\n}\n\nexport default BarChart\n","import React, { Component } from 'react'\n\nexport class Landing extends Component {\n  render() {\n    return (\n        <div className=\"welcome-wrapper\">\n                <div className=\"container\">\n                    <div className=\"col-2-1\">\n                        <div className=\"logo-block\">\n                            <div className=\"logo-holder expand-effect\"><h2>●´∀`●</h2></div>\n                        </div>\n                    </div>\n                    <div className=\"col-2-1\">\n                        <div className=\"campaign-block\">\n                            <h1 className=\"campaign-block-title \">Start from <span className=\"brand\">HOMIE</span><br/> Arrange houseworks easier.</h1>\n                            <p className=\"\">Manage, collaborate and track the houseworks smart.  </p>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n    )\n  }\n}\n\nexport default Landing\n","export const fetchGroupList = (groupsUid) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        let groupsData=[];\n        //(1) groupsUid fetch the groups doc name groupsUid\n        const firestore = getFirestore();\n        groupsUid.map( (groupUid) => {\n            return (\n                firestore.collection('groups').doc(groupUid).get().then(\n                    documentSnapshot => {\n                        groupsData =[...groupsData,documentSnapshot.data()]\n                    }).then(()=>{\n                        dispatch({ type: 'GROUP_ADD',groupsData})\n                    }) \n            )\n        })\n    }\n}\n\nexport const fetchGroupDetails = (userUid) => {\n    return (dispatch, getState, {getFirestore}) => {\n        const firestore = getFirestore()\n        let groupData;\n        if(userUid){\n\n            firestore.collection('users').doc(userUid).get()\n            .then(doc => { \n                const defaultGroup  = doc.data().defaultGroup || null\n                return defaultGroup\n            })\n            .then( defaultGroup => { \n                if(defaultGroup){\n                    firestore.collection('groups').doc(defaultGroup).get()\n                    .then( doc => {\n                        groupData = doc.data()\n                    }).then(()=>{\n                        dispatch({type: 'GET_GROUP', groupData})\n                    })\n                }else{\n                    dispatch({type: 'GET_GROUP_EMPTY'})\n                }\n            })\n        }else{\n            console.log('EMPTY')\n            dispatch({type: 'GET_GROUP_EMPTY'})\n        }\n\n\n    }\n}\n\nexport const switchGroup = ( newGroupUid ) => {\n    return (dispatch, getState, {getFirestore}) => {\n        const userUid = getState().firebase.auth.uid\n        const firestore = getFirestore();\n        firestore.collection('users').doc(userUid).update({\n            defaultGroup:newGroupUid\n        })\n        .then(\n            dispatch({ type: 'SWITCHGROUP_SUCCESS' })\n        ).catch(function(error) {\n            dispatch({ type: 'SWITCHGROUP_ERROR',error })\n        });\n        \n    }\n}","import React, { Component } from 'react'\nimport { faGripLines, faPlus, faDoorClosed } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavLink } from 'react-router-dom';\n\nimport { connect } from 'react-redux'\n\nimport { switchGroup } from '../store/actions/groupActions'\nimport { fetchGroupDetails } from '../store/actions/groupActions'\nexport class GroupPopup extends Component {\n\n    handleSwitch = (groupUid) => {\n        this.props.switchGroup(groupUid)\n        this.props.togglePopup()\n        this.props.fetchGroupDetails()\n    }\n    componentDidUpdate(){\n        // console.log(this.props)\n    }\n    componentWillMount(){\n        \n    }\n    render() {\n        const { groupsData } = this.props\n        return (\n        <div className=\"popup\" >\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"close-popup-row\" onClick={this.props.togglePopup}><FontAwesomeIcon icon={faGripLines} /></div> \n                </div>\n                <div className=\"option-block\">\n                { groupsData && groupsData.map(group => {\n                        const { groupUid, groupName }= group;\n                        return (\n                            <div onClick={()=>this.handleSwitch(groupUid)} className=\"option-row \" key={groupUid}>\n                                <div className=\"option-icon\">\n                                    <FontAwesomeIcon icon={faDoorClosed} />\n                                </div>\n                                <div className=\"option-text\">{ groupName }</div>\n                            </div>\n                        )\n                    })\n                }\n                </div>\n                <div className=\"u-bottom\">\n                    <div className=\"container\">\n                        <NavLink to=\"/signgroup/signin\" >\n                            <div  className=\"option-row \">\n                                <div className=\"option-icon\">\n                                    <FontAwesomeIcon icon={faPlus} />\n                                </div>\n                                <div className=\"option-text\">Join new group</div>\n                            </div>\n                        </NavLink> \n                    </div>\n\n                </div>\n\n            </div>\n        </div>\n        )\n    }\n}\nconst mapStatetToProps = (state) => {\n    return {\n        groupsUid: state.firebase.profile.groupsUid,\n        defaultGroup: state.firebase.profile.defaultGroup\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        switchGroup: (newGroupUid) => dispatch(switchGroup(newGroupUid)),\n        fetchGroupDetails: (groupUid) => dispatch(fetchGroupDetails(groupUid))\n    }\n}\nexport default connect(mapStatetToProps,mapDispatchToProps)(GroupPopup);\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport 'firebase/storage'\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyAPYaJoMlKsJ6iepxr8uWw4ZE1aPlH6rvI\",\n    authDomain: \"homie-2019.firebaseapp.com\",\n    databaseURL: \"https://homie-2019.firebaseio.com\",\n    projectId: \"homie-2019\",\n    storageBucket: \"homie-2019.appspot.com\"\n}\nfirebase.initializeApp(config);\nconst storage = firebase.storage();\nexport { storage, firebase as default };","import { storage } from '../../config/fbConfig';\nexport const createTask = (task) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorUid = getState().firebase.auth.uid;\n        if (task.title.length !== 0){\n            firestore.collection('tasks').add({\n                ...task,\n                author: profile.firstname,\n                authorUid: authorUid,\n                authorPhotoURL:profile.photoURL || null,\n                authorColor:profile.userColor || null,\n                groupUid: profile.defaultGroup,\n                createAt: new Date(),\n                assign:{assignedTo:null,assignedAt:null},\n                approve:{verifiedBy:null,verifiedAt:null},\n                lastUpdateAt:firestore.FieldValue.serverTimestamp(),\n                status:\"unassigned\"\n            }).then(() => {\n                dispatch({ type: 'CREATE_TASK', task })\n            }).then(() => {\n                window.location.hash = '#/'\n            })\n            .catch((err)=>{\n                dispatch({ type: 'CREATE_TASK_ERROR', err })\n            })\n        } else {\n            dispatch({ type: 'TASK_BLANK'})\n        }\n    }\n};\nexport const confirmTaskAlert =()=>{\n    return(dispatch, getState, { getFirebase, getFirestore })=>{\n        dispatch({ type: 'RESET_TASK_ALERT'})\n    }\n   \n}\nexport const fetchTask = (taskUid) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        let taskData;\n        if(taskUid){\n            firestore.collection('tasks').doc(taskUid).get()\n            .then(doc => {\n                taskData = {id:doc.id,data:doc.data()}\n            })\n            .then(() => {\n                dispatch({type: 'GET_TASK', taskData})\n            }).catch(err=>{\n                console.log(err)\n                dispatch({type: 'EMPTY_TASK'})\n            })\n        } else{\n            dispatch({type: 'EMPTY_TASK'})\n        }\n\n    }\n};\nexport const fetchTaskList = (userUid) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        let tasksData = []\n        let unassignedTasksData = []\n        let assignedTasksData = []\n        let pendingTasksData = []\n        let completeTasksData = []\n        if (userUid) {\n            firestore.collection('users').doc(userUid).get()\n            .then( doc => { \n               const  defaultGroup  = doc.data().defaultGroup || null\n               return defaultGroup\n            }).then( defaultGroup => {\n                if (defaultGroup) {\n                    firestore.collection('tasks').where('groupUid', '==', defaultGroup).orderBy('lastUpdateAt','desc').get()\n                    .then( querySnapshot => { querySnapshot.forEach( doc => {\n                        tasksData = [...tasksData, {id:doc.id,data:doc.data()}]\n                        }) \n                    })\n                    .then(() => {\n                        firestore.collection('tasks').where('groupUid', '==', defaultGroup).where('status','==','unassigned').orderBy('lastUpdateAt','desc').get()\n                        .then( querySnapshot => { querySnapshot.forEach( doc => {\n                            unassignedTasksData = [...unassignedTasksData, {id:doc.id,data:doc.data()}]\n                            })\n                        }).then(() => {\n                            firestore.collection('tasks').where('groupUid', '==', defaultGroup).where('status','==','assigned').orderBy('lastUpdateAt','desc').get()\n                            .then( querySnapshot => { querySnapshot.forEach( doc => {\n                                assignedTasksData = [...assignedTasksData, {id:doc.id,data:doc.data()}]\n                                })\n                            }).then(()=>{\n                                firestore.collection('tasks').where('groupUid', '==', defaultGroup).where('status','==','pending').orderBy('lastUpdateAt','desc').get()\n                                .then( querySnapshot => { querySnapshot.forEach( doc => {\n                                    pendingTasksData = [...pendingTasksData, {id:doc.id,data:doc.data()}]\n                                    })\n                                    \n                                }).then(()=>{\n                                    firestore.collection('tasks').where('groupUid', '==', defaultGroup).where('status','==','complete').orderBy('lastUpdateAt','desc').get()\n                                    .then(querySnapshot => { querySnapshot.forEach( doc => {\n                                        completeTasksData = [...completeTasksData, {id:doc.id,data:doc.data()}]\n                                        })\n                                    }).then(()=>{\n                                        dispatch({type: 'GET_TASKS',\n                                        tasksData,\n                                        unassignedTasksData,\n                                        assignedTasksData,\n                                        pendingTasksData,\n                                        completeTasksData\n                                        })\n                                    })\n                                })\n                            })\n                        })\n                    }) \n                }\n            }).catch(err=>{\n                console.log(err)\n                dispatch({type: 'EMPTY_TASKS'})\n            })\n        } else {\n            dispatch({type: 'EMPTY_TASKS'})\n        }\n\n    }\n};\nexport const acceptTask = (taskUid) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        const userUid = getState().firebase.auth.uid\n        const profile =  getState().firebase.profile\n        const userName = getState().firebase.profile.firstname\n        const groupUid = getState().firebase.profile.defaultGroup;\n        //(1) update the task doc with the status and the assign field\n        //(2) update the user doc accept the task\n        firestore.collection('tasks').doc(taskUid).update({\n            assign:{assignedAt:firestore.FieldValue.serverTimestamp(),\n                    assignedTo:userName,\n                    assignedToUid:userUid,\n                    assignedToURL:profile.photoURL || null,\n                    assignedToColor:profile.userColor || null},\n            lastUpdateAt:firestore.FieldValue.serverTimestamp(),\n            status: 'assigned'\n        }).then(() => {\n            firestore.collection('users').doc(userUid).update({\n                [`beAssignedTo.${groupUid}`]:firestore.FieldValue.arrayUnion(taskUid)\n            }).then(()=>{\n                dispatch({type: 'EMPTY_TASKS'})\n            })\n            .then(() => {\n                window.location.hash = '#/'\n            })\n        }).catch((err)=>{console.log(err)})\n\n    }\n};\nexport const reportTaskWithImage = (taskUid, assign ,file) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        const groupUid = getState().firebase.profile.defaultGroup;\n        const userUid = getState().firebase.auth.uid\n        const { assignedToUid } = assign\n\n        //(1) update the task doc with the status to pending\n        //(2) update the user doc remove taskUid from the beAssignedTo and add it to the pendding\n        //(*) Error Handling check if contain the image or not\n        if( userUid === assignedToUid ) {\n\n            if(file) {\n                const storageRef = storage.ref(`task_images/${taskUid}`)\n                const mainImage = storageRef.child(file.name)\n                mainImage.put(file)\n                .then((UploadTaskSnapshot)=>{\n                    // console.log(UploadTaskSnapshot)\n                    mainImage.getDownloadURL()\n                    .then( ( imageurl )=> {\n                        firestore.collection('tasks').doc(taskUid).update({\n                            lastUpdateAt:firestore.FieldValue.serverTimestamp(),\n                            finishAt:firestore.FieldValue.serverTimestamp(),\n                            status: 'pending',\n                            pendingImgURL: imageurl\n                            \n                        }).then(() => {\n                            firestore.collection('users').doc(userUid).update({\n                                [`beAssignedTo.${groupUid}`]:firestore.FieldValue.arrayRemove(taskUid),\n                                [`pending.${groupUid}`]:firestore.FieldValue.arrayUnion(taskUid)\n                            }).then(()=>{\n                                dispatch({type: 'EMPTY_TASKS'})\n                            }).then(() => {\n                                window.location.hash = '#/'\n                            }).catch(err=>{\n                                console.log(err)\n                            })\n                        }).catch(err=>{\n                            console.log(err)\n                        })\n                    }).catch(err=>{\n                        console.log(err)\n                        alert('upload failed, please try again')\n                    })\n                }).catch(err=>{\n                    console.log(err)\n                    alert('upload failed, please try again')\n                })\n\n            } else {\n                console.log('沒有上傳圖片')\n                dispatch({type: 'TASK_BLANK_NOPIC'})\n            }\n        } else {\n            dispatch({type: 'TASK_NOT_ASSIGNED'})\n            return\n        }\n    }\n}\nexport const reportTaskWOImage = (taskUid, assign) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        const groupUid = getState().firebase.profile.defaultGroup;\n        const userUid = getState().firebase.auth.uid\n        const { assignedToUid } = assign\n\n        //(1) update the task doc with the status to pending\n        //(2) update the user doc remove taskUid from the beAssignedTo and add it to the pendding\n        if( userUid === assignedToUid ) {\n            firestore.collection('tasks').doc(taskUid).update({\n                lastUpdateAt:firestore.FieldValue.serverTimestamp(),\n                finishAt:firestore.FieldValue.serverTimestamp(),\n                status: 'pending'  \n            }).then(() => {\n                firestore.collection('users').doc(userUid).update({\n                    [`beAssignedTo.${groupUid}`]:firestore.FieldValue.arrayRemove(taskUid),\n                    [`pending.${groupUid}`]:firestore.FieldValue.arrayUnion(taskUid)\n                }).then(()=>{\n                    dispatch({type: 'EMPTY_TASKS'})\n                }).then(() => {\n                    window.location.hash = '#/'\n                }).catch((err)=>{\n                    console.log(err)\n                })\n            }).catch((err)=>{\n                console.log(err)\n            })\n        } else {\n            dispatch({type: 'TASK_NOT_ASSIGNED'})\n            return\n        }\n    }\n}\nexport const approveTask = (taskUid, assign) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        const groupUid = getState().firebase.profile.defaultGroup\n        const userName = getState().firebase.profile.firstname\n        const profile = getState().firebase.profile\n        const userUid = getState().firebase.auth.uid\n        const { assignedToUid } = assign\n        let newPoints;\n        //(1) update the task doc with the status to complete\n        //(2) update the user doc remove taskUid from the pending and add it to the finish\n        //(*) Error Handling check if contain the image or not\n        if( userUid !== assignedToUid ) {\n            firestore.collection('groups').doc(groupUid).get().then(doc =>{\n                const { pointsRecord } = doc.data()\n                newPoints = pointsRecord[assignedToUid].points + 1\n                return newPoints\n            }).then(()=> {\n                firestore.collection('groups').doc(groupUid).update({\n                    [`pointsRecord.${assignedToUid}.points`]:newPoints\n                }).then(()=>{\n                    firestore.collection('tasks').doc(taskUid).update({\n                        lastUpdateAt:firestore.FieldValue.serverTimestamp(),\n                        status: 'complete',\n                        approve:{approvedAt:firestore.FieldValue.serverTimestamp(),\n                                 approvedBy:userName,\n                                 approvedByURL:profile.photoURL || null,\n                                 approvedByColor:profile.userColor || null}\n                    }).then(()=>{\n                        firestore.collection('users').doc(assignedToUid).update({\n                            [`pending.${groupUid}`]:firestore.FieldValue.arrayRemove(taskUid),\n                            [`finish.${groupUid}`]:firestore.FieldValue.arrayUnion(taskUid)\n                        }).then(()=>{\n                            dispatch({type: 'EMPTY_TASKS'})\n                        }).then(() => {\n                            window.location.hash = '#/'\n                        }).catch(err=>console.log(err))\n                    }).catch(err=>console.log(err))\n                }).catch(err=>console.log(err))\n            }).catch(err=>console.log(err))\n            \n        } else {\n            alert('It is an invalid action')\n            return\n        }\n    }\n}","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRunning } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux'\nimport { confirmTaskAlert } from '../store/actions/taskActions'\nimport { leaveGroup } from '../store/actions/authActions'\nexport class InfoWindow extends Component {\n  handleConfirm = () =>{\n     this.props.leaveGroup()\n  }\n  render() {\n    return (\n          <div className=\"popup-layer\">\n            <div className=\"container\">\n                <div className=\"information-window\">\n                    <div className=\"container\">           \n                    <h1 className=\"alert-icon browncolor-icon\"><FontAwesomeIcon icon={ faRunning }/></h1>\n                    <h2>Warning</h2>\n                    <h4>Are you sure to leave this group? All your records in this group will be deleted.</h4>\n                    <hr/>\n                    </div>\n                    <div className=\"feature-row\">\n                    <button className=\"small-square-button cancel-button\"\n                            onClick={ this.props.toggleLeaveGroup }>Dismiss</button>\n                    <button className=\"small-square-button\"\n                            onClick={ this.handleConfirm }>Confirm</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    confirmTaskAlert: ()=>dispatch(confirmTaskAlert()),\n    leaveGroup: () => dispatch(leaveGroup())\n  }\n}\nexport default connect(null, mapDispatchToProps)(InfoWindow);\n","import React, { Component } from 'react';\nimport TaskList from '../tasks/TaskList';\nimport BarChart from '../chart/BarChart'\nimport Landing from '../dashboard/Landing'\nimport GroupPopup from '../dashboard/GroupPopup' \nimport InfoWindow from '../alert/InfoWindow'\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom' \n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDoorOpen, faAngleDown, faUser, faCog, faUnlink, faUserAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { fetchGroupList, fetchGroupDetails } from '../store/actions/groupActions'\nimport { fetchTaskList } from '../store/actions/taskActions'\n\nclass Dashboard extends Component {\n\n    state = {\n        groupPopup: false,\n        leavePopup:false,\n        memberBar: false,\n        settingBar:false\n    }\n    togglePopup = () => {\n        if( !this.state.groupPopup ){\n            if (this.props.profile.defaultGroup) {\n                this.props.fetchGroupList(this.props.groupsUid)\n                this.props.fetchTaskList()\n                this.props.fetchGroupDetails()\n            }\n           \n        } \n        if (this.state.groupPopup){\n            if (this.props.profile.defaultGroup) {\n            this.props.fetchTaskList(this.props.auth.uid)\n            this.props.fetchGroupDetails(this.props.auth.uid)\n            }\n        }\n        this.setState( prevState => ({\n            groupPopup: !prevState.groupPopup\n        }));\n    }\n    toggleSettingBar = () => {\n        this.setState( prevState => ({\n            settingBar: !prevState.settingBar\n        }))\n        if(this.state.memberBar){\n            this.setState( prevState => ({\n                memberBar: !prevState.memberBar\n            }))\n        }\n    }\n    toggleMemberbar = () => {\n        this.setState( prevState => ({\n            memberBar: !prevState.memberBar\n        }))\n        if(this.state.settingBar){\n            this.setState( prevState => ({\n                settingBar: !prevState.settingBar\n            }))\n        }\n\n    }\n    toggleLeaveGruop = (e) => {\n        this.setState(prevState => ({\n            leavePopup: !prevState.leavePopup\n        }))\n    }\n    componentDidMount(){\n        if(this.props.auth.uid){\n            this.props.fetchTaskList(this.props.auth.uid)\n            this.props.fetchGroupDetails(this.props.auth.uid)\n        }\n    }  \n    componentWillUnmount(){\n        console.log('unmount dashboard EMPTY')\n        this.props.fetchGroupDetails()\n        this.props.fetchTaskList()\n    }\n    render(){\n        const { membersInfo, completeTasksData, pendingTasksData,assignedTasksData, unassignedTasksData, tasksData, auth } = this.props\n        let pointsData =[]\n        const {membersPointsRecord} = this.props\n        this.props.membersPointsRecord && Object.keys(membersPointsRecord).forEach(e => {\n            pointsData.push(membersPointsRecord[e])\n        })\n        if (auth.uid){\n            return (\n                <div className=\"dashboard-wrapper\">\n                { this.state.groupPopup ? <GroupPopup togglePopup={ this.togglePopup.bind(this) } groupsData={ this.props.groupsData }/> : null }\n                { this.state.leavePopup ? <InfoWindow toggleLeaveGroup={ this.toggleLeaveGruop.bind(this) }/> : null}\n                    <div className=\"container\">\n                        <div className=\"selected-wrapper\">\n                            <div className=\"selected-group\" onClick={this.togglePopup}>\n                                { this.props.defaultGroupData ? this.props.defaultGroupData.groupName : null } <FontAwesomeIcon icon={faAngleDown} />\n                            </div>\n                        </div>\n                        <div className=\"indicator-wrapper\">\n                            <div className=\"icon-bar\">\n                                 <div onClick={ this.toggleSettingBar }\n                                     className=\"indicator-button \">\n                                    <FontAwesomeIcon icon={faCog} /> \n                                </div>\n                                <div onClick={ this.toggleMemberbar }\n                                     className=\"indicator-button \">\n                                    <FontAwesomeIcon icon={faUser} /> {this.props.defaultGroupData ? (this.props.defaultGroupData.members.length) : 1}\n                                </div>\n\n                            </div>\n                            { this.state.memberBar ? (\n                                <div className=\"member-bar\">\n                                    { membersInfo ? (\n                                        Object.keys(membersInfo).map(e => {\n                                                return ( \n                                                    <div className=\"member-button\" key={e} >\n                                                        <div className=\"member-cirle\">\n                                                            <div className=\"circle-wrapper\">\n                                                                { membersInfo[e].photoURL==='null' ? <div className=\"member-img-holder\"> <FontAwesomeIcon icon={ faUserAlt } /> </div> :<img src={ membersInfo[e].photoURL } alt=\"\"/> }\n                                                            </div>\n                                                        </div>\n                                                        <span className=\"circle-name\">{membersInfo[e].firstname}</span>\n                                                    </div>\n                                                )\n                                            }))  \n                                     : null\n                                    }\n                                </div>\n                            ): null }\n                            { this.state.settingBar ? (\n                                <div className=\"setting-bar\">\n                                    <Link to=\"/signgroup/signin\">\n                                    <div className=\"setting-button\">\n                                        <FontAwesomeIcon icon={faDoorOpen}/>  Join new group\n                                    </div>\n                                    </Link>\n                                    <div onClick={this.toggleLeaveGruop}\n                                         className=\"setting-button\">\n                                        <FontAwesomeIcon icon={faUnlink }/> Leave this group\n                                    </div>\n                                </div>\n                            ) : null }\n                        </div>\n                    </div>\n                    <div className=\"container\">  \n                    {this.state.groupPopup || this.state.leavePopup ? null :<BarChart data={this.props.pointsData} width={this.state.width} height={this.state.height} />}\n                    </div>\n                    \n                    <div className=\"container\">\n                    {this.state.groupPopup || this.state.leavePopup ? null :  <TaskList fetchComplete = {this.props.fetchComplete}  task={ tasksData } unassignedTasks={ unassignedTasksData } assignedTasks={ assignedTasksData } pendingTasks={ pendingTasksData } completeTasks={ completeTasksData }/> }\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                 <div className=\"landing-wrapper\">\n                    <Landing />\n                </div>\n            )\n        }\n\n    }\n}\nconst mapStateToProps = (state) => {  \n    let pointsData =[]\n    const membersPointsData = state.group.defaultGroupData ? state.group.defaultGroupData.pointsRecord : null\n    membersPointsData && Object.keys(membersPointsData).forEach(e => {\n        pointsData.push(membersPointsData[e])\n    })\n\n    const defaultGroupData = state.group.defaultGroupData ? state.group.defaultGroupData :null\n    const auth = state.firebase.auth ? state.firebase.auth : null\n    const membersInfo = state.group.defaultGroupData ? state.group.defaultGroupData.membersInfo : null\n    const membersPointsRecord = state.group.defaultGroupData ? state.group.defaultGroupData.pointsRecord : null\n    return {\n        tasks: state.firestore.ordered.tasks,\n        auth: auth,\n        groupsUid: state.firebase.profile.groupsUid,\n        groupsData: state.group.groups,\n        profile:state.firebase.profile,\n        defaultGroupData:defaultGroupData,\n        membersInfo:membersInfo,\n        membersPointsRecord:membersPointsRecord,\n        tasksData:state.task.tasksData,\n        unassignedTasksData: state.task.unassignedTasksData,\n        assignedTasksData: state.task.assignedTasksData,\n        pendingTasksData: state.task.pendingTasksData,\n        completeTasksData: state.task.completeTasksData,\n        pointsData:pointsData,\n        fetchComplete:state.task.complete\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchGroupList: (groupsUid) => dispatch(fetchGroupList(groupsUid)),\n        fetchTaskList: (userUid) => dispatch(fetchTaskList(userUid)),\n        fetchGroupDetails: (groupUid) => dispatch(fetchGroupDetails(groupUid))\n    }\n\n}\nexport default  connect( mapStateToProps, mapDispatchToProps)(Dashboard);\n","import React, { Component } from 'react'\n\n\nimport { connect } from 'react-redux'\nimport { createTask, confirmTaskAlert } from '../store/actions/taskActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {  MuiPickersUtilsProvider, DateTimePicker } from \"material-ui-pickers\";\nexport class CreatTask extends Component {\n    state = {\n        title: '',\n        content: '',\n        category:'trash',\n        expiryDate: new Date(new Date().getTime() + 7 * 24 * 60 * 60 * 1000),\n        verifybyImage:false\n    }\n    handleBack = (e) =>{\n      e.preventDefault();\n      window.location.href=\"#/\"\n    }\n    handleChange = (e) =>{\n        this.setState({\n           [e.target.id]: e.target.value\n        })\n    }\n    toggleChange = () => {\n      this.setState({\n        verifybyImage: !this.state.verifybyImage,\n      });\n    }\n    handleDateChange = date => {\n      this.setState({ expiryDate: date });\n    };\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.createTask(this.state);\n    }\n    handleAlert = (e) => {\n      this.props.confirmTaskAlert()\n    }\n  render() {\n    const { expiryDate } = this.state;\n    return (\n      <div className=\"\">\n        {this.props.taskErr ? (\n          <div className=\"popup-layer\">\n          <div className=\"container\">\n            <div className=\"information-window\">\n                <div className=\"container\">           \n                <h1 className=\"alert-icon\"><FontAwesomeIcon icon={ faExclamationTriangle }/></h1>\n                <h2>Error</h2>\n                <h4>The field of title cannot be empty</h4>\n                <hr/>\n                <button className=\"medium-button\"\n                          onClick={ this.handleAlert }>OK</button>\n                </div>\n            </div>\n          </div>\n        </div>\n        ): null }\n\n        <div className=\"container\">\n        <h2 className=\"sub-instruciton-title\">Post a task</h2>\n          <form className=\"signinform\"\n              onSubmit={this.handleSubmit}>\n              <label className=\"label-font\" htmlFor=\"title\">Title</label>\n              <div className=\"task-input-row\">\n                  <input type=\"test\"\n                          id=\"title\"\n                          onChange={this.handleChange}/>\n              </div>\n              <label className=\"label-font\" htmlFor=\"expiryDate\">Expiry Date</label>\n              <div className=\"task-input-row\">\n                <MuiPickersUtilsProvider id=\"expiryDate\"  utils={DateFnsUtils}>\n                    <div className=\"pickers\">\n                      <DateTimePicker id=\"inputdate\" className=\"input-date browser-default\" value={expiryDate} onChange={this.handleDateChange} />\n                    </div>\n                  </MuiPickersUtilsProvider>\n              </div>\n              <label className=\"label-font\" htmlFor=\"expiryDate\">Category</label>\n              <div className=\"task-input-row\">\n                  <select value={this.state.value} name=\"\" id=\"category\" onChange={this.handleChange}>\n                    <option value=\"trash\">Trash</option>\n                    <option value=\"clean\">Clean</option>\n                    <option value=\"bathroom\">Bathroom</option>\n                    <option value=\"kitchen\">Kitchen</option>\n                    <option value=\"floor\">Floor</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n              </div>\n              <label className=\"label-font\" htmlFor=\"verifybyImage\">Verification condition</label>\n              <div className=\"checkbox-wrapper\">\n              <div className=\"task-checkboxinput-row\">\n                  <input type=\"checkbox\"\n                          id=\"verifybyImage\"\n                          checked= {this.state.verifybyImage}\n                          onChange={this.toggleChange}/>\n                  <span className=\"checkmark \"></span>\n              </div>\n              <div className=\"checkbox-text\">Photo proof</div>\n              </div>\n\n              <label className=\"label-font\" htmlFor=\"content\">Description</label>\n              <div className=\"textarea-row\">\n                  <textarea type=\"text\"\n                          id=\"content\"\n                          onChange={this.handleChange}/>\n              </div>\n              <div className=\"feature-row\">\n                  <button onClick={this.handleBack} \n                          className=\"medium-square-button cancel-button\">Back</button>\n                  <button className=\"medium-square-button\">Save</button>\n              </div>\n          </form>\n\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    taskErr: state.task.err\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    createTask: (task) => dispatch(createTask(task)),\n    confirmTaskAlert: ()=>dispatch(confirmTaskAlert())\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(CreatTask);\n","import React, { Component } from 'react'\n\nexport class PageLoader extends Component {\n  render() {\n    return (\n            <div className=\"container\">\n                 <div className=\"bouncing-loader\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n            </div>\n    )\n  }\n}\n\nexport default PageLoader\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTask, acceptTask } from '../store/actions/taskActions'\nimport PageLoader from '../layout/PageLoader'\nexport class TaskDetails extends Component {\n    handleBack = (e) =>{\n        e.preventDefault();\n        window.location.href=\"#/\"\n      }\n    handleAccept = (e)=> {\n        this.props.acceptTask(this.props.match.params.id)\n    }\n    componentDidMount(){\n        this.props.fetchTask(this.props.match.params.id)\n    }\n    componentWillUnmount(){\n        this.props.fetchTask()\n    }\n  render() {\n    const id = this.props.match.params.id\n    if (this.props.taskdetails.data){\n        const { expiryDate, author, content, title } = this.props.taskdetails.data\n        return(\n            <div className=\"taskdetails-wrapper\" key={id} >\n                <div className=\"container \">\n                    <h2 className=\"sub-instruciton-title\">Accept the Task</h2>\n                    <div className=\"task-card\">\n                            <h2 className=\"title\">{title}</h2>\n                            <p className=\"expirydate\">Expiry Date | { expiryDate.toDate().toTimeString().replace('GMT+0800 (Taipei Standard Time)','') + \" \"+ expiryDate.toDate().toDateString() }</p>\n                            <p className=\"expirydate\">Posted by | {author}</p>\n                            <p>{content}</p>\n                    </div>\n                </div>\n                <div className=\"feature-row\">\n                <button onClick={this.handleBack} \n                        className=\"medium-square-button cancel-button\">Back</button>\n                <button onClick={this.handleAccept}\n                        className=\"medium-square-button\">Accept</button>\n                </div>\n            </div>\n           \n        )\n    } else {\n        return <PageLoader />\n    }\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n    const taskdetails = state.task.taskData ? state.task.taskData : null\n    return {\n        taskdetails: taskdetails\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        fetchTask: (taskUid) => dispatch(fetchTask(taskUid)),\n        acceptTask:(taskUid) => dispatch(acceptTask(taskUid))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskDetails);","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux'\nimport { confirmTaskAlert } from '../store/actions/taskActions'\nexport class AlertWindow extends Component {\n  handleAlert = (e) => {\n    this.props.confirmTaskAlert()\n  }\n  render() {\n    return (\n          <div className=\"popup-layer\">\n            <div className=\"container\">\n                <div className=\"information-window\">\n                    <div className=\"container\">           \n                    <h1 className=\"alert-icon\"><FontAwesomeIcon icon={ faExclamationTriangle }/></h1>\n                    <h2>Error</h2>\n                    <h4>{this.props.errorMessage}</h4>\n                    <hr/>\n                    <button className=\"medium-button\"\n                            onClick={ this.handleAlert }>OK</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return{\n    errorMessage: state.task.errMessage\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    confirmTaskAlert: ()=>dispatch(confirmTaskAlert())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertWindow);\n","import React, { Component } from 'react';\nimport AlertWindow from '../alert/AlertWindow'\nimport { connect } from 'react-redux';\nimport { fetchTask, reportTaskWithImage, reportTaskWOImage } from '../store/actions/taskActions'\nimport PageLoader from '../layout/PageLoader'\nexport class TaskMemo extends Component {\n    constructor(props) {\n        super(props)\n        this.fileInput = React.createRef()\n    }\n    state = {\n        files:[],\n        imagePreviewUrl:[],\n        imagefile:null\n    }\n    handleBack = (e) =>{\n        e.preventDefault();\n        window.location.href=\"#/\"\n      }\n    handleChange = (e) =>{\n        this.setState({\n            files:  e.target.files,\n            imagePreviewUrl: URL.createObjectURL(e.target.files[0]),\n            file:e.target.files[0]\n        })\n    }\n    handleReportWithImage = (e) => {\n        e.preventDefault()\n        const taskUid = this.props.match.params.id\n        const { assign } = this.props.taskdetails.data\n        this.props.reportTaskWithImage(taskUid,assign,this.state.file)\n    }\n    handleReport = (e) =>{\n        e.preventDefault()\n        const taskUid = this.props.match.params.id\n        const { assign } = this.props.taskdetails.data\n        this.props.reportTaskWOImage(taskUid,assign)\n    }\n    componentDidMount(){\n        this.props.fetchTask(this.props.match.params.id)\n    }\n    componentWillUnmount(){\n        this.props.fetchTask()\n    }\n  render() {\n    const id = this.props.match.params.id\n    if (this.props.taskdetails.data){\n        const { verifybyImage,expiryDate, assign,author, content, title } = this.props.taskdetails.data\n        return(\n            <div>\n            {this.props.taskErr ? <AlertWindow error={ this.props.match.params.id }/> : null }\n                <div className=\"taskdetails-wrapper\" key={id} >\n                    <div className=\"container \">\n                        <h2 className=\"sub-instruciton-title\">Report the Task</h2>\n                        <div className=\"task-card\">\n                                <h2 className=\"title\">{title}</h2>\n                                <p className=\"expirydate\">Expiry Date | { expiryDate.toDate().toTimeString().replace('GMT+0800 (Taipei Standard Time)','') + \" \"+ expiryDate.toDate().toDateString() }</p>\n                                <p className=\"expirydate\">Posted by | {author}</p>\n                                <p className=\"expirydate\">Assigned to | {assign.assignedTo}</p>\n                                <p className=\"expirydate\">Description</p>\n                                <p>{content}</p>\n                                {this.state.imagePreviewUrl[0] && (\n                                    <div>\n                                    <p className=\"expirydate\">Image attachment</p>\n                                    <div className=\"image-row\">\n                                        <div className=\"image-box\">\n                                            <div className=\"image-box-inner\">\n                                            <img className=\"\" src={this.state.imagePreviewUrl} alt=\"\"/> \n                                            </div>\n                                        </div>\n                                    </div>\n                                    </div>\n                                )}\n    \n                        </div>\n                        {verifybyImage ? (\n                            <div className=\"uploadwrapper\">\n                            <form action=\"\"\n                                onSubmit={this.handleReportWithImage}>\n                                <div className=\"task-input-row\">\n                                    <label htmlFor=\"imagefile\">attachment</label>\n                                    <input id=\"imagefile\"\n                                        type=\"file\"\n                                        onChange={this.handleChange}\n                                        ref={this.fileInput}/>\n                                </div>\n                                <div className=\"feature-row\">\n                                <button onClick={this.handleBack} \n                                        className=\"medium-square-button cancel-button\">Back</button>\n                                <button  className=\"medium-square-button\">Finish</button>\n                                </div>\n                            </form>\n                        </div>\n                        ): (\n                        <div className=\"uploadwrapper\">\n                            <form action=\"\"\n                                onSubmit={this.handleReport}>\n                                <div className=\"feature-row\">\n                                <button onClick={this.handleBack} \n                                        className=\"medium-square-button cancel-button\">Back</button>\n                                <button  className=\"medium-square-button\">Finish</button>\n                                </div>\n                            </form>\n                        </div>)}\n\n                    </div>\n                    \n                </div>\n            </div>\n           \n        )\n    } else {\n        return <PageLoader />\n    }\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n    const taskdetails = state.task.taskData ? state.task.taskData : null\n    return {\n        taskdetails: taskdetails,\n        taskErr: state.task.err\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchTask: (taskUid) => dispatch(fetchTask(taskUid)),\n        reportTaskWithImage: (taskUid,assign,imagefile)=>dispatch(reportTaskWithImage(taskUid,assign,imagefile)),\n        reportTaskWOImage: (taskUid,assign)=>dispatch(reportTaskWOImage(taskUid,assign))\n    }\n}\n\nexport default  connect(mapStateToProps,mapDispatchToProps)(TaskMemo);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTask, approveTask } from '../store/actions/taskActions'\nimport PageLoader from '../layout/PageLoader'\nexport class TaskProcess extends Component {\n    handleBack = (e) =>{\n        e.preventDefault();\n        window.location.href=\"#/\"\n      }\n    handleApprove = (e) => {\n        const { assign } = this.props.taskdetails.data\n        this.props.approveTask(this.props.match.params.id,assign)\n    }\n    componentDidMount(){\n        this.props.fetchTask(this.props.match.params.id)\n    }\n    componentWillUnmount(){\n        this.props.fetchTask()\n    }\n  render() {\n    const id = this.props.match.params.id\n    if (this.props.taskdetails.data){\n        const { content, expiryDate,pendingImgURL, assign, author, title } = this.props.taskdetails.data\n        return(\n            <div className=\"taskdetails-wrapper\" key={id} >\n                <div className=\"container \">\n                    <h2 className=\"sub-instruciton-title\">Approve the Task</h2>\n                    <div className=\"task-card\">\n                            <h2 className=\"title\">{title}</h2>\n                            <p className=\"expirydate\">Expiry Date | { expiryDate.toDate().toTimeString().replace('GMT+0800 (Taipei Standard Time)','') + \" \"+ expiryDate.toDate().toDateString() }</p>\n                            <p className=\"expirydate\">Assigned to | {assign.assignedTo}</p>\n                            <p className=\"expirydate\">Posted by | {author}</p>\n                            <p className=\"expirydate\">Description</p>\n                                <p>{content}</p>\n                            {pendingImgURL ? (\n                                <div>\n                                <p className=\"expirydate\">Image attachment</p>\n                                <div className=\"image-row\">\n                                    <div className=\"image-box\">\n                                        <div className=\"image-box-inner\">\n                                        <img className=\"\" src={pendingImgURL} alt=\"\"/> \n                                        </div>\n                                    </div>\n                                 </div>\n                                </div>\n                            ):null\n                            }\n                            \n                    </div>\n                </div>\n                <div className=\"feature-row\">\n                <button onClick={this.handleBack} \n                        className=\"medium-square-button cancel-button\">Back</button>\n                <button onClick={this.handleApprove}\n                        className=\"medium-square-button\">Approve</button>\n                </div>\n                \n            </div>\n           \n        )\n    } else {\n        return <PageLoader />\n    }\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n    const taskdetails = state.task.taskData ? state.task.taskData : null\n    return {\n        taskdetails: taskdetails\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        fetchTask: (taskUid) => dispatch(fetchTask(taskUid)),\n        approveTask:(taskUid,assign)=>dispatch(approveTask(taskUid,assign))\n    }\n}\n\nexport default  connect(mapStateToProps,mapDispatchToProps)(TaskProcess);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signUpGroup } from '../store/actions/authActions'\n\nexport class SignUpGroup extends Component {\n    state = {\n      groupName: '',\n      groupId: '',\n      groupPassword: ''\n    }\n    handleChange = (e) =>{\n        this.setState({\n           [e.target.id]: e.target.value\n        })\n      //  console.log(this.state)\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.signUpGroup(this.state)\n    }\n    \n  render() {\n    return (\n        <div className=\"formoutter\">\n          <div className=\"formwrapper-bottom\">\n            <form className=\"signinform\"\n                onSubmit={this.handleSubmit}>\n                <label className=\"label-font\" htmlFor=\"groupName\">Group Name</label>\n                <div className=\"input-row\">\n                    <input type=\"text\"\n                            id=\"groupName\"\n                            onChange={this.handleChange}\n                            />\n                </div>\n                <label className=\"label-font\" htmlFor=\"groupId\">Group ID</label>\n                <div className=\"input-row\">\n                    <input type=\"text\"\n                            id=\"groupId\"\n                            onChange={this.handleChange}\n                            />\n                </div>\n                <label className=\"label-font\" htmlFor=\"groupPassword\">Group Password</label>\n                <div className=\"input-row\">\n                    <input type=\"password\"\n                            id=\"groupPassword\"\n                            onChange={this.handleChange}\n                            />\n                </div>\n                <div className=\"text-row error-holder\">\n                    { this.props.groupError ? <p className=\"alert-font\">{ this.props.groupError }</p>  : null} \n                </div>\n                <div className=\"feature-row\">\n                    <button className=\"medium-button\">Create Group</button>\n                </div>\n            </form>\n          </div>\n        </div>\n\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n    // console.log(state)\n    return {\n      auth: state.firebase.auth, //for checking the login or not\n      groupError: state.auth.groupError\n    }\n  }\nconst mapDispatchToProps = (dispatch) => {\n    return{\n      signUpGroup: (newGroup) => dispatch(signUpGroup(newGroup))\n    }\n  }\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUpGroup);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n// import { createHashHistory } from 'history'\nimport { signInGroup } from '../store/actions/authActions'\n\nclass SignInGroup extends Component {\n    state = {\n      groupId: '',\n      groupPassword: ''\n    }\n    handleChange = (e) =>{\n        this.setState({\n           [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.signInGroup(this.state)\n    }\n  render() {\n    return (\n        <div className=\"formoutter\">\n          <div className=\"formwrapper-bottom\">\n            <form className=\"signinform\"\n                onSubmit={this.handleSubmit}>\n                <label className=\"label-font\" htmlFor=\"groupId\">Group ID</label>\n                <div className=\"input-row\">\n                    \n                    <input type=\"text\"\n                            id=\"groupId\"\n                            onChange={this.handleChange}/>\n                </div>\n                <label className=\"label-font\" htmlFor=\"groupPassword\">Password</label>\n                <div className=\"input-row\">\n                    <input type=\"password\"\n                            id=\"groupPassword\"\n                            onChange={this.handleChange}/>\n                </div>\n                <div className=\"text-row error-holder\">\n                    { this.props.groupError ? <p className=\"alert-font\">{ this.props.groupError }</p>  : null} \n                </div>\n                <div className=\"feature-row\">\n                    <button className=\"medium-button\">Join Group</button>\n                </div>\n            </form>\n          </div>\n        </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n    return {\n      groupError: state.auth.groupError\n    }\n}\nconst mapDispatchToProps = (dispatch) =>{\n  return {\n    signInGroup: (creds) => dispatch(signInGroup(creds))\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignInGroup);\n","import React from 'react'\nimport { Route, NavLink } from 'react-router-dom'\nimport SignUpGroup from './SignUpGroup'\nimport SignInGroup from './SignInGroup'\nconst SignGroup = () =>{\n    return(\n        <div className=\"container\">\n        <h2 className=\"sub-instruciton-title\">Join the Homie Group</h2>\n            <div className=\"formoutter\">\n                <div className=\"formwrapper-top \">\n                    <div className=\"link-wrapper\">\n                        <NavLink className=\"signgroup-tab\" activeClassName=\"signgroup-tab-active\" to=\"/signgroup/signup\" >Create Group</NavLink>\n                        <NavLink className=\"signgroup-tab\" activeClassName=\"signgroup-tab-active\" to=\"/signgroup/signin\" >Join Group</NavLink>\n                    </div>\n                    {/* <form className=\"signinform\">\n                    <div className=\"feature-row\">\n                    <button className=\"medium-button\">Create Group</button>\n                    </div>\n                    </form> */}\n                </div>\n            </div>\n\n            <Route path=\"/signgroup/signup\" component={SignUpGroup} />\n            <Route path=\"/signgroup/signin\" component={SignInGroup} />\n        </div>\n       \n    )\n}\nexport default SignGroup","import React from 'react'\nimport { HashRouter , Switch, Route} from 'react-router-dom'\nimport './index.css'\n\n// Components\nimport Navbar from './components/layout/Navbar'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport Dashboard from './components/dashboard/Dashboard'\nimport CreateTask from'./components/tasks/CreateTask'\nimport TaskDetails from './components/tasks/TaskDetails'\nimport TaskMemo from './components/tasks/TaskMemo'\nimport TaskProcess from './components/tasks/TaskProcess'\nimport SignGroup from './components/auth/SignGroup'\n\n\n\nclass App extends React.Component{\n\n    render() {\n        \n        return(\n        <HashRouter  >\n            <div className=\"app\">\n                <Navbar />\n                <Switch>\n                    <Route exact path=\"/\" component={Dashboard} />\n                    <Route path=\"/signin\" component={SignIn} />\n                    <Route exact path=\"/task/:id\" component={TaskDetails} />\n                    <Route exact path=\"/task/memo/:id\" component={TaskMemo} />\n                    <Route exact path=\"/task/process/:id\" component={TaskProcess} />\n                    <Route path=\"/signup\" component={ ()=>  <SignUp/> }/>\n                    <Route path=\"/post\" component={CreateTask} />\n                    <Route path=\"/signgroup\" component={SignGroup} />\n                </Switch>\n            </div>\n        </HashRouter> \n        );\n    }\n}\n\n export default App;\n","const initState = {\n    authError: null,\n    groupError: null\n}\nconst authReducer = (state = initState, action ) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return  {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success and login');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        case 'SIGNINGROUP_SUCCESS':\n        console.log('signin group success')\n        return {\n            ...state,\n            groupError: null\n            }\n        case 'SIGNINGROUP_NOTEXIST':\n            console.log('This group id was not exist')\n            return {\n                ...state,\n                groupError: \"This group id was not exist\"\n                    }\n        case 'SIGNINGROUP_EMPTY':\n            console.log('All fields are required')\n            return {\n                ...state,\n                groupError: \"All fields are required\"\n                    }\n        case 'SIGNINGROUP_ERROR':\n            console.log('The password is incorrect')\n            return {\n                ...state,\n                groupError: \"That was an invalid password\"\n                    }\n        case 'SIGNINGROUP_ERROR_EXIST':\n        console.log('This member already exist')\n        return {\n            ...state,\n            groupError: \"You have been already joined this group\"\n                }\n        case 'SIGNUPGROUP_SUCCESS':\n            console.log('signup group success')\n            return {\n                ...state,\n                groupError: null\n            }\n        case 'SIGNUPGROUP_ERROR':\n        console.log('signup group error')\n        return {\n            ...state,\n            groupError: \"This group id is already in use by another account\"\n            }\n        default:\n            return state\n    }\n    \n}\nexport default authReducer","const initState = {\n    tasks:[],\n    tasksData:[],\n    taskData:[],\n    unassignedTasksData:[],\n    assignedTasksData:[],\n    pendingTasksData:[],\n    completeTasksData:[],\n    complete:false,\n    err:false,\n    errMessage:null,\n}\n\nconst taskReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_TASK':\n        console.log('create task', action.task)\n         return state\n        case 'TASK_BLANK':\n            return{\n                ...state,\n                err:true\n            }\n        case 'TASK_BLANK_NOPIC':\n        return{\n            ...state,\n            err:true,\n            errMessage:\"This task cannot report without a photo.\"\n        }\n        case 'TASK_NOT_ASSIGNED':\n        return{\n            ...state,\n            err:true,\n            errMessage:\"You are not assigned to this task\"\n        }\n        case 'RESET_TASK_ALERT':\n        return{\n            ...state,\n            err:false,\n            errMessage:null\n        }\n        case 'CREATE_TASK_ERROR':\n            console.log('create task', action.err)\n            return state\n        case 'GET_TASKS':\n            return {\n                ...state,\n                tasksData:action.tasksData,\n                unassignedTasksData:action.unassignedTasksData,\n                assignedTasksData:action.assignedTasksData,\n                pendingTasksData:action.pendingTasksData,\n                completeTasksData:action.completeTasksData,\n                complete:true\n            }\n        case 'GET_TASK':\n            return {\n                    ...state,\n                    taskData:action.taskData\n                }\n        case 'EMPTY_TASK':\n            return{\n                ...state,\n                taskData:[]\n            } \n        case 'EMPTY_TASKS':\n            return {\n                ...state,\n                tasksData:[],\n                unassignedTasksData:[],\n                assignedTasksData:[],\n                pendingTasksData:[],\n                completeTasksData:[],\n                complete:false\n            }\n        default:\n            return state\n    }\n    \n}\n\nexport default taskReducer","const initState = {\n    groups:null,\n    switchError:null,\n    defaultGroupData:null\n}\nconst groupReducer = (state = initState, action ) => {\n    switch(action.type){\n        case 'GROUP_ADD':\n            return {\n                ...state,\n                groups:action.groupsData\n            }\n        case 'SWITCHGROUP_SUCCESS':\n            return state\n        case 'SWITCHGROUP_ERROR':\n            return {\n                ...state,\n                switchError:action.error\n            }\n        case 'GET_GROUP':\n        return {\n            ...state,\n            defaultGroupData:action.groupData\n            }\n        case 'GET_GROUP_EMPTY':\n        return {\n            ...state,\n            defaultGroupData:null\n            }\n        default:\n            return state\n    }\n    \n}\nexport default groupReducer","import authReducer from './authReducer'\nimport taskReducer from './taskReducer'\nimport groupReducer from './groupReducer'\n\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\n\nconst rootReducer = combineReducers({\n   auth: authReducer,\n   task: taskReducer,\n   group: groupReducer,\n   firestore: firestoreReducer,\n   firebase: firebaseReducer \n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './components/store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './components/config/fbConfig'\n\nconst store = createStore(rootReducer,\n    composeWithDevTools(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig,{ useFirestoreForProfile:true,\n                                      userProfile: 'users',\n                                      attachAuthIsReady: true,\n                                      firebaseStateName: 'firebase'})\n    ) \n);\n// ReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\n})\n\n\n"],"sourceRoot":""}