{"version":3,"sources":["components/store/actions/authActions.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/auth/SignIn.js","components/auth/SignUp.js","components/tasks/TaskList.js","components/chart/BarChart.js","components/dashboard/Landing.js","components/store/actions/groupActions.js","components/dashboard/GroupPopup.js","components/config/fbConfig.js","components/store/actions/taskActions.js","components/alert/InfoWindow.js","components/dashboard/Dashboard.js","components/tasks/CreateTask.js","components/tasks/TaskDetails.js","components/alert/AlertWindow.js","components/tasks/TaskMemo.js","components/tasks/TaskProcess.js","components/auth/SignUpGroup.js","components/auth/SignInGroup.js","components/auth/SignGroup.js","App.js","components/store/reducers/authReducer.js","components/store/reducers/taskReducer.js","components/store/reducers/groupReducer.js","components/store/reducers/rootReducer.js","index.js"],"names":["randomColor","require","googleLogin","dispatch","getState","_ref4","getFirebase","getFirestore","firebase","firestore","provider","auth","GoogleAuthProvider","randomcolor","luminosity","signInWithPopup","then","result","console","log","_result$additionalUse","additionalUserInfo","profile","given_name","family_name","picture","email","isNewUser","initName","initLName","user","collection","doc","uid","set","firstname","lastname","initials","photoURL","createAt","FieldValue","serverTimestamp","userColor","window","location","hash","type","catch","err","where","get","querySnapshot","forEach","defaultGroup","data","error","connect","signOut","_ref2","props","react_default","a","createElement","className","react_router_dom","to","onClick","SignedOutLinks","Navbar","_this$props","this","links","layout_SignedInLinks","layout_SignedOutLinks","Component","state","SignIn","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","password","handleChange","e","setState","defineProperty","target","id","value","handleSubmit","preventDefault","signIn","handleGoogleLogin","inherits","createClass","key","react_router","authError","onSubmit","htmlFor","onChange","creds","credentials","_ref","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","_ref3","createUserWithEmailAndPassword","resp","currentUser","updateProfile","displayName","TaskList","completeTasks","pendingTasks","assignedTasks","unassignedTasks","index_es","icon","faPlusSquare","map","task","title","expiryDate","toDate","toDateString","content","author","assign","assignedTo","BarChart","drawChart","margin","graphWidth","graphHeight","rects","d3","append","attr","style","selectAll","max","d","points","x","domain","range","y","padding","enter","bandwidth","i","text","Landing","fetchGroupDetails","userUid","groupData","GroupPopup","handleSwitch","groupUid","switchGroup","togglePopup","_this2","groupsData","faGripLines","group","groupName","faDoorClosed","faPlus","groupsUid","newGroupUid","update","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","storage","fetchTask","taskUid","taskData","InfoWindow","handleConfirm","leaveGroup","faRunning","toggleLeaveGroup","confirmTaskAlert","_ref7","_firestore$collection3","_getState$firebase$pr","newDefaultGroup","noDefaultGroup","members","arrayRemove","delete","arr","pullArr","removed","mutateTo","v","includes","push","filter","pullAtValue","pop","Dashboard","groupPopup","leavePopup","memberBar","settingBar","fetchGroupList","fetchTaskList","prevState","toggleSettingBar","toggleMemberbar","toggleLeaveGruop","chart","React","createRef","membersInfo","completeTasksData","pendingTasksData","assignedTasksData","unassignedTasksData","tasksData","pointsData","membersPointsRecord","keys","dashboard_GroupPopup","bind","alert_InfoWindow","defaultGroupData","faAngleDown","faCog","faUser","faUserAlt","src","alt","faDoorOpen","faUnlink","chart_BarChart","width","height","tasks_TaskList","dashboard_Landing","membersPointsData","pointsRecord","tasks","ordered","groups","documentSnapshot","toConsumableArray","orderBy","CreatTask","category","Date","getTime","verifybyImage","handleBack","href","toggleChange","handleDateChange","date","createTask","handleAlert","taskErr","faExclamationTriangle","material_ui_pickers_esm","utils","DateFnsUtils","name","checked","authorUid","add","objectSpread","authorPhotoURL","authorColor","assignedAt","approve","verifiedBy","verifiedAt","lastUpdateAt","status","TaskDetails","handleAccept","acceptTask","match","params","taskdetails","_this$props$taskdetai","toTimeString","replace","ownProps","_ref5","userName","assignedToUid","assignedToURL","assignedToColor","arrayUnion","AlertWindow","errorMessage","errMessage","TaskMemo","files","imagePreviewUrl","imagefile","URL","createObjectURL","file","handleReportWithImage","reportTaskWithImage","handleReport","reportTaskWOImage","fileInput","alert_AlertWindow","action","ref","_ref6","mainImage","child","put","UploadTaskSnapshot","getDownloadURL","imageurl","finishAt","pendingImgURL","_firestore$collection2","alert","TaskProcess","handleApprove","approveTask","_ref8","newPoints","approvedAt","approvedBy","approvedByURL","approvedByColor","_firestore$collection5","SignUpGroup","groupId","groupPassword","signUpGroup","groupError","newGroup","groupValidate","SignInGroup","signInGroup","groupSignInValidate","docs","_doc$data","indexOf","_firestore$collection","SignGroup","activeClassName","path","component","App","layout_Navbar","exact","auth_SignUp","CreateTask","initState","authReducer","undefined","message","taskReducer","switchError","groupReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseStateName","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6e53bd7e.chunk.js","sourcesContent":["const randomColor = require('randomcolor');\nexport const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).then(() => {\n            window.location.hash = '#/'\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'})\n        }).then(()=>{\n            window.location.hash = '#/'\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();       \n        let randomcolor = randomColor({luminosity: 'bright'}); \n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstname: newUser.firstName,\n                lastname: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0],\n                email: newUser.email,\n                createAt: firestore.FieldValue.serverTimestamp(),\n                photoURL: null,\n                userColor:randomcolor\n            })\n        }).then(()=>{\n            firebase.auth().currentUser.updateProfile({\n                displayName: newUser.firstName,\n                email:newUser.email,\n                createAt: firestore.FieldValue.serverTimestamp()\n            })\n        })\n        .then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).then(()=>{\n            window.location.hash = '#/signgroup/signup'\n        })\n        .catch( err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}\nexport const googleLogin = () =>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        const provider = new firebase.auth.GoogleAuthProvider();\n        let randomcolor = randomColor({luminosity: 'bright'}); \n        firebase.auth().signInWithPopup(provider)\n        .then((result)=> {\n            console.log(result)\n            const {  given_name,family_name, picture,email} = result.additionalUserInfo.profile\n            if( result.additionalUserInfo.isNewUser ){\n                let initName = given_name[0] || ' '\n                let initLName = family_name[0] || ' '\n                const { user } = result\n\n                firestore.collection('users').doc(user.uid).set({\n                    firstname: given_name || '',\n                    lastname: family_name || '',\n                    initials:  initName + initLName,\n                    photoURL: picture,\n                    email: email,\n                    createAt: firestore.FieldValue.serverTimestamp(),\n                    userColor:randomcolor\n                })\n                .then(() =>  window.location.hash = '#/signgroup/signup' )\n                .then(() => dispatch({ type: 'LOGIN_SUCCESS' }))\n                .catch((err) => {\n                    console.log(err)\n                    dispatch({ type: 'LOGIN_ERROR'}, err)\n                })\n            } else {\n                firestore.collection('users').where('email','==',email).get()\n                .then( querySnapshot => {\n                    querySnapshot.forEach( doc => {\n                        const defaultGroup = doc.data().defaultGroup || null\n                        if (defaultGroup){\n                            console.log(defaultGroup)\n                            dispatch({ type: 'LOGIN_SUCCESS' })\n                            window.location.hash = '#/'\n                        } else {\n                            console.log(defaultGroup)\n                            dispatch({ type: 'LOGIN_SUCCESS' })\n                            window.location.hash = '#/signgroup/signup'\n                        }  \n                    })\n                })\n                dispatch({ type: 'LOGIN_SUCCESS' })\n            }\n          }).catch(function(error) {\n            console.log('error',error)\n            dispatch({ type: 'LOGIN_ERROR', error})\n          });\n    }\n}\n\nexport const signInGroup = (credentials) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const { groupId, groupPassword } = credentials\n        const firestore = getFirestore();\n        const userUid = getState().firebase.auth.uid;\n        const profile = getState().firebase.profile;\n        let groupSignInValidate = false;\n        let groupUid = null;\n        console.log('click')\n        if ( groupId.length === 0 || groupPassword.length === 0 ){\n            dispatch({ type: 'SIGNINGROUP_EMPTY'})\n            return\n        } else {\n        //(1)query in group collection to check the group id whether exist or not\n            firestore.collection('groups').where( 'groupId', '==', credentials.groupId).get()\n            .then( querySnapshot => {\n                if( querySnapshot.docs.length === 0 ){\n                    dispatch({ type: 'SIGNINGROUP_NOTEXIST'})\n                }if(querySnapshot.docs.length === 1){\n                    querySnapshot.forEach(doc => {  \n                        if(doc.data()){\n                            groupUid = doc.id;\n                            const{ members, groupPassword } = doc.data();\n                            if ( groupPassword !== credentials.groupPassword){\n                                dispatch({ type: 'SIGNINGROUP_ERROR'})\n                            }if ( groupPassword === credentials.groupPassword){\n                                if(members.indexOf(userUid)=== -1){\n                                    groupSignInValidate = true\n                                }else{\n                                    dispatch({ type: 'SIGNINGROUP_ERROR_EXIST'})\n                                }\n                            }\n                        } \n                    })\n                } \n            }).then(() => {\n                if( groupSignInValidate && userUid ){\n        //(2)update the userUid in the members array\n                    firestore.collection('groups').doc(groupUid).update({\n                        [`pointsRecord.${userUid}`]:{firstname:profile.firstname,userColor:profile.userColor || null,points:0,userUid:userUid},\n                        members:firestore.FieldValue.arrayUnion(userUid),\n                        [`membersInfo.${userUid}`]:{firstname:profile.firstname,userColor:profile.userColor|| null,photoURL:`${profile.photoURL}` ||  null ,userUid:userUid}\n                    }).catch(err => console.log(err))\n                }\n            }).then(()=>{\n                //(3)update the groupUid in the users groups array\n                if(groupSignInValidate && userUid ){\n                    firestore.collection('users').doc(userUid).update({\n                                groupsUid:firestore.FieldValue.arrayUnion(groupUid),\n                                defaultGroup: groupUid\n                            }).catch(err => console.log(err))\n                }\n\n            }).then(()=>{\n                if(groupSignInValidate && userUid ){\n                    dispatch({ type: 'SIGNINGROUP_SUCCESS'})\n                }\n            }).then(()=>{\n                if(groupSignInValidate && userUid){\n                    window.location.hash = '#/'\n                }\n            }).catch(err => console.log(err))\n        }\n    }\n}\n\nexport const signUpGroup = (newGroup) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const userUid = getState().firebase.auth.uid;\n        const profile = getState().firebase.profile;\n        let groupValidate = true;\n        const { groupName, groupId, groupPassword } = newGroup \n        if (groupName.length === 0 || groupId.length === 0 || groupPassword.length === 0){\n            dispatch({ type: 'SIGNINGROUP_EMPTY'})\n            return\n        } else {\n        //(1) Check the groupId whether exist or not\n            firestore.collection('groups').where( 'groupId', '==' , newGroup.groupId ).get()\n            .then( querySnapshot => {\n                querySnapshot.forEach(doc =>{\n                    if(doc.data()){\n                        groupValidate = false\n                    }\n                })\n            }).then( () =>{\n                if( !groupValidate){\n                    dispatch({ type: 'SIGNUPGROUP_ERROR'})\n                }if( groupValidate ){\n        //(2)If it is new groupId update the members array in the firestorecollection('groups') with the form information groupName, groupId, groupPassword, members userUid\n                    firestore.collection('groups').add({\n                        ...newGroup,\n                        members:firestore.FieldValue.arrayUnion(userUid)\n                    }).then(resp => {\n        //(3)update to the user database with the groupUid\n                        let groupUid = resp.id\n                        firestore.collection('users').doc(userUid).update({\n                            groupsUid:firestore.FieldValue.arrayUnion(groupUid),\n                            defaultGroup: groupUid\n                        })\n                        firestore.collection('groups').doc(groupUid).update({\n                            groupUid: groupUid,\n                            [`pointsRecord.${userUid}`]:{firstname:profile.firstname,userColor:profile.userColor||null,points:0,userUid:userUid},\n                            [`membersInfo.${userUid}`]:{firstname:profile.firstname,userColor:profile.userColor||null,photoURL:`${profile.photoURL}` ||  null ,userUid:userUid}\n                        })\n                    }).then(\n                        dispatch({ type: 'SIGNUPGROUP_SUCCESS'})\n                    ).then(()=>{\n                        window.location.hash = '#/'\n                    })\n                }\n            })\n        }\n    }\n}\nconst pullAtValue = (arr, pullArr) => {\n    let removed = [],\n      pushToRemove = arr.forEach((v, i) => (pullArr.includes(v) ? removed.push(v) : v)),\n      mutateTo = arr.filter((v, i) => !pullArr.includes(v));\n    arr.length = 0;\n    mutateTo.forEach(v => arr.push(v));\n    return removed;\n  };\nexport const leaveGroup = () => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const userUid = getState().firebase.auth.uid;\n        const { defaultGroup, groupsUid } = getState().firebase.profile;\n        let newDefaultGroup = null;\n        let noDefaultGroup = false\n        if (defaultGroup){ \n            firestore.collection('groups').doc(defaultGroup).update({\n                members:firestore.FieldValue.arrayRemove(userUid),\n                [`membersInfo.${userUid}`]:firestore.FieldValue.delete(),\n                [`pointsRecord.${userUid}`]:firestore.FieldValue.delete(),\n            }).then(()=>{\n                if (groupsUid === 1){\n                    noDefaultGroup = true\n                } else {\n                    pullAtValue(groupsUid,defaultGroup)\n                    newDefaultGroup = groupsUid.pop()\n                }\n            }).then(()=>{\n                firestore.collection('users').doc(userUid).update({\n                    groupsUid:firestore.FieldValue.arrayRemove(defaultGroup),\n                    defaultGroup: newDefaultGroup\n                })\n            }).then(()=>{\n                if (noDefaultGroup){\n                    window.location.hash = '#/signgroup/signin'\n                }else{\n                    window.location = '/'\n                }\n            })\n        } else {\n            return \n        }\n    }\n}","import React from 'react'\n\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../store/actions/authActions'\n\n\n\nconst SignedInLinks = (props) => {\n    const { profile } = props\n    return(\n        <div className=\"signinwrapper\">\n            <NavLink to=\"/post\" className=\"link-button\">Create task</NavLink>\n            <NavLink to=\"/\" className=\"link-button\" onClick={ props.signOut }>Log out</NavLink>   \n            <NavLink to=\"/\" className=\"avatar-circle\">{profile.initials}</NavLink>\n        </div>\n    )   \n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut:() => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return(\n        <div className=\"signinwrapper\">\n            <NavLink to=\"/signup\" className=\"link-button\">Sign up</NavLink>\n            <NavLink to=\"/signin\"className=\"link-button \">Log in</NavLink>\n        </div>\n    )\n    \n}\nexport default SignedOutLinks;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\nclass Navbar extends Component{\n\n    render(){\n        const { auth,  profile } = this.props;\n        const links = auth.uid ?  <SignedInLinks profile={ profile } /> : <SignedOutLinks />;\n        return(\n        <nav className=\"navwrapper\"> \n            <div className=\"container\">\n                <Link to='/' className=\"brandname\">HOMIE</Link>\n                { links }\n            </div>\n        </nav>\n        )\n    }\n}\n\n\nconst mapStateToProps = ( state ) => {\n    return {\n        auth: state.firebase.auth,\n        profile:state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from  'react-router-dom';\nimport { signIn, googleLogin } from '../store/actions/authActions';\n\nexport class SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n           [e.target.id]: e.target.value\n        })\n        \n    }\n    handleSubmit = (e) =>  {\n        e.preventDefault();\n        this.props.signIn(this.state); \n    }\n    handleGoogleLogin = (e) =>{\n      this.props.googleLogin()\n    }\n    componentDidMount(){\n      const { auth, profile } = this.props;\n      if (auth.uid && !profile.defaultGroup) return <Redirect to ='/signgroup/signup' />\n      if (auth.uid && profile.defaultGroup) return <Redirect to ='/' />\n    }\n    componentDidUpdate(){\n\n    }\n  render() {\n    const { authError } = this.props;\n    // if (auth.uid && !profile.defaultGroup) return <Redirect to ='/' />\n    // if (auth.uid && profile.defaultGroup) return <Redirect to ='/' />\n    return (\n      <div className=\"container\">\n        <h2 className=\"sub-instruciton-title\">Member Login</h2>\n        <div className=\"formoutter\">\n          <div className=\"formwrapper\">\n            <div className=\"button-row\">\n              <button onClick={this.handleGoogleLogin}\n                      className=\"google-button\" >\n                <div className=\"login-icon\">G</div>\n                <div className=\"login-text\">Continue with Google</div> \n              </button>\n            </div>\n            <div className=\"feature-row\">\n              <div className=\"hr-box \">\n                <div className=\"hr-placer\">———</div>\n                <div className=\"hr\">OR</div>\n                <div className=\"hr-placer\">———</div>\n              </div>\n            </div>\n            <form className=\"signinform\"\n                onSubmit={this.handleSubmit}>\n                <label className=\"label-font\" htmlFor=\"email\">Email</label>\n                <div className=\"input-row\">\n                    <input type=\"email\"\n                            id=\"email\"\n                            onChange={this.handleChange}/>\n                </div>\n                <label className=\"label-font\"  htmlFor=\"password\">Password</label>\n                <div className=\"input-row\">\n                    <input type=\"password\"\n                            id=\"password\"\n                            onChange={this.handleChange}/>\n                </div>\n                <div className=\"text-row error-holder\">\n                  { authError ? <p className=\"alert-font\">{authError}</p> : null }\n                </div>\n                <div className=\"feature-row\">\n                    <button className=\"medium-button\">Log in\n                    </button>\n                </div>\n            </form>\n          </div>\n        </div>\n   \n        \n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n    googleLogin: () => dispatch(googleLogin())\n  }\n}\nexport default connect( mapStateToProps , mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from  'react-router-dom';\nimport { signUp, googleLogin } from '../store/actions/authActions';\n\nexport class SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) =>{\n        this.setState({\n           [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n    handleGoogleLogin = (e) =>{\n      this.props.googleLogin()\n    }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to ='/' />\n    return (\n      <div className=\"container\">\n      <h2 className=\"sub-instruciton-title\">Start with Homie</h2>\n        <div className=\"formoutter\">\n          <div className=\"formwrapper\">\n            <div className=\"button-row\">\n              <button onClick={this.handleGoogleLogin}\n                      className=\"google-button\" >\n                <div className=\"login-icon\">G</div>\n                <div className=\"login-text\">Sign up with Google</div> \n              </button>\n            </div>\n            <div className=\"feature-row\">\n              <div className=\"hr-box \">\n                <div className=\"hr-placer\">———</div>\n                <div className=\"hr\">OR</div>\n                <div className=\"hr-placer\">———</div>\n              </div>\n            </div>\n            <form className=\"signinform\"\n                onSubmit={this.handleSubmit}>\n                <label className=\"label-font\" htmlFor=\"email\">Email</label>\n                <div className=\"input-row\">\n                    \n                    <input type=\"email\"\n                            id=\"email\"\n                            onChange={this.handleChange}/>\n                </div>\n                <label className=\"label-font\" htmlFor=\"password\">Password</label>\n                <div className=\"input-row\">\n                    <input type=\"password\"\n                            id=\"password\"\n                            onChange={this.handleChange}/>\n                </div>\n                <label className=\"label-font\" htmlFor=\"firstName\">First name</label>\n                <div className=\"input-row\">\n                    <input type=\"text\"\n                            id=\"firstName\"\n                            onChange={this.handleChange}/>\n                </div>\n                <label className=\"label-font\" htmlFor=\"lastName\">Last name</label>\n                <div className=\"input-row\">\n                    <input type=\"text\"\n                            id=\"lastName\"\n                            onChange={this.handleChange}/>\n                </div>\n                <div className=\"text-row error-holder\">\n                    { authError ? <p className=\"alert-font\">{ authError }</p>  : null} \n                </div>\n                <div className=\"feature-row\">\n                    <button className=\"medium-button\">Sign Up</button>\n                </div>\n            </form>\n            \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  // console.log(state)\n  return {\n    auth: state.firebase.auth, //for checking the login or not\n    authError: state.auth.authError\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    signUp: (newUser) => dispatch(signUp(newUser)),\n    googleLogin:() => dispatch(googleLogin())\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom' \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\nclass TaskList extends Component {\n    \n    render(){\n        const { completeTasks, pendingTasks, assignedTasks, unassignedTasks }  = this.props\n        return (\n            <div className=\"tasklist-wapper\">\n                {/* <div className=\"container\">\n                    <div className=\"empty-card\">\n                    </div>\n                </div> */}\n                <div className=\"title-row\">\n                    <h3 className=\"row-title\">UNASSIGNED</h3>\n                    <Link to=\"/post\" className=\"row-icon icon-row-button\">\n                    <h3><FontAwesomeIcon  icon={faPlusSquare }/></h3>\n                    <p>Add another Task</p>\n                    </Link>\n                </div>\n\n                {this.props.unassignedTasks[0] ? (\n                \n                <div className=\"container \">\n                {  unassignedTasks && unassignedTasks.map( task => {\n                        return (\n                        <Link to={'/task/'+  task.id } key={ task.id } task={task}>\n                            <div className=\"task-card\" >\n                                <h3>{ task.data.title }</h3>\n                                <p className=\"expirydate\">\n                                <span className=\"expirydate-title\">Expiry Date | {task.data.expiryDate.toDate().toDateString()} </span>\n                                </p>\n                                <p>{ task.data.content }</p>\n                                <span className=\"expirydate-title\">Posted by | { task.data.author } </span>\n                                <span className=\"expirydate-title\">Posted at | { task.data.createAt.toDate().toDateString() }</span>\n                            </div>\n                        </Link>\n                        )\n                    }) }\n                </div>\n                ) :(\n                <div className=\"container\">\n                    <div className=\"empty-card\"></div>\n                </div>)}\n                <div className=\"title-row\">\n                    <h3 className=\"row-title\">ASSIGNED</h3>\n                </div>\n                {this.props.assignedTasks[0] ? (\n                <div className=\"container \">\n                    {  assignedTasks && assignedTasks.map( task => {\n                            return (\n                            <Link to={'/task/memo/'+  task.id } key={ task.id } task={task}>\n                                <div className=\"task-card\" >\n                                    <h3>{ task.data.title }</h3>\n                                    <p className=\"expirydate\">\n                                    <span className=\"expirydate-title\">Expiry Date | { task.data.expiryDate.toDate().toDateString() } </span>\n                                    </p>\n                                    <p>{ task.data.content }</p>\n                                    <span className=\"expirydate-title\">Posted by | { task.data.author } </span>\n                                    <span className=\"expirydate-title\">Assigned to | { task.data.assign.assignedTo } </span>\n                                    <span className=\"expirydate-title\">Posted at | { task.data.createAt.toDate().toDateString() }</span>\n                                </div>\n                            </Link>\n                            )\n                        }) }\n                    </div>\n                ):( \n                <div className=\"container\">\n                    <div className=\"empty-card\"></div>\n                </div>)}\n                <div className=\"title-row\">\n                    <h3 className=\"row-title\">PENDING APPROVAL</h3>\n                </div>\n                {this.props.pendingTasks[0]?(\n                    <div className=\"container \">\n                    {  pendingTasks && pendingTasks.map( task => {\n                            return (\n                            <Link to={'/task/process/'+  task.id } key={ task.id } task={task}>\n                                <div className=\"task-card\" >\n                                    <h3>{ task.data.title }</h3>\n                                    <p className=\"expirydate\">\n                                    <span className=\"expirydate-title\">Expiry Date |{ task.data.expiryDate.toDate().toDateString() }</span>\n                                    </p>\n                                    <p>{ task.data.content }</p>\n                                    <span className=\"expirydate-title\">Posted by | { task.data.author } </span>\n                                    <span className=\"expirydate-title\">Assigned to | { task.data.assign.assignedTo } </span>\n                                    <span className=\"expirydate-title\">Posted at | { task.data.createAt.toDate().toDateString() }</span>\n                                </div>\n                            </Link>\n                            )\n                        }) }\n                </div>\n                ):(\n                <div className=\"container\">\n                    <div className=\"empty-card\"></div>\n                </div>)}\n                <div className=\"title-row\">\n                    <h3 className=\"row-title\">COMPLETE</h3>\n                </div>\n                {this.props.completeTasks[0] ? (\n                <div className=\"container \">\n                    {  completeTasks && completeTasks.map( task => {\n                            return (\n                                <div className=\"task-card\" key={ task.id } >\n                                    <h3>{ task.data.title }</h3>\n                                    <p className=\"expirydate\">\n                                    <span className=\"expirydate-title\">Expiry Date |{ task.data.expiryDate.toDate().toDateString() }</span>\n                                    </p>\n                                    <p>{ task.data.content }</p>\n                                    <span className=\"expirydate-title\">Posted by | { task.data.author } </span>\n                                    <span className=\"expirydate-title\">Assigned to | { task.data.assign.assignedTo } </span>\n                                    <span className=\"expirydate-title\">Posted at | { task.data.createAt.toDate().toDateString() }</span>\n                                </div>\n                            )\n                        }) }\n                    </div>\n                ):( \n                <div className=\"container\">\n                    <div className=\"empty-card\"></div>\n                </div>)}\n\n\n                {/* <h3 className=\"title\">All TASK</h3>\n                <div className=\"container \">\n                {  task && task.map( task => {\n                        return (\n                        <Link to={'/task/'+  task.id } key={ task.id } task={task}>\n                            <div className=\"task-card\" >\n                                <h3>{ task.data.title }</h3>\n                                <p className=\"expirydate\">\n                                <span className=\"expirydate-title\">Expiry Date | Wed 25 / 04 / 2019 </span>\n                                </p>\n                                <p>{ task.data.content }</p>\n                                <span className=\"expirydate-title\">Posted by | { task.data.author } </span>\n                                <span className=\"expirydate-title\">Posted at | { task.data.createAt.toDate().toDateString() }</span>\n                            </div>\n                        </Link>\n                        )\n                    }) }\n                </div> */}\n\n            </div>\n            \n        )\n    }\n}\n\nexport default TaskList;","import React, { Component } from 'react'\nimport * as d3 from 'd3'\nexport class BarChart extends Component {\n\n\n  componentDidMount() {\n   \n  \n  }\n  componentDidUpdate(){\n    if (this.props.data.length !== 0){\n      console.log('DRAWCHART')\n      console.log(this.props.data)\n      this.drawChart();\n    }\n  }\n  drawChart() {      \n    const svg = d3.select(\"#chart\").append(\"svg\")\n    .attr(\"width\", \"100%\")\n    .attr(\"height\", \"100%\")\n\n    //create margins and dimensions\n    const margin = {top:5, bottom:5, left:3, right:3}\n    const graphWidth = 100 - margin.left - margin.right;\n    const graphHeight = 100 - margin.top - margin.bottom;\n   \n    const graph = svg.append('g')\n                    .attr('width',graphWidth+`%`)\n                    .attr('height',graphHeight+`%`)\n                    .style('transform', `translate(${margin.left}% ,${margin.top}% )`)\n    // const xAxisGroup = graph.append('g')\n    //                         .style('width','100%')\n    //                         .style('height','100%')\n    //                         .style('transform', `translate(0 ,${ graphHeight - margin.top}% )`)\n    // const yAxisGroup = graph.append('g')\n    //                         .style('width','100%')\n    //                         .style('height','100%')\n    //                         .style('transform', `translate(0 ,${ margin.top}% )`)\n\n    //join data to react\n    const rects =  graph.selectAll(\"rect\")\n    .data(this.props.data)\n\n    // const min = d3.min(this.props.data, d => d.points)\n    let max = d3.max(this.props.data, d => d.points)\n    if ( max < 5 ){ max = 5 }\n    const x = d3.scaleLinear()\n                .domain([0,max])\n                .range([0,graphWidth]);\n    const y = d3.scaleBand()\n                .domain(this.props.data.map(data => data.firstname))\n                .range([graphHeight,0])\n                .padding(0.5)\n          \n    // append the enterselections to DOM and add attrs to reacts already in dom \n    rects.enter()\n    .append(\"rect\")\n    .attr(\"height\", y.bandwidth()+`%`)\n    .attr(\"width\", (d, i) => x(d.points)+`%`)\n    .attr(\"y\", (d, i) => {\n        return(\n           y(d.firstname)+`%`\n        ) \n    })\n    .attr(\"x\", (d, i) => 0)\n    .attr(\"fill\", (d, i) => {return(d.userColor)})\n    .attr(\"radius\",5)\n    \n    rects.enter()\n    .append(\"text\")\n    .style('font-size', '0.8rem')\n    .style('font-weight', 'bold')\n    .attr(\"fill\", \"#a5a5a5\")\n    .attr(\"height\", y.bandwidth()+`%`)\n    .attr(\"width\", (d, i) => x(d.points)+`%`)\n    .attr(\"y\", (d, i) => {\n        return(\n           y(d.firstname)- 2 +`%`\n        ) \n    })\n    .attr(\"x\", 0)\n    .text(function(d){\n    return `${d.firstname} : ${d.points} points` }\n       )\n    .style(\"backgroud-color\", \"white\");\n\n    \n\n    //create and call the axes\n    // const xAxis = d3.axisBottom(x)\n    // const yAxis = d3.axisLeft(y)\n    // xAxisGroup.call(xAxis)\n    // yAxisGroup.call(yAxis)\n             \n  }\n  render() {\n    return (\n      <div className=\"barchart-box\">\n       <div className=\"barchart-inner\">\n       <div id=\"chart\"></div>\n        </div> \n      </div>\n    )\n  }\n}\n\nexport default BarChart\n","import React, { Component } from 'react'\n\nexport class Landing extends Component {\n  render() {\n    return (\n        <div className=\"welcome-wrapper\">\n                <div className=\"container\">\n                    <div className=\"col-2-1\">\n                        <div className=\"logo-block\">\n                            <div className=\"logo-holder expand-effect\"><h2>●´∀`●</h2></div>\n                        </div>\n                    </div>\n                    <div className=\"col-2-1\">\n                        <div className=\"campaign-block\">\n                            <h1 className=\"campaign-block-title \">Start from <span className=\"brand\">HOMIE</span><br/> Arrange houseworks easier.</h1>\n                            <p className=\"\">Manage, collaborate and track the houseworks smart.  </p>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n    )\n  }\n}\n\nexport default Landing\n","export const fetchGroupList = (groupsUid) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        let groupsData=[];\n        //(1) groupsUid fetch the groups doc name groupsUid\n        const firestore = getFirestore();\n        groupsUid.map( (groupUid) => {\n            return (\n                firestore.collection('groups').doc(groupUid).get().then(\n                    documentSnapshot => {\n                        groupsData =[...groupsData,documentSnapshot.data()]\n                    }).then(()=>{\n                        dispatch({ type: 'GROUP_ADD',groupsData})\n                    }) \n            )\n        })\n    }\n}\n\nexport const fetchGroupDetails = (userUid) => {\n    return (dispatch, getState, {getFirestore}) => {\n        const firestore = getFirestore()\n        let groupData;\n        if(userUid){\n\n            firestore.collection('users').doc(userUid).get()\n            .then(doc => { \n                const defaultGroup  = doc.data().defaultGroup || null\n                return defaultGroup\n            })\n            .then( defaultGroup => { \n                if(defaultGroup){\n                    firestore.collection('groups').doc(defaultGroup).get()\n                    .then( doc => {\n                        groupData = doc.data()\n                    }).then(()=>{\n                        dispatch({type: 'GET_GROUP', groupData})\n                    })\n                }else{\n                    dispatch({type: 'GET_GROUP_EMPTY'})\n                }\n            })\n        }else{\n            console.log('EMPTY')\n            dispatch({type: 'GET_GROUP_EMPTY'})\n        }\n\n\n    }\n}\n\nexport const switchGroup = ( newGroupUid ) => {\n    return (dispatch, getState, {getFirestore}) => {\n        const userUid = getState().firebase.auth.uid\n        const firestore = getFirestore();\n        firestore.collection('users').doc(userUid).update({\n            defaultGroup:newGroupUid\n        })\n        .then(\n            dispatch({ type: 'SWITCHGROUP_SUCCESS' })\n        ).catch(function(error) {\n            dispatch({ type: 'SWITCHGROUP_ERROR',error })\n        });\n        \n    }\n}","import React, { Component } from 'react'\nimport { faGripLines, faPlus, faDoorClosed } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavLink } from 'react-router-dom';\n\nimport { connect } from 'react-redux'\n\nimport { switchGroup } from '../store/actions/groupActions'\nimport { fetchGroupDetails } from '../store/actions/groupActions'\nexport class GroupPopup extends Component {\n\n    handleSwitch = (groupUid) => {\n        this.props.switchGroup(groupUid)\n        this.props.togglePopup()\n        this.props.fetchGroupDetails()\n    }\n    componentDidUpdate(){\n        // console.log(this.props)\n    }\n    componentWillMount(){\n        \n    }\n    render() {\n        const { groupsData } = this.props\n        return (\n        <div className=\"popup\" >\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"close-popup-row\" onClick={this.props.togglePopup}><FontAwesomeIcon icon={faGripLines} /></div> \n                </div>\n                <div className=\"option-block\">\n                { groupsData && groupsData.map(group => {\n                        const { groupUid, groupName }= group;\n                        return (\n                            <div onClick={()=>this.handleSwitch(groupUid)} className=\"option-row \" key={groupUid}>\n                                <div className=\"option-icon\">\n                                    <FontAwesomeIcon icon={faDoorClosed} />\n                                </div>\n                                <div className=\"option-text\">{ groupName }</div>\n                            </div>\n                        )\n                    })\n                }\n                </div>\n                <div className=\"u-bottom\">\n                    <div className=\"container\">\n                        <NavLink to=\"/signgroup/signin\" >\n                            <div  className=\"option-row \">\n                                <div className=\"option-icon\">\n                                    <FontAwesomeIcon icon={faPlus} />\n                                </div>\n                                <div className=\"option-text\">Join new group</div>\n                            </div>\n                        </NavLink> \n                    </div>\n\n                </div>\n\n            </div>\n        </div>\n        )\n    }\n}\nconst mapStatetToProps = (state) => {\n    return {\n        groupsUid: state.firebase.profile.groupsUid,\n        defaultGroup: state.firebase.profile.defaultGroup\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        switchGroup: (newGroupUid) => dispatch(switchGroup(newGroupUid)),\n        fetchGroupDetails: (groupUid) => dispatch(fetchGroupDetails(groupUid))\n    }\n}\nexport default connect(mapStatetToProps,mapDispatchToProps)(GroupPopup);\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport 'firebase/storage'\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyAPYaJoMlKsJ6iepxr8uWw4ZE1aPlH6rvI\",\n    authDomain: \"homie-2019.firebaseapp.com\",\n    databaseURL: \"https://homie-2019.firebaseio.com\",\n    projectId: \"homie-2019\",\n    storageBucket: \"homie-2019.appspot.com\",\n    messagingSenderId: \"769792607981\"\n}\nfirebase.initializeApp(config);\nconst storage = firebase.storage();\nexport { storage, firebase as default };","import { storage } from '../../config/fbConfig';\nexport const createTask = (task) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorUid = getState().firebase.auth.uid;\n        if (task.title.length !== 0){\n            firestore.collection('tasks').add({\n                ...task,\n                author: profile.firstname,\n                authorUid: authorUid,\n                authorPhotoURL:profile.photoURL || null,\n                authorColor:profile.userColor || null,\n                groupUid: profile.defaultGroup,\n                createAt: new Date(),\n                assign:{assignedTo:null,assignedAt:null},\n                approve:{verifiedBy:null,verifiedAt:null},\n                lastUpdateAt:firestore.FieldValue.serverTimestamp(),\n                status:\"unassigned\"\n            }).then(() => {\n                dispatch({ type: 'CREATE_TASK', task })\n            }).then(() => {\n                window.location.hash = '#/'\n            })\n            .catch((err)=>{\n                dispatch({ type: 'CREATE_TASK_ERROR', err })\n            })\n        } else {\n            dispatch({ type: 'TASK_BLANK'})\n        }\n    }\n};\nexport const confirmTaskAlert =()=>{\n    return(dispatch, getState, { getFirebase, getFirestore })=>{\n        dispatch({ type: 'RESET_TASK_ALERT'})\n    }\n   \n}\nexport const fetchTask = (taskUid) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        let taskData;\n        if(taskUid){\n            firestore.collection('tasks').doc(taskUid).get()\n            .then(doc => {\n                taskData = {id:doc.id,data:doc.data()}\n            })\n            .then(() => {\n                dispatch({type: 'GET_TASK', taskData})\n            }).catch(err=>{\n                console.log(err)\n                dispatch({type: 'EMPTY_TASK'})\n            })\n        } else{\n            dispatch({type: 'EMPTY_TASK'})\n        }\n\n    }\n};\nexport const fetchTaskList = (userUid) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        let tasksData = []\n        let unassignedTasksData = []\n        let assignedTasksData = []\n        let pendingTasksData = []\n        let completeTasksData = []\n        if (userUid) {\n            firestore.collection('users').doc(userUid).get()\n            .then( doc => { \n               const  defaultGroup  = doc.data().defaultGroup || null\n               return defaultGroup\n            }).then( defaultGroup => {\n                if (defaultGroup) {\n                    firestore.collection('tasks').where('groupUid', '==', defaultGroup).orderBy('lastUpdateAt','desc').get()\n                    .then( querySnapshot => { querySnapshot.forEach( doc => {\n                        tasksData = [...tasksData, {id:doc.id,data:doc.data()}]\n                        }) \n                    })\n                    .then(() => {\n                        firestore.collection('tasks').where('groupUid', '==', defaultGroup).where('status','==','unassigned').orderBy('lastUpdateAt','desc').get()\n                        .then( querySnapshot => { querySnapshot.forEach( doc => {\n                            unassignedTasksData = [...unassignedTasksData, {id:doc.id,data:doc.data()}]\n                            })\n                        }).then(() => {\n                            firestore.collection('tasks').where('groupUid', '==', defaultGroup).where('status','==','assigned').orderBy('lastUpdateAt','desc').get()\n                            .then( querySnapshot => { querySnapshot.forEach( doc => {\n                                assignedTasksData = [...assignedTasksData, {id:doc.id,data:doc.data()}]\n                                })\n                            }).then(()=>{\n                                firestore.collection('tasks').where('groupUid', '==', defaultGroup).where('status','==','pending').orderBy('lastUpdateAt','desc').get()\n                                .then( querySnapshot => { querySnapshot.forEach( doc => {\n                                    pendingTasksData = [...pendingTasksData, {id:doc.id,data:doc.data()}]\n                                    })\n                                    \n                                }).then(()=>{\n                                    firestore.collection('tasks').where('groupUid', '==', defaultGroup).where('status','==','complete').orderBy('lastUpdateAt','desc').get()\n                                    .then(querySnapshot => { querySnapshot.forEach( doc => {\n                                        completeTasksData = [...completeTasksData, {id:doc.id,data:doc.data()}]\n                                        })\n                                    }).then(()=>{\n                                        dispatch({type: 'GET_TASKS',\n                                        tasksData,\n                                        unassignedTasksData,\n                                        assignedTasksData,\n                                        pendingTasksData,\n                                        completeTasksData\n                                        })\n                                    })\n                                })\n                            })\n                        })\n                    }) \n                }\n            }).catch(err=>{\n                console.log(err)\n                dispatch({type: 'EMPTY_TASKS'})\n            })\n        } else {\n            dispatch({type: 'EMPTY_TASKS'})\n        }\n\n    }\n};\nexport const acceptTask = (taskUid) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        const userUid = getState().firebase.auth.uid\n        const profile =  getState().firebase.profile\n        const userName = getState().firebase.profile.firstname\n        const groupUid = getState().firebase.profile.defaultGroup;\n        //(1) update the task doc with the status and the assign field\n        //(2) update the user doc accept the task\n        firestore.collection('tasks').doc(taskUid).update({\n            assign:{assignedAt:firestore.FieldValue.serverTimestamp(),\n                    assignedTo:userName,\n                    assignedToUid:userUid,\n                    assignedToURL:profile.photoURL || null,\n                    assignedToColor:profile.userColor || null},\n            lastUpdateAt:firestore.FieldValue.serverTimestamp(),\n            status: 'assigned'\n        }).then(() => {\n            firestore.collection('users').doc(userUid).update({\n                [`beAssignedTo.${groupUid}`]:firestore.FieldValue.arrayUnion(taskUid)\n            }).then(()=>{\n                dispatch({type: 'EMPTY_TASKS'})\n            })\n            .then(() => {\n                window.location.hash = '#/'\n            })\n        }).catch((err)=>{console.log(err)})\n\n    }\n};\nexport const reportTaskWithImage = (taskUid, assign ,file) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        const groupUid = getState().firebase.profile.defaultGroup;\n        const userUid = getState().firebase.auth.uid\n        const { assignedToUid } = assign\n\n        //(1) update the task doc with the status to pending\n        //(2) update the user doc remove taskUid from the beAssignedTo and add it to the pendding\n        //(*) Error Handling check if contain the image or not\n        if( userUid === assignedToUid ) {\n\n            if(file) {\n                const storageRef = storage.ref(`task_images/${taskUid}`)\n                const mainImage = storageRef.child(file.name)\n                mainImage.put(file)\n                .then((UploadTaskSnapshot)=>{\n                    // console.log(UploadTaskSnapshot)\n                    mainImage.getDownloadURL()\n                    .then( ( imageurl )=> {\n                        firestore.collection('tasks').doc(taskUid).update({\n                            lastUpdateAt:firestore.FieldValue.serverTimestamp(),\n                            finishAt:firestore.FieldValue.serverTimestamp(),\n                            status: 'pending',\n                            pendingImgURL: imageurl\n                            \n                        }).then(() => {\n                            firestore.collection('users').doc(userUid).update({\n                                [`beAssignedTo.${groupUid}`]:firestore.FieldValue.arrayRemove(taskUid),\n                                [`pending.${groupUid}`]:firestore.FieldValue.arrayUnion(taskUid)\n                            }).then(()=>{\n                                dispatch({type: 'EMPTY_TASKS'})\n                            }).then(() => {\n                                window.location.hash = '#/'\n                            })\n                        }).catch(err=>{\n                            console.log(err)\n                        })\n                    }).catch(err=>{\n                        console.log(err)\n                        alert('upload failed, please try again')\n                    })\n                }).catch(err=>{\n                    console.log(err)\n                    alert('upload failed, please try again')\n                })\n\n            } else {\n                console.log('沒有上傳圖片')\n                dispatch({type: 'TASK_BLANK_NOPIC'})\n            }\n        } else {\n            dispatch({type: 'TASK_NOT_ASSIGNED'})\n            return\n        }\n    }\n}\nexport const reportTaskWOImage = (taskUid, assign) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        const groupUid = getState().firebase.profile.defaultGroup;\n        const userUid = getState().firebase.auth.uid\n        const { assignedToUid } = assign\n\n        //(1) update the task doc with the status to pending\n        //(2) update the user doc remove taskUid from the beAssignedTo and add it to the pendding\n        if( userUid === assignedToUid ) {\n            firestore.collection('tasks').doc(taskUid).update({\n                lastUpdateAt:firestore.FieldValue.serverTimestamp(),\n                finishAt:firestore.FieldValue.serverTimestamp(),\n                status: 'pending'  \n            }).then(() => {\n                firestore.collection('users').doc(userUid).update({\n                    [`beAssignedTo.${groupUid}`]:firestore.FieldValue.arrayRemove(taskUid),\n                    [`pending.${groupUid}`]:firestore.FieldValue.arrayUnion(taskUid)\n                }).then(()=>{\n                    dispatch({type: 'EMPTY_TASKS'})\n                }).then(() => {\n                    window.location.hash = '#/'\n                }).catch((err)=>{\n                    console.log(err)\n                })\n            }).catch((err)=>{\n                console.log(err)\n            })\n        } else {\n            dispatch({type: 'TASK_NOT_ASSIGNED'})\n            return\n        }\n    }\n}\nexport const approveTask = (taskUid, assign) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        const groupUid = getState().firebase.profile.defaultGroup\n        const userName = getState().firebase.profile.firstname\n        const profile = getState().firebase.profile\n        const userUid = getState().firebase.auth.uid\n        const { assignedToUid } = assign\n        let newPoints;\n        //(1) update the task doc with the status to complete\n        //(2) update the user doc remove taskUid from the pending and add it to the finish\n        //(*) Error Handling check if contain the image or not\n        if( userUid !== assignedToUid ) {\n            firestore.collection('groups').doc(groupUid).get().then(doc =>{\n                const { pointsRecord } = doc.data()\n                newPoints = pointsRecord[assignedToUid].points + 1\n                return newPoints\n            }).then(()=> {\n                firestore.collection('groups').doc(groupUid).update({\n                    [`pointsRecord.${assignedToUid}.points`]:newPoints\n                }).then(()=>{\n                    firestore.collection('tasks').doc(taskUid).update({\n                        lastUpdateAt:firestore.FieldValue.serverTimestamp(),\n                        status: 'complete',\n                        approve:{approvedAt:firestore.FieldValue.serverTimestamp(),\n                                 approvedBy:userName,\n                                 approvedByURL:profile.photoURL || null,\n                                 approvedByColor:profile.userColor || null}\n                    }).then(()=>{\n                        firestore.collection('users').doc(assignedToUid).update({\n                            [`pending.${groupUid}`]:firestore.FieldValue.arrayRemove(taskUid),\n                            [`finish.${groupUid}`]:firestore.FieldValue.arrayUnion(taskUid)\n                        }).then(()=>{\n                            dispatch({type: 'EMPTY_TASKS'})\n                        }).then(() => {\n                            window.location.hash = '#/'\n                        }).catch(err=>console.log(err))\n                    }).catch(err=>console.log(err))\n                }).catch(err=>console.log(err))\n            }).catch(err=>console.log(err))\n            \n        } else {\n            alert('It is an invalid action')\n            return\n        }\n    }\n}","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRunning } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux'\nimport { confirmTaskAlert } from '../store/actions/taskActions'\nimport { leaveGroup } from '../store/actions/authActions'\nexport class InfoWindow extends Component {\n  handleConfirm = () =>{\n     this.props.leaveGroup()\n     \n  }\n  render() {\n    return (\n          <div className=\"popup-layer\">\n            <div className=\"container\">\n                <div className=\"information-window\">\n                    <div className=\"container\">           \n                    <h1 className=\"alert-icon browncolor-icon\"><FontAwesomeIcon icon={ faRunning }/></h1>\n                    <h2>Warning</h2>\n                    <h4>Are you sure to leave this group? All your records in this group will be deleted.</h4>\n                    <hr/>\n                    </div>\n                    <div className=\"feature-row\">\n                    <button className=\"small-square-button cancel-button\"\n                            onClick={ this.props.toggleLeaveGroup }>Dismiss</button>\n                    <button className=\"small-square-button\"\n                            onClick={ this.handleConfirm }>Confirm</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    confirmTaskAlert: ()=>dispatch(confirmTaskAlert()),\n    leaveGroup: () => dispatch(leaveGroup())\n  }\n}\nexport default connect(null, mapDispatchToProps)(InfoWindow);\n","import React, { Component } from 'react';\nimport TaskList from '../tasks/TaskList';\nimport BarChart from '../chart/BarChart'\nimport Landing from '../dashboard/Landing'\nimport GroupPopup from '../dashboard/GroupPopup' \nimport InfoWindow from '../alert/InfoWindow'\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom' \n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDoorOpen, faAngleDown, faUser, faCog, faUnlink, faUserAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { fetchGroupList, fetchGroupDetails } from '../store/actions/groupActions'\nimport { fetchTaskList } from '../store/actions/taskActions'\n\nclass Dashboard extends Component {\n    constructor(props){\n        super(props)\n        this.chart = React.createRef();\n    }\n    state = {\n        groupPopup: false,\n        leavePopup:false,\n        memberBar: false,\n        settingBar:false,\n        data: [    {\n            \"firstname\": \"Karen\",\n            \"points\":5,\n            \"userColor\":\"#845EC2\"\n        },\n        {\n            \"firstname\": \"Sherlock\",\n            \"points\":3,\n            \"userColor\":\"#FF6F91\"\n        },\n        {\n            \"firstname\": \"Watson\",\n            \"points\":7,\n            \"userColor\":\"#FF9671\"\n        },\n        {\n            \"firstname\": \"Molly\",\n            \"points\":12,\n            \"userColor\":\"#FFC75F\"\n        }]\n    }\n    togglePopup = () => {\n        if( !this.state.groupPopup ){\n            if (this.props.profile.defaultGroup) {\n                this.props.fetchGroupList(this.props.groupsUid)\n                this.props.fetchTaskList()\n                this.props.fetchGroupDetails()\n            }\n           \n        } \n        if (this.state.groupPopup){\n            if (this.props.profile.defaultGroup) {\n            this.props.fetchTaskList(this.props.auth.uid)\n            this.props.fetchGroupDetails(this.props.auth.uid)\n            }\n        }\n        this.setState( prevState => ({\n            groupPopup: !prevState.groupPopup\n        }));\n    }\n    toggleSettingBar = () => {\n        this.setState( prevState => ({\n            settingBar: !prevState.settingBar\n        }))\n        if(this.state.memberBar){\n            this.setState( prevState => ({\n                memberBar: !prevState.memberBar\n            }))\n        }\n    }\n    toggleMemberbar = () => {\n        this.setState( prevState => ({\n            memberBar: !prevState.memberBar\n        }))\n        if(this.state.settingBar){\n            this.setState( prevState => ({\n                settingBar: !prevState.settingBar\n            }))\n        }\n\n    }\n    toggleLeaveGruop = (e) => {\n        this.setState(prevState => ({\n            leavePopup: !prevState.leavePopup\n        }))\n    }\n    componentDidMount(){\n        if(this.props.auth.uid){\n            this.props.fetchTaskList(this.props.auth.uid)\n            this.props.fetchGroupDetails(this.props.auth.uid)\n        }\n    }  \n    componentWillUnmount(){\n        console.log('unmount dashboard EMPTY')\n        this.props.fetchGroupDetails()\n        this.props.fetchTaskList()\n    }\n    render(){\n        const { membersInfo, completeTasksData, pendingTasksData,assignedTasksData, unassignedTasksData, tasksData, auth } = this.props\n        let pointsData =[]\n        const {membersPointsRecord} = this.props\n        this.props.membersPointsRecord && Object.keys(membersPointsRecord).forEach(e => {\n            pointsData.push(membersPointsRecord[e])\n        })\n        if (auth.uid){\n            return (\n                <div className=\"dashboard-wrapper\">\n                { this.state.groupPopup ? <GroupPopup togglePopup={ this.togglePopup.bind(this) } groupsData={ this.props.groupsData }/> : null }\n                { this.state.leavePopup ? <InfoWindow toggleLeaveGroup={ this.toggleLeaveGruop.bind(this) }/> : null}\n                    <div className=\"container\">\n                        <div className=\"selected-wrapper\">\n                            <div className=\"selected-group\" onClick={this.togglePopup}>\n                                { this.props.defaultGroupData ? this.props.defaultGroupData.groupName : null } <FontAwesomeIcon icon={faAngleDown} />\n                            </div>\n                        </div>\n                        <div className=\"indicator-wrapper\">\n                            <div className=\"icon-bar\">\n                                 <div onClick={ this.toggleSettingBar }\n                                     className=\"indicator-button \">\n                                    <FontAwesomeIcon icon={faCog} /> \n                                </div>\n                                <div onClick={ this.toggleMemberbar }\n                                     className=\"indicator-button \">\n                                    <FontAwesomeIcon icon={faUser} /> {this.props.defaultGroupData ? (this.props.defaultGroupData.members.length) : 1}\n                                </div>\n\n                            </div>\n                            { this.state.memberBar ? (\n                                <div className=\"member-bar\">\n                                    { membersInfo ? (\n                                        Object.keys(membersInfo).map(e => {\n                                                return ( \n                                                    <div className=\"member-button\" key={e} >\n                                                        <div className=\"member-cirle\">\n                                                            <div className=\"circle-wrapper\">\n                                                                { membersInfo[e].photoURL==='null' ? <div className=\"member-img-holder\"> <FontAwesomeIcon icon={ faUserAlt } /> </div> :<img src={ membersInfo[e].photoURL } alt=\"\"/> }\n                                                            </div>\n                                                        </div>\n                                                        <span className=\"circle-name\">{membersInfo[e].firstname}</span>\n                                                    </div>\n                                                )\n                                            }))  \n                                     : null\n                                    }\n                                </div>\n                            ): null }\n                            { this.state.settingBar ? (\n                                <div className=\"setting-bar\">\n                                    <Link to=\"/signgroup/signin\">\n                                    <div className=\"setting-button\">\n                                        <FontAwesomeIcon icon={faDoorOpen}/>  Join new group\n                                    </div>\n                                    </Link>\n                                    <div onClick={this.toggleLeaveGruop}\n                                         className=\"setting-button\">\n                                        <FontAwesomeIcon icon={faUnlink }/> Leave this group\n                                    </div>\n                                </div>\n                            ) : null }\n                        </div>\n                    </div>\n                    <div className=\"container\">  \n                    {this.state.groupPopup || this.state.leavePopup ? null :<BarChart data={this.props.pointsData} width={this.state.width} height={this.state.height} />}\n                    </div>\n                    \n                    <div className=\"container\">\n                    {this.state.groupPopup || this.state.leavePopup ? null :  <TaskList task={ tasksData } unassignedTasks={ unassignedTasksData } assignedTasks={ assignedTasksData } pendingTasks={ pendingTasksData } completeTasks={ completeTasksData }/> }\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                 <div className=\"landing-wrapper\">\n                    <Landing />\n                </div>\n            )\n        }\n\n    }\n}\nconst mapStateToProps = (state) => {  \n    let pointsData =[]\n    const membersPointsData = state.group.defaultGroupData ? state.group.defaultGroupData.pointsRecord : null\n    membersPointsData && Object.keys(membersPointsData).forEach(e => {\n        pointsData.push(membersPointsData[e])\n    })\n\n    const defaultGroupData = state.group.defaultGroupData ? state.group.defaultGroupData :null\n    const auth = state.firebase.auth ? state.firebase.auth : null\n    const membersInfo = state.group.defaultGroupData ? state.group.defaultGroupData.membersInfo : null\n    const membersPointsRecord = state.group.defaultGroupData ? state.group.defaultGroupData.pointsRecord : null\n    return {\n        tasks: state.firestore.ordered.tasks,\n        auth: auth,\n        groupsUid: state.firebase.profile.groupsUid,\n        groupsData: state.group.groups,\n        profile:state.firebase.profile,\n        defaultGroupData:defaultGroupData,\n        membersInfo:membersInfo,\n        membersPointsRecord:membersPointsRecord,\n        tasksData:state.task.tasksData,\n        unassignedTasksData: state.task.unassignedTasksData,\n        assignedTasksData: state.task.assignedTasksData,\n        pendingTasksData: state.task.pendingTasksData,\n        completeTasksData: state.task.completeTasksData,\n        pointsData:pointsData\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchGroupList: (groupsUid) => dispatch(fetchGroupList(groupsUid)),\n        fetchTaskList: (userUid) => dispatch(fetchTaskList(userUid)),\n        fetchGroupDetails: (groupUid) => dispatch(fetchGroupDetails(groupUid))\n    }\n\n}\nexport default  connect( mapStateToProps, mapDispatchToProps)(Dashboard);\n","import React, { Component } from 'react'\n\n\nimport { connect } from 'react-redux'\nimport { createTask, confirmTaskAlert } from '../store/actions/taskActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {  MuiPickersUtilsProvider, DateTimePicker } from \"material-ui-pickers\";\nexport class CreatTask extends Component {\n    state = {\n        title: '',\n        content: '',\n        category:'trash',\n        expiryDate: new Date(new Date().getTime() + 7 * 24 * 60 * 60 * 1000),\n        verifybyImage:false\n    }\n    handleBack = (e) =>{\n      e.preventDefault();\n      window.location.href=\"#/\"\n    }\n    handleChange = (e) =>{\n        this.setState({\n           [e.target.id]: e.target.value\n        })\n    }\n    toggleChange = () => {\n      this.setState({\n        verifybyImage: !this.state.verifybyImage,\n      });\n    }\n    handleDateChange = date => {\n      this.setState({ expiryDate: date });\n    };\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.createTask(this.state);\n    }\n    handleAlert = (e) => {\n      this.props.confirmTaskAlert()\n    }\n  render() {\n    const { expiryDate } = this.state;\n    return (\n      <div className=\"\">\n        {this.props.taskErr ? (\n          <div className=\"popup-layer\">\n          <div className=\"container\">\n            <div className=\"information-window\">\n                <div className=\"container\">           \n                <h1 className=\"alert-icon\"><FontAwesomeIcon icon={ faExclamationTriangle }/></h1>\n                <h2>Error</h2>\n                <h4>The field of title cannot be empty</h4>\n                <hr/>\n                <button className=\"medium-button\"\n                          onClick={ this.handleAlert }>OK</button>\n                </div>\n            </div>\n          </div>\n        </div>\n        ): null }\n\n        <div className=\"container\">\n        <h2 className=\"sub-instruciton-title\">Post a task</h2>\n          <form className=\"signinform\"\n              onSubmit={this.handleSubmit}>\n              <label className=\"label-font\" htmlFor=\"title\">Title</label>\n              <div className=\"task-input-row\">\n                  <input type=\"test\"\n                          id=\"title\"\n                          onChange={this.handleChange}/>\n              </div>\n              <label className=\"label-font\" htmlFor=\"expiryDate\">Expiry Date</label>\n              <div className=\"task-input-row\">\n                <MuiPickersUtilsProvider id=\"expiryDate\"  utils={DateFnsUtils}>\n                    <div className=\"pickers\">\n                      <DateTimePicker id=\"inputdate\" className=\"input-date browser-default\" value={expiryDate} onChange={this.handleDateChange} />\n                    </div>\n                  </MuiPickersUtilsProvider>\n              </div>\n              <label className=\"label-font\" htmlFor=\"expiryDate\">Category</label>\n              <div className=\"task-input-row\">\n                  <select value={this.state.value} name=\"\" id=\"category\" onChange={this.handleChange}>\n                    <option value=\"trash\">Trash</option>\n                    <option value=\"clean\">Clean</option>\n                    <option value=\"bathroom\">Bathroom</option>\n                    <option value=\"kitchen\">Kitchen</option>\n                    <option value=\"floor\">Floor</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n              </div>\n              <label className=\"label-font\" htmlFor=\"verifybyImage\">Verification condition</label>\n              <div className=\"checkbox-wrapper\">\n              <div className=\"task-checkboxinput-row\">\n                  <input type=\"checkbox\"\n                          id=\"verifybyImage\"\n                          checked= {this.state.verifybyImage}\n                          onChange={this.toggleChange}/>\n                  <span className=\"checkmark \"></span>\n              </div>\n              <div className=\"checkbox-text\">Photo proof</div>\n              </div>\n\n              <label className=\"label-font\" htmlFor=\"content\">Description</label>\n              <div className=\"textarea-row\">\n                  <textarea type=\"text\"\n                          id=\"content\"\n                          onChange={this.handleChange}/>\n              </div>\n              <div className=\"feature-row\">\n                  <button onClick={this.handleBack} \n                          className=\"medium-square-button cancel-button\">Back</button>\n                  <button className=\"medium-square-button\">Save</button>\n              </div>\n          </form>\n\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    taskErr: state.task.err\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    createTask: (task) => dispatch(createTask(task)),\n    confirmTaskAlert: ()=>dispatch(confirmTaskAlert())\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(CreatTask);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTask, acceptTask } from '../store/actions/taskActions'\nexport class TaskDetails extends Component {\n    handleBack = (e) =>{\n        e.preventDefault();\n        window.location.href=\"#/\"\n      }\n    handleAccept = (e)=> {\n        this.props.acceptTask(this.props.match.params.id)\n    }\n    componentDidMount(){\n        this.props.fetchTask(this.props.match.params.id)\n    }\n    componentWillUnmount(){\n        this.props.fetchTask()\n    }\n  render() {\n    const id = this.props.match.params.id\n    if (this.props.taskdetails.data){\n        const { expiryDate, author, content, title } = this.props.taskdetails.data\n        return(\n            <div className=\"taskdetails-wrapper\" key={id} >\n                <div className=\"container \">\n                    <h2 className=\"sub-instruciton-title\">Accept the Task</h2>\n                    <div className=\"task-card\">\n                            <h2 className=\"title\">{title}</h2>\n                            <p className=\"expirydate\">Expiry Date | { expiryDate.toDate().toTimeString().replace('GMT+0800 (Taipei Standard Time)','') + \" \"+ expiryDate.toDate().toDateString() }</p>\n                            <p className=\"expirydate\">Posted by | {author}</p>\n                            <p>{content}</p>\n                            \n                    </div>\n                </div>\n                <div className=\"feature-row\">\n                <button onClick={this.handleBack} \n                        className=\"medium-square-button cancel-button\">Back</button>\n                <button onClick={this.handleAccept}\n                        className=\"medium-square-button\">Accept</button>\n                </div>\n                \n            </div>\n           \n        )\n    } else {\n        return (\n            <div className=\"container\">\n                <div className=\"bouncing-loader\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n            </div>\n        )\n    }\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n    // const id = ownProps.match.params.id\n    // const tasks = state.firestore.data.tasks\n    // const task = tasks ? tasks[id] : null\n    const taskdetails = state.task.taskData ? state.task.taskData : null\n    return {\n        taskdetails: taskdetails\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        fetchTask: (taskUid) => dispatch(fetchTask(taskUid)),\n        acceptTask:(taskUid) => dispatch(acceptTask(taskUid))\n    }\n}\n\nexport default    connect(mapStateToProps,mapDispatchToProps)(TaskDetails);\n// export default compose(\n//     connect(mapStateToProps,mapDispatchToProps),\n//     firestoreConnect([\n//         { collection: 'tasks' }\n//     ])\n// )(TaskDetails);\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux'\nimport { confirmTaskAlert } from '../store/actions/taskActions'\nexport class AlertWindow extends Component {\n  handleAlert = (e) => {\n    this.props.confirmTaskAlert()\n  }\n  render() {\n    return (\n          <div className=\"popup-layer\">\n            <div className=\"container\">\n                <div className=\"information-window\">\n                    <div className=\"container\">           \n                    <h1 className=\"alert-icon\"><FontAwesomeIcon icon={ faExclamationTriangle }/></h1>\n                    <h2>Error</h2>\n                    <h4>{this.props.errorMessage}</h4>\n                    <hr/>\n                    <button className=\"medium-button\"\n                            onClick={ this.handleAlert }>OK</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return{\n    errorMessage: state.task.errMessage\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    confirmTaskAlert: ()=>dispatch(confirmTaskAlert())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertWindow);\n","import React, { Component } from 'react';\nimport AlertWindow from '../alert/AlertWindow'\nimport { connect } from 'react-redux';\nimport { fetchTask, reportTaskWithImage, reportTaskWOImage } from '../store/actions/taskActions'\nexport class TaskMemo extends Component {\n    constructor(props) {\n        super(props)\n        this.fileInput = React.createRef()\n    }\n    state = {\n        files:[],\n        imagePreviewUrl:[],\n        imagefile:null\n    }\n    handleBack = (e) =>{\n        e.preventDefault();\n        window.location.href=\"#/\"\n      }\n    handleChange = (e) =>{\n        this.setState({\n            files:  e.target.files,\n            imagePreviewUrl: URL.createObjectURL(e.target.files[0]),\n            file:e.target.files[0]\n        })\n    }\n    handleReportWithImage = (e) => {\n        e.preventDefault()\n        const taskUid = this.props.match.params.id\n        const { assign } = this.props.taskdetails.data\n        this.props.reportTaskWithImage(taskUid,assign,this.state.file)\n    }\n    handleReport = (e) =>{\n        e.preventDefault()\n        const taskUid = this.props.match.params.id\n        const { assign } = this.props.taskdetails.data\n        this.props.reportTaskWOImage(taskUid,assign)\n    }\n    componentDidMount(){\n        this.props.fetchTask(this.props.match.params.id)\n    }\n    componentWillUnmount(){\n        this.props.fetchTask()\n    }\n  render() {\n    const id = this.props.match.params.id\n    if (this.props.taskdetails.data){\n        const { verifybyImage,expiryDate, assign,author, content, title } = this.props.taskdetails.data\n        return(\n            <div>\n            {this.props.taskErr ? <AlertWindow error={ this.props.match.params.id }/> : null }\n                <div className=\"taskdetails-wrapper\" key={id} >\n                    <div className=\"container \">\n                        <h2 className=\"sub-instruciton-title\">Report the Task</h2>\n                        <div className=\"task-card\">\n                                <h2 className=\"title\">{title}</h2>\n                                <p className=\"expirydate\">Expiry Date | { expiryDate.toDate().toTimeString().replace('GMT+0800 (Taipei Standard Time)','') + \" \"+ expiryDate.toDate().toDateString() }</p>\n                                <p className=\"expirydate\">Posted by | {author}</p>\n                                <p className=\"expirydate\">Assigned to | {assign.assignedTo}</p>\n                                <p className=\"expirydate\">Description</p>\n                                <p>{content}</p>\n                                {this.state.imagePreviewUrl[0] && (\n                                    <div>\n                                    <p className=\"expirydate\">Image attachment</p>\n                                    <div className=\"image-row\">\n                                        <div className=\"image-box\">\n                                            <div className=\"image-box-inner\">\n                                            <img className=\"\" src={this.state.imagePreviewUrl} alt=\"\"/> \n                                            </div>\n                                        </div>\n                                    </div>\n                                    </div>\n                                )}\n    \n                        </div>\n                        {verifybyImage ? (\n                            <div className=\"uploadwrapper\">\n                            <form action=\"\"\n                                onSubmit={this.handleReportWithImage}>\n                                <div className=\"task-input-row\">\n                                    <label htmlFor=\"imagefile\">attachment</label>\n                                    <input id=\"imagefile\"\n                                        type=\"file\"\n                                        onChange={this.handleChange}\n                                        ref={this.fileInput}/>\n                                </div>\n                                <div className=\"feature-row\">\n                                <button onClick={this.handleBack} \n                                        className=\"medium-square-button cancel-button\">Back</button>\n                                <button  className=\"medium-square-button\">Finish</button>\n                                </div>\n                            </form>\n                        </div>\n                        ): (\n                        <div className=\"uploadwrapper\">\n                            <form action=\"\"\n                                onSubmit={this.handleReport}>\n                                <div className=\"feature-row\">\n                                <button onClick={this.handleBack} \n                                        className=\"medium-square-button cancel-button\">Back</button>\n                                <button  className=\"medium-square-button\">Finish</button>\n                                </div>\n                            </form>\n                        </div>)}\n\n                    </div>\n                    \n                </div>\n            </div>\n           \n        )\n    } else {\n        return (\n            <div className=\"container\">\n                 <div className=\"bouncing-loader\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n            </div>\n        )\n    }\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n    const taskdetails = state.task.taskData ? state.task.taskData : null\n    return {\n        taskdetails: taskdetails,\n        taskErr: state.task.err\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchTask: (taskUid) => dispatch(fetchTask(taskUid)),\n        reportTaskWithImage: (taskUid,assign,imagefile)=>dispatch(reportTaskWithImage(taskUid,assign,imagefile)),\n        reportTaskWOImage: (taskUid,assign)=>dispatch(reportTaskWOImage(taskUid,assign))\n    }\n}\n\nexport default  connect(mapStateToProps,mapDispatchToProps)(TaskMemo);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTask, approveTask } from '../store/actions/taskActions'\n\nexport class TaskProcess extends Component {\n    handleBack = (e) =>{\n        e.preventDefault();\n        window.location.href=\"#/\"\n      }\n    handleApprove = (e) => {\n        const { assign } = this.props.taskdetails.data\n        this.props.approveTask(this.props.match.params.id,assign)\n    }\n    componentDidMount(){\n        this.props.fetchTask(this.props.match.params.id)\n    }\n    componentWillUnmount(){\n        this.props.fetchTask()\n    }\n  render() {\n    const id = this.props.match.params.id\n    if (this.props.taskdetails.data){\n        const { expiryDate,pendingImgURL, assign, author, title } = this.props.taskdetails.data\n        return(\n            <div className=\"taskdetails-wrapper\" key={id} >\n                <div className=\"container \">\n                    <h2 className=\"sub-instruciton-title\">Approve the Task</h2>\n                    <div className=\"task-card\">\n                            <h2 className=\"title\">{title}</h2>\n                            <p className=\"expirydate\">Expiry Date | { expiryDate.toDate().toTimeString().replace('GMT+0800 (Taipei Standard Time)','') + \" \"+ expiryDate.toDate().toDateString() }</p>\n                            <p className=\"expirydate\">Assigned to | {assign.assignedTo}</p>\n                            <p className=\"expirydate\">Posted by | {author}</p>\n                            {pendingImgURL ? (\n                                <div>\n                                <p className=\"expirydate\">Image attachment</p>\n                                <div className=\"image-row\">\n                                    <div className=\"image-box\">\n                                        <div className=\"image-box-inner\">\n                                        <img className=\"\" src={pendingImgURL} alt=\"\"/> \n                                        </div>\n                                    </div>\n                                 </div>\n                                </div>\n                            ):null\n                            }\n                            \n                    </div>\n                </div>\n                <div className=\"feature-row\">\n                <button onClick={this.handleBack} \n                        className=\"medium-square-button cancel-button\">Back</button>\n                <button onClick={this.handleApprove}\n                        className=\"medium-square-button\">Approve</button>\n                </div>\n                \n            </div>\n           \n        )\n    } else {\n        return (\n            <div className=\"container\">\n                <div className=\"bouncing-loader\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n            </div>\n        )\n    }\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n    const taskdetails = state.task.taskData ? state.task.taskData : null\n    return {\n        taskdetails: taskdetails\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        fetchTask: (taskUid) => dispatch(fetchTask(taskUid)),\n        approveTask:(taskUid,assign)=>dispatch(approveTask(taskUid,assign))\n    }\n}\n\nexport default  connect(mapStateToProps,mapDispatchToProps)(TaskProcess);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signUpGroup } from '../store/actions/authActions'\n\nexport class SignUpGroup extends Component {\n    state = {\n      groupName: '',\n      groupId: '',\n      groupPassword: ''\n    }\n    handleChange = (e) =>{\n        this.setState({\n           [e.target.id]: e.target.value\n        })\n      //  console.log(this.state)\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.signUpGroup(this.state)\n    }\n    \n  render() {\n    return (\n        <div className=\"formoutter\">\n          <div className=\"formwrapper-bottom\">\n            <form className=\"signinform\"\n                onSubmit={this.handleSubmit}>\n                <label className=\"label-font\" htmlFor=\"groupName\">Group Name</label>\n                <div className=\"input-row\">\n                    <input type=\"text\"\n                            id=\"groupName\"\n                            onChange={this.handleChange}\n                            />\n                </div>\n                <label className=\"label-font\" htmlFor=\"groupId\">Group ID</label>\n                <div className=\"input-row\">\n                    <input type=\"text\"\n                            id=\"groupId\"\n                            onChange={this.handleChange}\n                            />\n                </div>\n                <label className=\"label-font\" htmlFor=\"groupPassword\">Group Password</label>\n                <div className=\"input-row\">\n                    <input type=\"password\"\n                            id=\"groupPassword\"\n                            onChange={this.handleChange}\n                            />\n                </div>\n                <div className=\"text-row error-holder\">\n                    { this.props.groupError ? <p className=\"alert-font\">{ this.props.groupError }</p>  : null} \n                </div>\n                <div className=\"feature-row\">\n                    <button className=\"medium-button\">Create Group</button>\n                </div>\n            </form>\n          </div>\n        </div>\n\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n    // console.log(state)\n    return {\n      auth: state.firebase.auth, //for checking the login or not\n      groupError: state.auth.groupError\n    }\n  }\nconst mapDispatchToProps = (dispatch) => {\n    return{\n      signUpGroup: (newGroup) => dispatch(signUpGroup(newGroup))\n    }\n  }\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUpGroup);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n// import { createHashHistory } from 'history'\nimport { signInGroup } from '../store/actions/authActions'\n\nclass SignInGroup extends Component {\n    state = {\n      groupId: '',\n      groupPassword: ''\n    }\n    handleChange = (e) =>{\n        this.setState({\n           [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.signInGroup(this.state)\n    }\n  render() {\n    return (\n        <div className=\"formoutter\">\n          <div className=\"formwrapper-bottom\">\n            <form className=\"signinform\"\n                onSubmit={this.handleSubmit}>\n                <label className=\"label-font\" htmlFor=\"groupId\">Group ID</label>\n                <div className=\"input-row\">\n                    \n                    <input type=\"text\"\n                            id=\"groupId\"\n                            onChange={this.handleChange}/>\n                </div>\n                <label className=\"label-font\" htmlFor=\"groupPassword\">Password</label>\n                <div className=\"input-row\">\n                    <input type=\"password\"\n                            id=\"groupPassword\"\n                            onChange={this.handleChange}/>\n                </div>\n                <div className=\"text-row error-holder\">\n                    { this.props.groupError ? <p className=\"alert-font\">{ this.props.groupError }</p>  : null} \n                </div>\n                <div className=\"feature-row\">\n                    <button className=\"medium-button\">Join Group</button>\n                </div>\n            </form>\n          </div>\n        </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n    return {\n      groupError: state.auth.groupError\n    }\n}\nconst mapDispatchToProps = (dispatch) =>{\n  return {\n    signInGroup: (creds) => dispatch(signInGroup(creds))\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignInGroup);\n","import React from 'react'\nimport { Route, NavLink } from 'react-router-dom'\nimport SignUpGroup from './SignUpGroup'\nimport SignInGroup from './SignInGroup'\nconst SignGroup = () =>{\n    return(\n        <div className=\"container\">\n        <h2 className=\"sub-instruciton-title\">Join the Homie Group</h2>\n            <div className=\"formoutter\">\n                <div className=\"formwrapper-top \">\n                    <div className=\"link-wrapper\">\n                        <NavLink className=\"signgroup-tab\" activeClassName=\"signgroup-tab-active\" to=\"/signgroup/signup\" >Create Group</NavLink>\n                        <NavLink className=\"signgroup-tab\" activeClassName=\"signgroup-tab-active\" to=\"/signgroup/signin\" >Join Group</NavLink>\n                    </div>\n                    {/* <form className=\"signinform\">\n                    <div className=\"feature-row\">\n                    <button className=\"medium-button\">Create Group</button>\n                    </div>\n                    </form> */}\n                </div>\n            </div>\n\n            <Route path=\"/signgroup/signup\" component={SignUpGroup} />\n            <Route path=\"/signgroup/signin\" component={SignInGroup} />\n        </div>\n       \n    )\n}\nexport default SignGroup","import React from 'react'\nimport { HashRouter , Switch, Route} from 'react-router-dom'\nimport './index.css'\n\n// Components\nimport Navbar from './components/layout/Navbar'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport Dashboard from './components/dashboard/Dashboard'\nimport CreateTask from'./components/tasks/CreateTask'\nimport TaskDetails from './components/tasks/TaskDetails'\nimport TaskMemo from './components/tasks/TaskMemo'\nimport TaskProcess from './components/tasks/TaskProcess'\nimport SignGroup from './components/auth/SignGroup'\n\n\n\nclass App extends React.Component{\n\n    render() {\n        \n        return(\n        <HashRouter  >\n            <div className=\"app\">\n                <Navbar />\n                <Switch>\n                    <Route exact path=\"/\" component={Dashboard} />\n                    <Route path=\"/signin\" component={SignIn} />\n                    <Route exact path=\"/task/:id\" component={TaskDetails} />\n                    <Route exact path=\"/task/memo/:id\" component={TaskMemo} />\n                    <Route exact path=\"/task/process/:id\" component={TaskProcess} />\n                    <Route path=\"/signup\" component={ ()=>  <SignUp/> }/>\n                    <Route path=\"/post\" component={CreateTask} />\n                    <Route path=\"/signgroup\" component={SignGroup} />\n                </Switch>\n            </div>\n        </HashRouter> \n        );\n    }\n}\n\n export default App;\n","const initState = {\n    authError: null,\n    groupError: null\n}\nconst authReducer = (state = initState, action ) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return  {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success and login');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        case 'SIGNINGROUP_SUCCESS':\n        console.log('signin group success')\n        return {\n            ...state,\n            groupError: null\n            }\n        case 'SIGNINGROUP_NOTEXIST':\n            console.log('This group id was not exist')\n            return {\n                ...state,\n                groupError: \"This group id was not exist\"\n                    }\n        case 'SIGNINGROUP_EMPTY':\n            console.log('All fields are required')\n            return {\n                ...state,\n                groupError: \"All fields are required\"\n                    }\n        case 'SIGNINGROUP_ERROR':\n            console.log('The password is incorrect')\n            return {\n                ...state,\n                groupError: \"That was an invalid password\"\n                    }\n        case 'SIGNINGROUP_ERROR_EXIST':\n        console.log('This member already exist')\n        return {\n            ...state,\n            groupError: \"You have been already joined this group\"\n                }\n        case 'SIGNUPGROUP_SUCCESS':\n            console.log('signup group success')\n            return {\n                ...state,\n                groupError: null\n            }\n        case 'SIGNUPGROUP_ERROR':\n        console.log('signup group error')\n        return {\n            ...state,\n            groupError: \"This group id is already in use by another account\"\n            }\n        default:\n            return state\n    }\n    \n}\nexport default authReducer","const initState = {\n    tasks:[],\n    tasksData:[],\n    taskData:[],\n    unassignedTasksData:[],\n    assignedTasksData:[],\n    pendingTasksData:[],\n    completeTasksData:[],\n    err:false,\n    errMessage:null,\n}\n\nconst taskReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_TASK':\n        console.log('create task', action.task)\n         return state\n        case 'TASK_BLANK':\n            return{\n                ...state,\n                err:true\n            }\n        case 'TASK_BLANK_NOPIC':\n        return{\n            ...state,\n            err:true,\n            errMessage:\"This task cannot report without a photo.\"\n        }\n        case 'TASK_NOT_ASSIGNED':\n        return{\n            ...state,\n            err:true,\n            errMessage:\"You are not assigned to this task\"\n        }\n        case 'RESET_TASK_ALERT':\n        return{\n            ...state,\n            err:false,\n            errMessage:null\n        }\n        case 'CREATE_TASK_ERROR':\n            console.log('create task', action.err)\n            return state\n        case 'GET_TASKS':\n            return {\n                ...state,\n                tasksData:action.tasksData,\n                unassignedTasksData:action.unassignedTasksData,\n                assignedTasksData:action.assignedTasksData,\n                pendingTasksData:action.pendingTasksData,\n                completeTasksData:action.completeTasksData\n            }\n        case 'GET_TASK':\n            return {\n                    ...state,\n                    taskData:action.taskData\n                }\n        case 'EMPTY_TASK':\n            return{\n                ...state,\n                taskData:[]\n            } \n        case 'EMPTY_TASKS':\n            return {\n                ...state,\n                tasksData:[],\n                unassignedTasksData:[],\n                assignedTasksData:[],\n                pendingTasksData:[],\n                completeTasksData:[]\n            }\n        default:\n            return state\n    }\n    \n}\n\nexport default taskReducer","const initState = {\n    groups:null,\n    switchError:null,\n    defaultGroupData:null\n}\nconst groupReducer = (state = initState, action ) => {\n    switch(action.type){\n        case 'GROUP_ADD':\n            return {\n                ...state,\n                groups:action.groupsData\n            }\n        case 'SWITCHGROUP_SUCCESS':\n            return state\n        case 'SWITCHGROUP_ERROR':\n            return {\n                ...state,\n                switchError:action.error\n            }\n        case 'GET_GROUP':\n        return {\n            ...state,\n            defaultGroupData:action.groupData\n            }\n        case 'GET_GROUP_EMPTY':\n        return {\n            ...state,\n            defaultGroupData:null\n            }\n        default:\n            return state\n    }\n    \n}\nexport default groupReducer","import authReducer from './authReducer'\nimport taskReducer from './taskReducer'\nimport groupReducer from './groupReducer'\n\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\n\nconst rootReducer = combineReducers({\n   auth: authReducer,\n   task: taskReducer,\n   group: groupReducer,\n   firestore: firestoreReducer,\n   firebase: firebaseReducer \n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './components/store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n// import logger from 'redux-logger'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './components/config/fbConfig'\n\nconst store = createStore(rootReducer,\n    composeWithDevTools(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig,{ useFirestoreForProfile:true,\n                                      userProfile: 'users',\n                                      attachAuthIsReady: true,\n                                      firebaseStateName: 'firebase'})\n    ) \n\n);\n// ReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\n})\n\n\n"],"sourceRoot":""}